

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Mon Apr 17 12:18:17 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=3
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1,inline
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1,inline
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1,inline
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1,inline
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1,inline
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1,inline
    66                           	psect	text52,global,reloc=2,class=CODE,delta=1
    67                           	psect	text53,global,reloc=2,class=CODE,delta=1
    68                           	psect	text54,global,reloc=2,class=CODE,delta=1,inline
    69                           	psect	text55,global,reloc=2,class=CODE,delta=1,inline
    70                           	psect	text56,global,reloc=2,class=CODE,delta=1,inline
    71                           	psect	text57,global,reloc=2,class=CODE,delta=1,inline
    72                           	psect	text58,global,reloc=2,class=CODE,delta=1,inline
    73                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    74                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    75                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    76                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    77   000000                     
    78                           ; Generated 06/04/2022 GMT
    79                           ; 
    80                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    81                           ; All rights reserved.
    82                           ; 
    83                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    84                           ; 
    85                           ; Redistribution and use in source and binary forms, with or without modification, are
    86                           ; permitted provided that the following conditions are met:
    87                           ; 
    88                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    89                           ;        conditions and the following disclaimer.
    90                           ; 
    91                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    92                           ;        of conditions and the following disclaimer in the documentation and/or other
    93                           ;        materials provided with the distribution. Publication is not required when
    94                           ;        this file is used in an embedded application.
    95                           ; 
    96                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    97                           ;        software without specific prior written permission.
    98                           ; 
    99                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   100                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   101                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   102                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   103                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   104                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   105                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   106                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   107                           ; 
   108                           ; 
   109                           ; Code-generator required, PIC18F46K22 Definitions
   110                           ; 
   111                           ; SFR Addresses
   112   000000                     
   113 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
   114   000000                     
   115 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
   116   000000                     
   117 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
   118   000000                     
   119                           	psect	idataBANK0
   120   00CA18                     __pidataBANK0:
   121                           	callstack 0
   122                           
   123                           ;initializer for _trigger_conversion
   124   00CA18  1C                 	db	28
   125   00CA19  00                 	db	0
   126                           
   127                           ;initializer for _continous_conversion
   128   00CA1A  14                 	db	20
   129   00CA1B  01                 	db	1
   130                           
   131                           ;initializer for _lock_adc_registers
   132   00CA1C  14                 	db	20
   133   00CA1D  02                 	db	2
   134                           
   135                           ;initializer for _channel_config
   136   00CA1E  19                 	db	25
   137   00CA1F  0F                 	db	15
   138                           
   139                           ;initializer for _adc_software_reset
   140   00CA20  14                 	db	20
   141   00CA21  80                 	db	128
   142                           
   143                           ;initializer for _ADC_result0
   144   00CA22  0FFF               	dw	4095
   145   000000                     _TXREG1	set	4013
   146   000000                     _RCREG1	set	4014
   147   000000                     _SPBRG1	set	4015
   148   000000                     _TXSTA1	set	4012
   149   000000                     _ANSELA	set	3896
   150   000000                     _ANSELB	set	3897
   151   000000                     _ANSELC	set	3898
   152   000000                     _ANSELD	set	3899
   153   000000                     _TRISD	set	3989
   154   000000                     _TRISC	set	3988
   155   000000                     _TRISB	set	3987
   156   000000                     _LATC	set	3979
   157   000000                     _LATB	set	3978
   158   000000                     _LATA	set	3977
   159   000000                     _LATD	set	3980
   160   000000                     _LATE	set	3981
   161   000000                     _OSCTUNE	set	3995
   162   000000                     _OSCCON2	set	4050
   163   000000                     _OSCCON	set	4051
   164                           
   165                           	psect	nvBANK0
   166   0000FA                     __pnvBANK0:
   167                           	callstack 0
   168   0000FA                     _EUSART1_ErrorHandler:
   169                           	callstack 0
   170   0000FA                     	ds	2
   171   0000FC                     _EUSART1_OverrunErrorHandler:
   172                           	callstack 0
   173   0000FC                     	ds	2
   174   0000FE                     _EUSART1_FramingErrorHandler:
   175                           	callstack 0
   176   0000FE                     	ds	2
   177   000000                     _SSP1CON2bits	set	4037
   178   000000                     _SSP1STATbits	set	4039
   179   000000                     _SSP1CON1bits	set	4038
   180   000000                     _LATEbits	set	3981
   181   000000                     _RCSTA1bits	set	4011
   182   000000                     _TXSTA1bits	set	4012
   183   000000                     _INTCON2bits	set	4081
   184   000000                     _PIR1bits	set	3998
   185   000000                     _RCSTA1	set	4011
   186   000000                     _BAUDCON1	set	4024
   187   000000                     _TRISA	set	3986
   188   000000                     _TRISE	set	3990
   189   000000                     _WPUB	set	3937
   190   000000                     _ANSELE	set	3900
   191   000000                     _INTCONbits	set	4082
   192   000000                     _SSP1CON2	set	4037
   193   000000                     _SSP1CON1	set	4038
   194   000000                     _SSP1STAT	set	4039
   195   000000                     _SPBRGH1	set	4016
   196   000000                     _SSP1BUF	set	4041
   197   000000                     _SSP1ADD	set	4040
   198                           
   199                           	psect	mediumconst
   200   00FE7C                     __pmediumconst:
   201                           	callstack 0
   202   00FE7C  00                 	db	0
   203   00FE7D                     STR_24:
   204   00FE7D  62                 	db	98	;'b'
   205   00FE7E  65                 	db	101	;'e'
   206   00FE7F  66                 	db	102	;'f'
   207   00FE80  6F                 	db	111	;'o'
   208   00FE81  72                 	db	114	;'r'
   209   00FE82  65                 	db	101	;'e'
   210   00FE83  20                 	db	32
   211   00FE84  63                 	db	99	;'c'
   212   00FE85  68                 	db	104	;'h'
   213   00FE86  65                 	db	101	;'e'
   214   00FE87  63                 	db	99	;'c'
   215   00FE88  6B                 	db	107	;'k'
   216   00FE89  69                 	db	105	;'i'
   217   00FE8A  6E                 	db	110	;'n'
   218   00FE8B  67                 	db	103	;'g'
   219   00FE8C  20                 	db	32
   220   00FE8D  62                 	db	98	;'b'
   221   00FE8E  75                 	db	117	;'u'
   222   00FE8F  73                 	db	115	;'s'
   223   00FE90  79                 	db	121	;'y'
   224   00FE91  20                 	db	32
   225   00FE92  73                 	db	115	;'s'
   226   00FE93  74                 	db	116	;'t'
   227   00FE94  61                 	db	97	;'a'
   228   00FE95  74                 	db	116	;'t'
   229   00FE96  65                 	db	101	;'e'
   230   00FE97  0A                 	db	10
   231   00FE98  00                 	db	0
   232   00FE99                     STR_8:
   233   00FE99  2F                 	db	47
   234   00FE9A  2F                 	db	47
   235   00FE9B  2F                 	db	47
   236   00FE9C  2F                 	db	47
   237   00FE9D  2F                 	db	47
   238   00FE9E  2F                 	db	47
   239   00FE9F  2F                 	db	47
   240   00FEA0  2F                 	db	47
   241   00FEA1  2F                 	db	47
   242   00FEA2  2F                 	db	47
   243   00FEA3  2F                 	db	47
   244   00FEA4  2F                 	db	47
   245   00FEA5  20                 	db	32
   246   00FEA6  20                 	db	32
   247   00FEA7  20                 	db	32
   248   00FEA8  20                 	db	32
   249   00FEA9  20                 	db	32
   250   00FEAA  20                 	db	32
   251   00FEAB  20                 	db	32
   252   00FEAC  43                 	db	67	;'C'
   253   00FEAD  48                 	db	72	;'H'
   254   00FEAE  41                 	db	65	;'A'
   255   00FEAF  4E                 	db	78	;'N'
   256   00FEB0  4E                 	db	78	;'N'
   257   00FEB1  45                 	db	69	;'E'
   258   00FEB2  4C                 	db	76	;'L'
   259   00FEB3  31                 	db	49	;'1'
   260   00FEB4  00                 	db	0
   261   00FEB5                     STR_25:
   262   00FEB5  61                 	db	97	;'a'
   263   00FEB6  66                 	db	102	;'f'
   264   00FEB7  74                 	db	116	;'t'
   265   00FEB8  65                 	db	101	;'e'
   266   00FEB9  72                 	db	114	;'r'
   267   00FEBA  20                 	db	32
   268   00FEBB  63                 	db	99	;'c'
   269   00FEBC  68                 	db	104	;'h'
   270   00FEBD  65                 	db	101	;'e'
   271   00FEBE  63                 	db	99	;'c'
   272   00FEBF  6B                 	db	107	;'k'
   273   00FEC0  69                 	db	105	;'i'
   274   00FEC1  6E                 	db	110	;'n'
   275   00FEC2  67                 	db	103	;'g'
   276   00FEC3  20                 	db	32
   277   00FEC4  62                 	db	98	;'b'
   278   00FEC5  75                 	db	117	;'u'
   279   00FEC6  73                 	db	115	;'s'
   280   00FEC7  79                 	db	121	;'y'
   281   00FEC8  20                 	db	32
   282   00FEC9  73                 	db	115	;'s'
   283   00FECA  74                 	db	116	;'t'
   284   00FECB  61                 	db	97	;'a'
   285   00FECC  74                 	db	116	;'t'
   286   00FECD  65                 	db	101	;'e'
   287   00FECE  0A                 	db	10
   288   00FECF  00                 	db	0
   289   00FED0                     STR_1:
   290   00FED0  49                 	db	73	;'I'
   291   00FED1  6E                 	db	110	;'n'
   292   00FED2  69                 	db	105	;'i'
   293   00FED3  74                 	db	116	;'t'
   294   00FED4  69                 	db	105	;'i'
   295   00FED5  61                 	db	97	;'a'
   296   00FED6  6C                 	db	108	;'l'
   297   00FED7  69                 	db	105	;'i'
   298   00FED8  7A                 	db	122	;'z'
   299   00FED9  69                 	db	105	;'i'
   300   00FEDA  6E                 	db	110	;'n'
   301   00FEDB  67                 	db	103	;'g'
   302   00FEDC  20                 	db	32
   303   00FEDD  74                 	db	116	;'t'
   304   00FEDE  68                 	db	104	;'h'
   305   00FEDF  65                 	db	101	;'e'
   306   00FEE0  20                 	db	32
   307   00FEE1  41                 	db	65	;'A'
   308   00FEE2  44                 	db	68	;'D'
   309   00FEE3  43                 	db	67	;'C'
   310   00FEE4  2E                 	db	46
   311   00FEE5  2E                 	db	46
   312   00FEE6  2E                 	db	46
   313   00FEE7  0A                 	db	10
   314   00FEE8  00                 	db	0
   315   00FEE9                     STR_9:
   316   00FEE9  20                 	db	32
   317   00FEEA  20                 	db	32
   318   00FEEB  20                 	db	32
   319   00FEEC  20                 	db	32
   320   00FEED  20                 	db	32
   321   00FEEE  20                 	db	32
   322   00FEEF  20                 	db	32
   323   00FEF0  2F                 	db	47
   324   00FEF1  2F                 	db	47
   325   00FEF2  2F                 	db	47
   326   00FEF3  2F                 	db	47
   327   00FEF4  2F                 	db	47
   328   00FEF5  2F                 	db	47
   329   00FEF6  2F                 	db	47
   330   00FEF7  2F                 	db	47
   331   00FEF8  2F                 	db	47
   332   00FEF9  2F                 	db	47
   333   00FEFA  2F                 	db	47
   334   00FEFB  2F                 	db	47
   335   00FEFC  0A                 	db	10
   336   00FEFD  00                 	db	0
   337   00FEFE                     STR_5:
   338   00FEFE  46                 	db	70	;'F'
   339   00FEFF  49                 	db	73	;'I'
   340   00FF00  52                 	db	82	;'R'
   341   00FF01  53                 	db	83	;'S'
   342   00FF02  54                 	db	84	;'T'
   343   00FF03  20                 	db	32
   344   00FF04  44                 	db	68	;'D'
   345   00FF05  69                 	db	105	;'i'
   346   00FF06  67                 	db	103	;'g'
   347   00FF07  69                 	db	105	;'i'
   348   00FF08  74                 	db	116	;'t'
   349   00FF09  61                 	db	97	;'a'
   350   00FF0A  6C                 	db	108	;'l'
   351   00FF0B  20                 	db	32
   352   00FF0C  64                 	db	100	;'d'
   353   00FF0D  61                 	db	97	;'a'
   354   00FF0E  74                 	db	116	;'t'
   355   00FF0F  61                 	db	97	;'a'
   356   00FF10  3A                 	db	58	;':'
   357   00FF11  20                 	db	32
   358   00FF12  00                 	db	0
   359   00FF13                     STR_20:
   360   00FF13  53                 	db	83	;'S'
   361   00FF14  74                 	db	116	;'t'
   362   00FF15  61                 	db	97	;'a'
   363   00FF16  72                 	db	114	;'r'
   364   00FF17  74                 	db	116	;'t'
   365   00FF18  20                 	db	32
   366   00FF19  6F                 	db	111	;'o'
   367   00FF1A  66                 	db	102	;'f'
   368   00FF1B  20                 	db	32
   369   00FF1C  72                 	db	114	;'r'
   370   00FF1D  65                 	db	101	;'e'
   371   00FF1E  73                 	db	115	;'s'
   372   00FF1F  65                 	db	101	;'e'
   373   00FF20  74                 	db	116	;'t'
   374   00FF21  20                 	db	32
   375   00FF22  0A                 	db	10
   376   00FF23  00                 	db	0
   377   00FF24                     STR_28:
   378   00FF24  61                 	db	97	;'a'
   379   00FF25  66                 	db	102	;'f'
   380   00FF26  74                 	db	116	;'t'
   381   00FF27  65                 	db	101	;'e'
   382   00FF28  72                 	db	114	;'r'
   383   00FF29  20                 	db	32
   384   00FF2A  31                 	db	49	;'1'
   385   00FF2B  73                 	db	115	;'s'
   386   00FF2C  74                 	db	116	;'t'
   387   00FF2D  20                 	db	32
   388   00FF2E  6E                 	db	110	;'n'
   389   00FF2F  61                 	db	97	;'a'
   390   00FF30  63                 	db	99	;'c'
   391   00FF31  6B                 	db	107	;'k'
   392   00FF32  0A                 	db	10
   393   00FF33  00                 	db	0
   394   00FF34                     STR_29:
   395   00FF34  61                 	db	97	;'a'
   396   00FF35  66                 	db	102	;'f'
   397   00FF36  74                 	db	116	;'t'
   398   00FF37  65                 	db	101	;'e'
   399   00FF38  72                 	db	114	;'r'
   400   00FF39  20                 	db	32
   401   00FF3A  32                 	db	50	;'2'
   402   00FF3B  73                 	db	115	;'s'
   403   00FF3C  74                 	db	116	;'t'
   404   00FF3D  20                 	db	32
   405   00FF3E  6E                 	db	110	;'n'
   406   00FF3F  61                 	db	97	;'a'
   407   00FF40  63                 	db	99	;'c'
   408   00FF41  6B                 	db	107	;'k'
   409   00FF42  0A                 	db	10
   410   00FF43  00                 	db	0
   411   00FF44                     STR_30:
   412   00FF44  61                 	db	97	;'a'
   413   00FF45  66                 	db	102	;'f'
   414   00FF46  74                 	db	116	;'t'
   415   00FF47  65                 	db	101	;'e'
   416   00FF48  72                 	db	114	;'r'
   417   00FF49  20                 	db	32
   418   00FF4A  33                 	db	51	;'3'
   419   00FF4B  73                 	db	115	;'s'
   420   00FF4C  74                 	db	116	;'t'
   421   00FF4D  20                 	db	32
   422   00FF4E  6E                 	db	110	;'n'
   423   00FF4F  61                 	db	97	;'a'
   424   00FF50  63                 	db	99	;'c'
   425   00FF51  6B                 	db	107	;'k'
   426   00FF52  0A                 	db	10
   427   00FF53  00                 	db	0
   428   00FF54                     STR_22:
   429   00FF54  62                 	db	98	;'b'
   430   00FF55  65                 	db	101	;'e'
   431   00FF56  66                 	db	102	;'f'
   432   00FF57  6F                 	db	111	;'o'
   433   00FF58  72                 	db	114	;'r'
   434   00FF59  65                 	db	101	;'e'
   435   00FF5A  20                 	db	32
   436   00FF5B  74                 	db	116	;'t'
   437   00FF5C  72                 	db	114	;'r'
   438   00FF5D  69                 	db	105	;'i'
   439   00FF5E  67                 	db	103	;'g'
   440   00FF5F  67                 	db	103	;'g'
   441   00FF60  65                 	db	101	;'e'
   442   00FF61  72                 	db	114	;'r'
   443   00FF62  0A                 	db	10
   444   00FF63  00                 	db	0
   445   00FF64                     STR_21:
   446   00FF64  45                 	db	69	;'E'
   447   00FF65  6E                 	db	110	;'n'
   448   00FF66  64                 	db	100	;'d'
   449   00FF67  20                 	db	32
   450   00FF68  6F                 	db	111	;'o'
   451   00FF69  66                 	db	102	;'f'
   452   00FF6A  20                 	db	32
   453   00FF6B  72                 	db	114	;'r'
   454   00FF6C  65                 	db	101	;'e'
   455   00FF6D  73                 	db	115	;'s'
   456   00FF6E  65                 	db	101	;'e'
   457   00FF6F  74                 	db	116	;'t'
   458   00FF70  20                 	db	32
   459   00FF71  0A                 	db	10
   460   00FF72  00                 	db	0
   461   00FF73                     STR_26:
   462   00FF73  61                 	db	97	;'a'
   463   00FF74  66                 	db	102	;'f'
   464   00FF75  74                 	db	116	;'t'
   465   00FF76  65                 	db	101	;'e'
   466   00FF77  72                 	db	114	;'r'
   467   00FF78  20                 	db	32
   468   00FF79  72                 	db	114	;'r'
   469   00FF7A  65                 	db	101	;'e'
   470   00FF7B  61                 	db	97	;'a'
   471   00FF7C  64                 	db	100	;'d'
   472   00FF7D  69                 	db	105	;'i'
   473   00FF7E  6E                 	db	110	;'n'
   474   00FF7F  67                 	db	103	;'g'
   475   00FF80  0A                 	db	10
   476   00FF81  00                 	db	0
   477   00FF82                     STR_23:
   478   00FF82  61                 	db	97	;'a'
   479   00FF83  66                 	db	102	;'f'
   480   00FF84  74                 	db	116	;'t'
   481   00FF85  65                 	db	101	;'e'
   482   00FF86  72                 	db	114	;'r'
   483   00FF87  20                 	db	32
   484   00FF88  74                 	db	116	;'t'
   485   00FF89  72                 	db	114	;'r'
   486   00FF8A  69                 	db	105	;'i'
   487   00FF8B  67                 	db	103	;'g'
   488   00FF8C  67                 	db	103	;'g'
   489   00FF8D  65                 	db	101	;'e'
   490   00FF8E  72                 	db	114	;'r'
   491   00FF8F  0A                 	db	10
   492   00FF90  00                 	db	0
   493   00FF91                     STR_27:
   494   00FF91  69                 	db	105	;'i'
   495   00FF92  6E                 	db	110	;'n'
   496   00FF93  73                 	db	115	;'s'
   497   00FF94  69                 	db	105	;'i'
   498   00FF95  64                 	db	100	;'d'
   499   00FF96  65                 	db	101	;'e'
   500   00FF97  20                 	db	32
   501   00FF98  77                 	db	119	;'w'
   502   00FF99  68                 	db	104	;'h'
   503   00FF9A  69                 	db	105	;'i'
   504   00FF9B  6C                 	db	108	;'l'
   505   00FF9C  65                 	db	101	;'e'
   506   00FF9D  0A                 	db	10
   507   00FF9E  00                 	db	0
   508   00FF9F                     STR_2:
   509   00FF9F  52                 	db	82	;'R'
   510   00FFA0  65                 	db	101	;'e'
   511   00FFA1  73                 	db	115	;'s'
   512   00FFA2  65                 	db	101	;'e'
   513   00FFA3  74                 	db	116	;'t'
   514   00FFA4  20                 	db	32
   515   00FFA5  44                 	db	68	;'D'
   516   00FFA6  4F                 	db	79	;'O'
   517   00FFA7  4E                 	db	78	;'N'
   518   00FFA8  45                 	db	69	;'E'
   519   00FFA9  21                 	db	33
   520   00FFAA  20                 	db	32
   521   00FFAB  0A                 	db	10
   522   00FFAC  00                 	db	0
   523   00FFAD                     STR_31:
   524   00FFAD  62                 	db	98	;'b'
   525   00FFAE  65                 	db	101	;'e'
   526   00FFAF  66                 	db	102	;'f'
   527   00FFB0  6F                 	db	111	;'o'
   528   00FFB1  72                 	db	114	;'r'
   529   00FFB2  65                 	db	101	;'e'
   530   00FFB3  20                 	db	32
   531   00FFB4  73                 	db	115	;'s'
   532   00FFB5  74                 	db	116	;'t'
   533   00FFB6  6F                 	db	111	;'o'
   534   00FFB7  70                 	db	112	;'p'
   535   00FFB8  0A                 	db	10
   536   00FFB9  00                 	db	0
   537   00FFBA                     STR_32:
   538   00FFBA  61                 	db	97	;'a'
   539   00FFBB  66                 	db	102	;'f'
   540   00FFBC  74                 	db	116	;'t'
   541   00FFBD  65                 	db	101	;'e'
   542   00FFBE  72                 	db	114	;'r'
   543   00FFBF  20                 	db	32
   544   00FFC0  73                 	db	115	;'s'
   545   00FFC1  74                 	db	116	;'t'
   546   00FFC2  6F                 	db	111	;'o'
   547   00FFC3  70                 	db	112	;'p'
   548   00FFC4  0A                 	db	10
   549   00FFC5  00                 	db	0
   550   00FFC6                     STR_3:
   551   00FFC6  41                 	db	65	;'A'
   552   00FFC7  44                 	db	68	;'D'
   553   00FFC8  43                 	db	67	;'C'
   554   00FFC9  20                 	db	32
   555   00FFCA  72                 	db	114	;'r'
   556   00FFCB  65                 	db	101	;'e'
   557   00FFCC  61                 	db	97	;'a'
   558   00FFCD  64                 	db	100	;'d'
   559   00FFCE  79                 	db	121	;'y'
   560   00FFCF  21                 	db	33
   561   00FFD0  0A                 	db	10
   562   00FFD1  00                 	db	0
   563   00FFD2                     STR_14:
   564   00FFD2  53                 	db	83	;'S'
   565   00FFD3  43                 	db	67	;'C'
   566   00FFD4  20                 	db	32
   567   00FFD5  64                 	db	100	;'d'
   568   00FFD6  61                 	db	97	;'a'
   569   00FFD7  74                 	db	116	;'t'
   570   00FFD8  61                 	db	97	;'a'
   571   00FFD9  3A                 	db	58	;':'
   572   00FFDA  20                 	db	32
   573   00FFDB  00                 	db	0
   574   00FFDC                     STR_16:
   575   00FFDC  56                 	db	86	;'V'
   576   00FFDD  6F                 	db	111	;'o'
   577   00FFDE  6C                 	db	108	;'l'
   578   00FFDF  74                 	db	116	;'t'
   579   00FFE0  61                 	db	97	;'a'
   580   00FFE1  67                 	db	103	;'g'
   581   00FFE2  65                 	db	101	;'e'
   582   00FFE3  3A                 	db	58	;':'
   583   00FFE4  20                 	db	32
   584   00FFE5  00                 	db	0
   585   00FFE6                     STR_7:
   586   00FFE6  48                 	db	72	;'H'
   587   00FFE7  45                 	db	69	;'E'
   588   00FFE8  4C                 	db	76	;'L'
   589   00FFE9  4C                 	db	76	;'L'
   590   00FFEA  4F                 	db	79	;'O'
   591   00FFEB  21                 	db	33
   592   00FFEC  0A                 	db	10
   593   00FFED  00                 	db	0
   594   00FFEE                     STR_13:
   595   00FFEE  25                 	db	37
   596   00FFEF  2E                 	db	46
   597   00FFF0  34                 	db	52	;'4'
   598   00FFF1  67                 	db	103	;'g'
   599   00FFF2  00                 	db	0
   600   00FFF3                     STR_33:
   601   00FFF3  69                 	db	105	;'i'
   602   00FFF4  6E                 	db	110	;'n'
   603   00FFF5  66                 	db	102	;'f'
   604   00FFF6  00                 	db	0
   605   00FFF7                     STR_36:
   606   00FFF7  6E                 	db	110	;'n'
   607   00FFF8  61                 	db	97	;'a'
   608   00FFF9  6E                 	db	110	;'n'
   609   00FFFA  00                 	db	0
   610   00FFFB                     STR_4:
   611   00FFFB  25                 	db	37
   612   00FFFC  78                 	db	120	;'x'
   613   00FFFD  00                 	db	0
   614   00FFFE  00                 	db	0	; dummy byte at the end
   615   000000                     
   616                           ; #config settings
   617                           
   618                           	psect	cinit
   619   00CC10                     __pcinit:
   620                           	callstack 0
   621   00CC10                     start_initialization:
   622                           	callstack 0
   623   00CC10                     __initialization:
   624                           	callstack 0
   625                           
   626                           ; Initialize objects allocated to BANK0 (12 bytes)
   627                           ; load TBLPTR registers with __pidataBANK0
   628   00CC10  0E18               	movlw	low __pidataBANK0
   629   00CC12  6EF6               	movwf	tblptrl,c
   630   00CC14  0ECA               	movlw	high __pidataBANK0
   631   00CC16  6EF7               	movwf	tblptrh,c
   632   00CC18  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   633   00CC1A  6EF8               	movwf	tblptru,c
   634   00CC1C  EE00  F0EE         	lfsr	0,__pdataBANK0
   635   00CC20  EE10 F00C          	lfsr	1,12
   636   00CC24                     copy_data0:
   637   00CC24  0009               	tblrd		*+
   638   00CC26  CFF5 FFEE          	movff	tablat,postinc0
   639   00CC2A  50E5               	movf	postdec1,w,c
   640   00CC2C  50E1               	movf	fsr1l,w,c
   641   00CC2E  E1FA               	bnz	copy_data0
   642                           
   643                           ; Clear objects allocated to BANK1 (100 bytes)
   644   00CC30  EE01  F000         	lfsr	0,__pbssBANK1
   645   00CC34  0E64               	movlw	100
   646   00CC36                     clear_0:
   647   00CC36  6AEE               	clrf	postinc0,c
   648   00CC38  06E8               	decf	wreg,f,c
   649   00CC3A  E1FD               	bnz	clear_0
   650                           
   651                           ; Clear objects allocated to BANK0 (63 bytes)
   652   00CC3C  EE00  F0AF         	lfsr	0,__pbssBANK0
   653   00CC40  0E3F               	movlw	63
   654   00CC42                     clear_1:
   655   00CC42  6AEE               	clrf	postinc0,c
   656   00CC44  06E8               	decf	wreg,f,c
   657   00CC46  E1FD               	bnz	clear_1
   658   00CC48                     end_of_initialization:
   659                           	callstack 0
   660   00CC48                     __end_of__initialization:
   661                           	callstack 0
   662   00CC48  0100               	movlb	0
   663   00CC4A  EFC5  F06E         	goto	_main	;jump to C main() function
   664                           
   665                           	psect	bssBANK0
   666   0000AF                     __pbssBANK0:
   667                           	callstack 0
   668   0000AF                     _ADC_result:
   669                           	callstack 0
   670   0000AF                     	ds	6
   671   0000B5                     floorf@F526:
   672                           	callstack 0
   673   0000B5                     	ds	4
   674   0000B9                     ___fpclassifyf@F465:
   675                           	callstack 0
   676   0000B9                     	ds	4
   677   0000BD                     _voltage:
   678                           	callstack 0
   679   0000BD                     	ds	4
   680   0000C1                     _SC_voltage:
   681                           	callstack 0
   682   0000C1                     	ds	4
   683   0000C5                     _width:
   684                           	callstack 0
   685   0000C5                     	ds	2
   686   0000C7                     _prec:
   687                           	callstack 0
   688   0000C7                     	ds	2
   689   0000C9                     _flags:
   690                           	callstack 0
   691   0000C9                     	ds	1
   692   0000CA                     _eusart1RxLastError:
   693                           	callstack 0
   694   0000CA                     	ds	1
   695   0000CB                     _DigitalBuffer:
   696                           	callstack 0
   697   0000CB                     	ds	20
   698   0000DF                     _ResultBuffer:
   699                           	callstack 0
   700   0000DF                     	ds	15
   701                           
   702                           	psect	dataBANK0
   703   0000EE                     __pdataBANK0:
   704                           	callstack 0
   705   0000EE                     _trigger_conversion:
   706                           	callstack 0
   707   0000EE                     	ds	2
   708   0000F0                     _continous_conversion:
   709                           	callstack 0
   710   0000F0                     	ds	2
   711   0000F2                     _lock_adc_registers:
   712                           	callstack 0
   713   0000F2                     	ds	2
   714   0000F4                     _channel_config:
   715                           	callstack 0
   716   0000F4                     	ds	2
   717   0000F6                     _adc_software_reset:
   718                           	callstack 0
   719   0000F6                     	ds	2
   720   0000F8                     _ADC_result0:
   721                           	callstack 0
   722   0000F8                     	ds	2
   723                           
   724                           	psect	bssBANK1
   725   000100                     __pbssBANK1:
   726                           	callstack 0
   727   000100                     _dbuf:
   728                           	callstack 0
   729   000100                     	ds	80
   730   000150                     _SCBuffer:
   731                           	callstack 0
   732   000150                     	ds	20
   733                           
   734                           	psect	cstackBANK0
   735   000060                     __pcstackBANK0:
   736                           	callstack 0
   737   000060                     _efgtoa$1547:
   738                           	callstack 0
   739                           
   740                           ; 2 bytes @ 0x0
   741   000060                     	ds	2
   742   000062                     _efgtoa$1553:
   743                           	callstack 0
   744                           
   745                           ; 2 bytes @ 0x2
   746   000062                     	ds	2
   747   000064                     efgtoa@t:
   748                           	callstack 0
   749                           
   750                           ; 2 bytes @ 0x4
   751   000064                     	ds	2
   752   000066                     efgtoa@pp:
   753                           	callstack 0
   754                           
   755                           ; 1 bytes @ 0x6
   756   000066                     	ds	1
   757   000067                     efgtoa@esign:
   758                           	callstack 0
   759                           
   760                           ; 1 bytes @ 0x7
   761   000067                     	ds	1
   762   000068                     efgtoa@ne:
   763                           	callstack 0
   764                           
   765                           ; 2 bytes @ 0x8
   766   000068                     	ds	2
   767   00006A                     efgtoa@m:
   768                           	callstack 0
   769                           
   770                           ; 2 bytes @ 0xA
   771   00006A                     	ds	2
   772   00006C                     efgtoa@d:
   773                           	callstack 0
   774                           
   775                           ; 2 bytes @ 0xC
   776   00006C                     	ds	2
   777   00006E                     efgtoa@p:
   778                           	callstack 0
   779                           
   780                           ; 2 bytes @ 0xE
   781   00006E                     	ds	2
   782   000070                     efgtoa@w:
   783                           	callstack 0
   784                           
   785                           ; 2 bytes @ 0x10
   786   000070                     	ds	2
   787   000072                     efgtoa@nmode:
   788                           	callstack 0
   789                           
   790                           ; 1 bytes @ 0x12
   791   000072                     	ds	1
   792   000073                     efgtoa@mode:
   793                           	callstack 0
   794                           
   795                           ; 1 bytes @ 0x13
   796   000073                     	ds	1
   797   000074                     efgtoa@ou:
   798                           	callstack 0
   799                           
   800                           ; 4 bytes @ 0x14
   801   000074                     	ds	4
   802   000078                     efgtoa@h:
   803                           	callstack 0
   804                           
   805                           ; 4 bytes @ 0x18
   806   000078                     	ds	4
   807   00007C                     efgtoa@l:
   808                           	callstack 0
   809                           
   810                           ; 4 bytes @ 0x1C
   811   00007C                     	ds	4
   812   000080                     efgtoa@sign:
   813                           	callstack 0
   814                           
   815                           ; 1 bytes @ 0x20
   816   000080                     	ds	1
   817   000081                     efgtoa@i:
   818                           	callstack 0
   819                           
   820                           ; 2 bytes @ 0x21
   821   000081                     	ds	2
   822   000083                     efgtoa@e:
   823                           	callstack 0
   824                           
   825                           ; 2 bytes @ 0x23
   826   000083                     	ds	2
   827   000085                     efgtoa@n:
   828                           	callstack 0
   829                           
   830                           ; 2 bytes @ 0x25
   831   000085                     	ds	2
   832   000087                     efgtoa@g:
   833                           	callstack 0
   834                           
   835                           ; 4 bytes @ 0x27
   836   000087                     	ds	4
   837   00008B                     efgtoa@u:
   838                           	callstack 0
   839                           
   840                           ; 4 bytes @ 0x2B
   841   00008B                     	ds	4
   842   00008F                     vfpfcnvrt@convarg:
   843                           	callstack 0
   844                           
   845                           ; 8 bytes @ 0x2F
   846   00008F                     	ds	8
   847   000097                     vfpfcnvrt@c:
   848                           	callstack 0
   849                           
   850                           ; 1 bytes @ 0x37
   851   000097                     	ds	1
   852   000098                     vfpfcnvrt@cp:
   853                           	callstack 0
   854                           
   855                           ; 2 bytes @ 0x38
   856   000098                     	ds	2
   857   00009A                     ?_sprintf:
   858                           	callstack 0
   859   00009A                     sprintf@s:
   860                           	callstack 0
   861                           
   862                           ; 2 bytes @ 0x3A
   863   00009A                     	ds	2
   864   00009C                     sprintf@fmt:
   865                           	callstack 0
   866                           
   867                           ; 2 bytes @ 0x3C
   868   00009C                     	ds	6
   869   0000A2                     sprintf@ap:
   870                           	callstack 0
   871                           
   872                           ; 2 bytes @ 0x42
   873   0000A2                     	ds	2
   874   0000A4                     sprintf@f:
   875                           	callstack 0
   876                           
   877                           ; 11 bytes @ 0x44
   878   0000A4                     	ds	11
   879                           
   880                           	psect	cstackCOMRAM
   881   000001                     __pcstackCOMRAM:
   882                           	callstack 0
   883   000001                     ?_strlen:
   884                           	callstack 0
   885   000001                     ?___fpclassifyf:
   886                           	callstack 0
   887   000001                     ?_isdigit:
   888                           	callstack 0
   889   000001                     ?_isspace:
   890                           	callstack 0
   891   000001                     ?___wmul:
   892                           	callstack 0
   893   000001                     ?___awdiv:
   894                           	callstack 0
   895   000001                     ?___awmod:
   896                           	callstack 0
   897   000001                     ?___fladd:
   898                           	callstack 0
   899   000001                     ?___flmul:
   900                           	callstack 0
   901   000001                     ?_labs:
   902                           	callstack 0
   903   000001                     ?___flneg:
   904                           	callstack 0
   905   000001                     ?___fltol:
   906                           	callstack 0
   907   000001                     _EUSART1_is_tx_ready$414:
   908                           	callstack 0
   909   000001                     EUSART1_Write@txData:
   910                           	callstack 0
   911   000001                     I2C1_MasterSendTxData@data:
   912                           	callstack 0
   913   000001                     I2C1_MasterSendNack@ack:
   914                           	callstack 0
   915   000001                     EUSART1_SetFramingErrorHandler@interruptHandler:
   916                           	callstack 0
   917   000001                     EUSART1_SetOverrunErrorHandler@interruptHandler:
   918                           	callstack 0
   919   000001                     EUSART1_SetErrorHandler@interruptHandler:
   920                           	callstack 0
   921   000001                     ___wmul@multiplier:
   922                           	callstack 0
   923   000001                     ___awdiv@dividend:
   924                           	callstack 0
   925   000001                     ___awmod@dividend:
   926                           	callstack 0
   927   000001                     isdigit@c:
   928                           	callstack 0
   929   000001                     isspace@c:
   930                           	callstack 0
   931   000001                     memcpy@d1:
   932                           	callstack 0
   933   000001                     fputc@c:
   934                           	callstack 0
   935   000001                     strcpy@dest:
   936                           	callstack 0
   937   000001                     strlen@s:
   938                           	callstack 0
   939   000001                     ___fleq@ff1:
   940                           	callstack 0
   941   000001                     ___flneg@f1:
   942                           	callstack 0
   943   000001                     ___fltol@f1:
   944                           	callstack 0
   945   000001                     ___fladd@b:
   946                           	callstack 0
   947   000001                     ___flmul@b:
   948                           	callstack 0
   949   000001                     ___fpclassifyf@x:
   950                           	callstack 0
   951   000001                     labs@a:
   952                           	callstack 0
   953                           
   954                           ; 4 bytes @ 0x0
   955   000001                     	ds	1
   956   000002                     i2c_driver_write_byte@reg:
   957                           	callstack 0
   958   000002                     I2C1_MasterGetRxData@ack:
   959                           	callstack 0
   960                           
   961                           ; 1 bytes @ 0x1
   962   000002                     	ds	1
   963   000003                     ??_isdigit:
   964   000003                     ??_isspace:
   965   000003                     i2c_driver_write_byte@data:
   966                           	callstack 0
   967   000003                     I2C1_MasterGetRxData@b:
   968                           	callstack 0
   969   000003                     ___wmul@multiplicand:
   970                           	callstack 0
   971   000003                     ___awdiv@divisor:
   972                           	callstack 0
   973   000003                     ___awmod@divisor:
   974                           	callstack 0
   975   000003                     memcpy@s1:
   976                           	callstack 0
   977   000003                     fputc@fp:
   978                           	callstack 0
   979   000003                     strcpy@src:
   980                           	callstack 0
   981   000003                     strlen@a:
   982                           	callstack 0
   983                           
   984                           ; 2 bytes @ 0x2
   985   000003                     	ds	1
   986   000004                     i2c_driver_write_byte@devaddr:
   987                           	callstack 0
   988   000004                     i2c_driver_read_byte@reg:
   989                           	callstack 0
   990                           
   991                           ; 1 bytes @ 0x3
   992   000004                     	ds	1
   993   000005                     ??_fputc:
   994   000005                     ??___fpclassifyf:
   995   000005                     ??_labs:
   996   000005                     ??___fltol:
   997   000005                     ___awdiv@counter:
   998                           	callstack 0
   999   000005                     ___awmod@counter:
  1000                           	callstack 0
  1001   000005                     _isspace$1636:
  1002                           	callstack 0
  1003   000005                     send_string@message:
  1004                           	callstack 0
  1005   000005                     i2c_driver_read_byte@data:
  1006                           	callstack 0
  1007   000005                     ___wmul@product:
  1008                           	callstack 0
  1009   000005                     memcpy@n:
  1010                           	callstack 0
  1011   000005                     strcpy@s:
  1012                           	callstack 0
  1013   000005                     ___fleq@ff2:
  1014                           	callstack 0
  1015   000005                     ___fladd@a:
  1016                           	callstack 0
  1017   000005                     ___flmul@a:
  1018                           	callstack 0
  1019                           
  1020                           ; 4 bytes @ 0x4
  1021   000005                     	ds	1
  1022   000006                     ___awdiv@sign:
  1023                           	callstack 0
  1024   000006                     ___awmod@sign:
  1025                           	callstack 0
  1026                           
  1027                           ; 1 bytes @ 0x5
  1028   000006                     	ds	1
  1029   000007                     ??_send_string:
  1030   000007                     ?_atoi:
  1031                           	callstack 0
  1032   000007                     ?___xxtofl:
  1033                           	callstack 0
  1034   000007                     i2c_driver_read_byte@devaddr:
  1035                           	callstack 0
  1036   000007                     ___awdiv@quotient:
  1037                           	callstack 0
  1038   000007                     atoi@s:
  1039                           	callstack 0
  1040   000007                     memcpy@d:
  1041                           	callstack 0
  1042   000007                     strcpy@d:
  1043                           	callstack 0
  1044   000007                     ___xxtofl@val:
  1045                           	callstack 0
  1046                           
  1047                           ; 4 bytes @ 0x6
  1048   000007                     	ds	2
  1049   000009                     ??___fladd:
  1050   000009                     ??___flmul:
  1051   000009                     ??_atoi:
  1052   000009                     ??___fleq:
  1053   000009                     ___fltol@sign1:
  1054                           	callstack 0
  1055   000009                     send_string@i:
  1056                           	callstack 0
  1057   000009                     ___fpclassifyf@e:
  1058                           	callstack 0
  1059   000009                     memcpy@s:
  1060                           	callstack 0
  1061                           
  1062                           ; 2 bytes @ 0x8
  1063   000009                     	ds	1
  1064   00000A                     ___fltol@exp1:
  1065                           	callstack 0
  1066   00000A                     fputs@s:
  1067                           	callstack 0
  1068                           
  1069                           ; 2 bytes @ 0x9
  1070   00000A                     	ds	1
  1071   00000B                     ??___xxtofl:
  1072   00000B                     i2c_driver_read_twobytes@reg:
  1073                           	callstack 0
  1074   00000B                     memcpy@tmp:
  1075                           	callstack 0
  1076   00000B                     ___fpclassifyf@u:
  1077                           	callstack 0
  1078                           
  1079                           ; 4 bytes @ 0xA
  1080   00000B                     	ds	1
  1081   00000C                     i2c_driver_read_twobytes@data:
  1082                           	callstack 0
  1083   00000C                     atoi@neg:
  1084                           	callstack 0
  1085   00000C                     fputs@fp:
  1086                           	callstack 0
  1087                           
  1088                           ; 2 bytes @ 0xB
  1089   00000C                     	ds	1
  1090   00000D                     ___fladd@signs:
  1091                           	callstack 0
  1092   00000D                     ___flmul@sign:
  1093                           	callstack 0
  1094                           
  1095                           ; 1 bytes @ 0xC
  1096   00000D                     	ds	1
  1097   00000E                     ??_i2c_driver_read_twobytes:
  1098   00000E                     ___fladd@aexp:
  1099                           	callstack 0
  1100   00000E                     fputs@c:
  1101                           	callstack 0
  1102   00000E                     atoi@n:
  1103                           	callstack 0
  1104   00000E                     ___flmul@grs:
  1105                           	callstack 0
  1106                           
  1107                           ; 4 bytes @ 0xD
  1108   00000E                     	ds	1
  1109   00000F                     ___fladd@bexp:
  1110                           	callstack 0
  1111   00000F                     ___xxtofl@sign:
  1112                           	callstack 0
  1113   00000F                     fputs@i:
  1114                           	callstack 0
  1115                           
  1116                           ; 2 bytes @ 0xE
  1117   00000F                     	ds	1
  1118   000010                     ___fladd@grs:
  1119                           	callstack 0
  1120   000010                     ___xxtofl@exp:
  1121                           	callstack 0
  1122                           
  1123                           ; 1 bytes @ 0xF
  1124   000010                     	ds	1
  1125   000011                     i2c_driver_read_twobytes@devaddr:
  1126                           	callstack 0
  1127   000011                     pad@fp:
  1128                           	callstack 0
  1129   000011                     ___xxtofl@arg:
  1130                           	callstack 0
  1131                           
  1132                           ; 4 bytes @ 0x10
  1133   000011                     	ds	1
  1134   000012                     ADC_read@busy_status:
  1135                           	callstack 0
  1136   000012                     ___flmul@aexp:
  1137                           	callstack 0
  1138                           
  1139                           ; 1 bytes @ 0x11
  1140   000012                     	ds	1
  1141   000013                     ___flmul@bexp:
  1142                           	callstack 0
  1143   000013                     pad@buf:
  1144                           	callstack 0
  1145                           
  1146                           ; 2 bytes @ 0x12
  1147   000013                     	ds	1
  1148   000014                     ___flmul@prod:
  1149                           	callstack 0
  1150                           
  1151                           ; 4 bytes @ 0x13
  1152   000014                     	ds	1
  1153   000015                     ?___fldiv:
  1154                           	callstack 0
  1155   000015                     pad@p:
  1156                           	callstack 0
  1157   000015                     ___fldiv@b:
  1158                           	callstack 0
  1159                           
  1160                           ; 4 bytes @ 0x14
  1161   000015                     	ds	2
  1162   000017                     ??_pad:
  1163                           
  1164                           ; 1 bytes @ 0x16
  1165   000017                     	ds	1
  1166   000018                     ___flmul@temp:
  1167                           	callstack 0
  1168   000018                     pad@i:
  1169                           	callstack 0
  1170                           
  1171                           ; 2 bytes @ 0x17
  1172   000018                     	ds	1
  1173   000019                     ___fldiv@a:
  1174                           	callstack 0
  1175                           
  1176                           ; 4 bytes @ 0x18
  1177   000019                     	ds	1
  1178   00001A                     ?___flsub:
  1179                           	callstack 0
  1180   00001A                     pad@w:
  1181                           	callstack 0
  1182   00001A                     ___flge@ff1:
  1183                           	callstack 0
  1184   00001A                     ___flsub@b:
  1185                           	callstack 0
  1186                           
  1187                           ; 4 bytes @ 0x19
  1188   00001A                     	ds	2
  1189   00001C                     xtoa@fp:
  1190                           	callstack 0
  1191                           
  1192                           ; 2 bytes @ 0x1B
  1193   00001C                     	ds	1
  1194   00001D                     ??___fldiv:
  1195                           
  1196                           ; 1 bytes @ 0x1C
  1197   00001D                     	ds	1
  1198   00001E                     ___flge@ff2:
  1199                           	callstack 0
  1200   00001E                     ___flsub@a:
  1201                           	callstack 0
  1202   00001E                     xtoa@d:
  1203                           	callstack 0
  1204                           
  1205                           ; 8 bytes @ 0x1D
  1206   00001E                     	ds	3
  1207   000021                     ___fldiv@rem:
  1208                           	callstack 0
  1209                           
  1210                           ; 4 bytes @ 0x20
  1211   000021                     	ds	1
  1212   000022                     ??___flge:
  1213                           
  1214                           ; 1 bytes @ 0x21
  1215   000022                     	ds	3
  1216   000025                     ___fldiv@sign:
  1217                           	callstack 0
  1218                           
  1219                           ; 1 bytes @ 0x24
  1220   000025                     	ds	1
  1221   000026                     ??_xtoa:
  1222   000026                     ___fldiv@new_exp:
  1223                           	callstack 0
  1224                           
  1225                           ; 2 bytes @ 0x25
  1226   000026                     	ds	2
  1227   000028                     ___fldiv@grs:
  1228                           	callstack 0
  1229                           
  1230                           ; 4 bytes @ 0x27
  1231   000028                     	ds	4
  1232   00002C                     ___fldiv@bexp:
  1233                           	callstack 0
  1234                           
  1235                           ; 1 bytes @ 0x2B
  1236   00002C                     	ds	1
  1237   00002D                     ___fldiv@aexp:
  1238                           	callstack 0
  1239                           
  1240                           ; 1 bytes @ 0x2C
  1241   00002D                     	ds	1
  1242   00002E                     ?_floorf:
  1243                           	callstack 0
  1244   00002E                     xtoa@w:
  1245                           	callstack 0
  1246   00002E                     floorf@x:
  1247                           	callstack 0
  1248                           
  1249                           ; 4 bytes @ 0x2D
  1250   00002E                     	ds	2
  1251   000030                     _xtoa$1562:
  1252                           	callstack 0
  1253                           
  1254                           ; 2 bytes @ 0x2F
  1255   000030                     	ds	2
  1256   000032                     ??_floorf:
  1257   000032                     xtoa@p:
  1258                           	callstack 0
  1259                           
  1260                           ; 2 bytes @ 0x31
  1261   000032                     	ds	2
  1262   000034                     xtoa@n:
  1263                           	callstack 0
  1264                           
  1265                           ; 8 bytes @ 0x33
  1266   000034                     	ds	4
  1267   000038                     floorf@m:
  1268                           	callstack 0
  1269                           
  1270                           ; 4 bytes @ 0x37
  1271   000038                     	ds	4
  1272   00003C                     xtoa@i:
  1273                           	callstack 0
  1274   00003C                     floorf@e:
  1275                           	callstack 0
  1276                           
  1277                           ; 2 bytes @ 0x3B
  1278   00003C                     	ds	2
  1279   00003E                     xtoa@c:
  1280                           	callstack 0
  1281   00003E                     floorf@u:
  1282                           	callstack 0
  1283                           
  1284                           ; 4 bytes @ 0x3D
  1285   00003E                     	ds	4
  1286   000042                     efgtoa@fp:
  1287                           	callstack 0
  1288                           
  1289                           ; 2 bytes @ 0x41
  1290   000042                     	ds	2
  1291   000044                     efgtoa@f:
  1292                           	callstack 0
  1293                           
  1294                           ; 4 bytes @ 0x43
  1295   000044                     	ds	4
  1296   000048                     efgtoa@c:
  1297                           	callstack 0
  1298                           
  1299                           ; 1 bytes @ 0x47
  1300   000048                     	ds	1
  1301   000049                     ??_efgtoa:
  1302                           
  1303                           ; 1 bytes @ 0x48
  1304   000049                     	ds	3
  1305   00004C                     vfpfcnvrt@fp:
  1306                           	callstack 0
  1307                           
  1308                           ; 2 bytes @ 0x4B
  1309   00004C                     	ds	2
  1310   00004E                     vfpfcnvrt@fmt:
  1311                           	callstack 0
  1312                           
  1313                           ; 2 bytes @ 0x4D
  1314   00004E                     	ds	2
  1315   000050                     vfpfcnvrt@ap:
  1316                           	callstack 0
  1317                           
  1318                           ; 2 bytes @ 0x4F
  1319   000050                     	ds	2
  1320   000052                     ??_vfpfcnvrt:
  1321                           
  1322                           ; 1 bytes @ 0x51
  1323   000052                     	ds	4
  1324   000056                     ?_vfprintf:
  1325                           	callstack 0
  1326   000056                     vfprintf@fp:
  1327                           	callstack 0
  1328                           
  1329                           ; 2 bytes @ 0x55
  1330   000056                     	ds	2
  1331   000058                     vfprintf@fmt:
  1332                           	callstack 0
  1333                           
  1334                           ; 2 bytes @ 0x57
  1335   000058                     	ds	2
  1336   00005A                     vfprintf@ap:
  1337                           	callstack 0
  1338                           
  1339                           ; 2 bytes @ 0x59
  1340   00005A                     	ds	2
  1341   00005C                     vfprintf@cfmt:
  1342                           	callstack 0
  1343                           
  1344                           ; 2 bytes @ 0x5B
  1345   00005C                     	ds	2
  1346   00005E                     ??_main:
  1347                           
  1348                           ; 1 bytes @ 0x5D
  1349   00005E                     	ds	2
  1350                           
  1351 ;;
  1352 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1353 ;;
  1354 ;; *************** function _main *****************
  1355 ;; Defined at:
  1356 ;;		line 85 in file "main.c"
  1357 ;; Parameters:    Size  Location     Type
  1358 ;;		None
  1359 ;; Auto vars:     Size  Location     Type
  1360 ;;  channel         1    0        unsigned char 
  1361 ;; Return value:  Size  Location     Type
  1362 ;;                  1    wreg      void 
  1363 ;; Registers used:
  1364 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1365 ;; Tracked objects:
  1366 ;;		On entry : 0/0
  1367 ;;		On exit  : 0/0
  1368 ;;		Unchanged: 0/0
  1369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1372 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1373 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1374 ;;Total ram usage:        2 bytes
  1375 ;; Hardware stack levels required when called: 8
  1376 ;; This function calls:
  1377 ;;		_ADC_init
  1378 ;;		_ADC_read
  1379 ;;		_ADC_reset
  1380 ;;		_SYSTEM_Initialize
  1381 ;;		___fldiv
  1382 ;;		___wmul
  1383 ;;		___xxtofl
  1384 ;;		_i2c_driver_init
  1385 ;;		_send_string
  1386 ;;		_sprintf
  1387 ;; This function is called by:
  1388 ;;		Startup code after reset
  1389 ;; This function uses a non-reentrant model
  1390 ;;
  1391                           
  1392                           	psect	text0
  1393   00DD8A                     __ptext0:
  1394                           	callstack 0
  1395   00DD8A                     _main:
  1396                           	callstack 23
  1397   00DD8A                     
  1398                           ;main.c: 88:     SYSTEM_Initialize();
  1399   00DD8A  EC19  F065         	call	_SYSTEM_Initialize	;wreg free
  1400   00DD8E                     
  1401                           ;main.c: 89:     i2c_driver_init();
  1402   00DD8E  EC34  F065         	call	_i2c_driver_init	;wreg free
  1403   00DD92                     
  1404                           ;main.c: 90:     send_string("Initializing the ADC...\n");
  1405   00DD92  0ED0               	movlw	low STR_1
  1406   00DD94  6E05               	movwf	send_string@message^0,c
  1407   00DD96  0EFE               	movlw	high STR_1
  1408   00DD98  6E06               	movwf	(send_string@message+1)^0,c
  1409   00DD9A  EC7D  F068         	call	_send_string	;wreg free
  1410   00DD9E                     
  1411                           ;main.c: 91:     ADC_reset();
  1412   00DD9E  EC8B  F065         	call	_ADC_reset	;wreg free
  1413   00DDA2                     
  1414                           ;main.c: 92:     send_string("Reset DONE! \n");
  1415   00DDA2  0E9F               	movlw	low STR_2
  1416   00DDA4  6E05               	movwf	send_string@message^0,c
  1417   00DDA6  0EFF               	movlw	high STR_2
  1418   00DDA8  6E06               	movwf	(send_string@message+1)^0,c
  1419   00DDAA  EC7D  F068         	call	_send_string	;wreg free
  1420   00DDAE                     
  1421                           ;main.c: 93:     _delay((unsigned long)((1000)*(16000000/4000.0)));
  1422   00DDAE  0E15               	movlw	21
  1423   00DDB0  6E5F               	movwf	(??_main+1)^0,c
  1424   00DDB2  0E4B               	movlw	75
  1425   00DDB4  6E5E               	movwf	??_main^0,c
  1426   00DDB6  0EBE               	movlw	190
  1427   00DDB8                     u5037:
  1428   00DDB8  2EE8               	decfsz	wreg,f,c
  1429   00DDBA  D7FE               	bra	u5037
  1430   00DDBC  2E5E               	decfsz	??_main^0,f,c
  1431   00DDBE  D7FC               	bra	u5037
  1432   00DDC0  2E5F               	decfsz	(??_main+1)^0,f,c
  1433   00DDC2  D7FA               	bra	u5037
  1434   00DDC4  D000               	nop2	
  1435   00DDC6                     
  1436                           ;main.c: 94:     ADC_init();
  1437   00DDC6  EC55  F065         	call	_ADC_init	;wreg free
  1438   00DDCA                     
  1439                           ;main.c: 95:     send_string("ADC ready!\n");
  1440   00DDCA  0EC6               	movlw	low STR_3
  1441   00DDCC  6E05               	movwf	send_string@message^0,c
  1442   00DDCE  0EFF               	movlw	high STR_3
  1443   00DDD0  6E06               	movwf	(send_string@message+1)^0,c
  1444   00DDD2  EC7D  F068         	call	_send_string	;wreg free
  1445   00DDD6                     
  1446                           ;main.c: 97:     sprintf(DigitalBuffer,"%x",ADC_result0);
  1447   00DDD6  0ECB               	movlw	low _DigitalBuffer
  1448   00DDD8  0100               	movlb	0	; () banked
  1449   00DDDA  6F9A               	movwf	sprintf@s& (0+255),b
  1450   00DDDC  0E00               	movlw	high _DigitalBuffer
  1451   00DDDE  6F9B               	movwf	(sprintf@s+1)& (0+255),b
  1452   00DDE0  0EFB               	movlw	low STR_4
  1453   00DDE2  6F9C               	movwf	sprintf@fmt& (0+255),b
  1454   00DDE4  0EFF               	movlw	high STR_4
  1455   00DDE6  6F9D               	movwf	(sprintf@fmt+1)& (0+255),b
  1456   00DDE8  C0F8  F09E         	movff	_ADC_result0,?_sprintf+4
  1457   00DDEC  C0F9  F09F         	movff	_ADC_result0+1,?_sprintf+5
  1458   00DDF0  EC48  F067         	call	_sprintf	;wreg free
  1459   00DDF4                     
  1460                           ;main.c: 98:     send_string("FIRST Digital data: "); send_string(DigitalBuffer); send_s
      +                          tring("\n");
  1461   00DDF4  0EFE               	movlw	low STR_5
  1462   00DDF6  6E05               	movwf	send_string@message^0,c
  1463   00DDF8  0EFE               	movlw	high STR_5
  1464   00DDFA  6E06               	movwf	(send_string@message+1)^0,c
  1465   00DDFC  EC7D  F068         	call	_send_string	;wreg free
  1466   00DE00  0ECB               	movlw	low _DigitalBuffer
  1467   00DE02  6E05               	movwf	send_string@message^0,c
  1468   00DE04  0E00               	movlw	high _DigitalBuffer
  1469   00DE06  6E06               	movwf	(send_string@message+1)^0,c
  1470   00DE08  EC7D  F068         	call	_send_string	;wreg free
  1471   00DE0C  0EAB               	movlw	low (STR_2+12)
  1472   00DE0E  6E05               	movwf	send_string@message^0,c
  1473   00DE10  0EFF               	movlw	high (STR_2+12)
  1474   00DE12  6E06               	movwf	(send_string@message+1)^0,c
  1475   00DE14  EC7D  F068         	call	_send_string	;wreg free
  1476   00DE18                     l4667:
  1477                           
  1478                           ;main.c: 100:     {;main.c: 101:         send_string("HELLO!\n");
  1479   00DE18  0EE6               	movlw	low STR_7
  1480   00DE1A  6E05               	movwf	send_string@message^0,c
  1481   00DE1C  0EFF               	movlw	high STR_7
  1482   00DE1E  6E06               	movwf	(send_string@message+1)^0,c
  1483   00DE20  EC7D  F068         	call	_send_string	;wreg free
  1484   00DE24                     
  1485                           ;main.c: 102:         ADC_read();
  1486   00DE24  ECBC  F068         	call	_ADC_read	;wreg free
  1487   00DE28                     
  1488                           ;main.c: 104:         send_string("////////////       CHANNEL1");send_string("       ///
      +                          /////////\n");
  1489   00DE28  0E99               	movlw	low STR_8
  1490   00DE2A  6E05               	movwf	send_string@message^0,c
  1491   00DE2C  0EFE               	movlw	high STR_8
  1492   00DE2E  6E06               	movwf	(send_string@message+1)^0,c
  1493   00DE30  EC7D  F068         	call	_send_string	;wreg free
  1494   00DE34  0EE9               	movlw	low STR_9
  1495   00DE36  6E05               	movwf	send_string@message^0,c
  1496   00DE38  0EFE               	movlw	high STR_9
  1497   00DE3A  6E06               	movwf	(send_string@message+1)^0,c
  1498   00DE3C  EC7D  F068         	call	_send_string	;wreg free
  1499   00DE40                     
  1500                           ;main.c: 105:             sprintf(DigitalBuffer,"%x",ADC_result0);
  1501   00DE40  0ECB               	movlw	low _DigitalBuffer
  1502   00DE42  0100               	movlb	0	; () banked
  1503   00DE44  6F9A               	movwf	sprintf@s& (0+255),b
  1504   00DE46  0E00               	movlw	high _DigitalBuffer
  1505   00DE48  6F9B               	movwf	(sprintf@s+1)& (0+255),b
  1506   00DE4A  0EFB               	movlw	low STR_4
  1507   00DE4C  6F9C               	movwf	sprintf@fmt& (0+255),b
  1508   00DE4E  0EFF               	movlw	high STR_4
  1509   00DE50  6F9D               	movwf	(sprintf@fmt+1)& (0+255),b
  1510   00DE52  C0F8  F09E         	movff	_ADC_result0,?_sprintf+4
  1511   00DE56  C0F9  F09F         	movff	_ADC_result0+1,?_sprintf+5
  1512   00DE5A  EC48  F067         	call	_sprintf	;wreg free
  1513   00DE5E                     
  1514                           ;main.c: 106:             send_string("Digital data: "); send_string(DigitalBuffer); sen
      +                          d_string("\n");
  1515   00DE5E  0E04               	movlw	low (STR_5+6)
  1516   00DE60  6E05               	movwf	send_string@message^0,c
  1517   00DE62  0EFF               	movlw	high (STR_5+6)
  1518   00DE64  6E06               	movwf	(send_string@message+1)^0,c
  1519   00DE66  EC7D  F068         	call	_send_string	;wreg free
  1520   00DE6A  0ECB               	movlw	low _DigitalBuffer
  1521   00DE6C  6E05               	movwf	send_string@message^0,c
  1522   00DE6E  0E00               	movlw	high _DigitalBuffer
  1523   00DE70  6E06               	movwf	(send_string@message+1)^0,c
  1524   00DE72  EC7D  F068         	call	_send_string	;wreg free
  1525   00DE76  0EAB               	movlw	low (STR_2+12)
  1526   00DE78  6E05               	movwf	send_string@message^0,c
  1527   00DE7A  0EFF               	movlw	high (STR_2+12)
  1528   00DE7C  6E06               	movwf	(send_string@message+1)^0,c
  1529   00DE7E  EC7D  F068         	call	_send_string	;wreg free
  1530   00DE82                     
  1531                           ;main.c: 107:             SC_voltage = (double)(ADC_result[channel]*5)/4096;
  1532   00DE82  C0AF  F001         	movff	_ADC_result,___wmul@multiplier
  1533   00DE86  C0B0  F002         	movff	_ADC_result+1,___wmul@multiplier+1
  1534   00DE8A  0E00               	movlw	0
  1535   00DE8C  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1536   00DE8E  0E05               	movlw	5
  1537   00DE90  6E03               	movwf	___wmul@multiplicand^0,c
  1538   00DE92  EC64  F065         	call	___wmul	;wreg free
  1539   00DE96  C001  F007         	movff	?___wmul,___xxtofl@val
  1540   00DE9A  C002  F008         	movff	?___wmul+1,___xxtofl@val+1
  1541   00DE9E  6A09               	clrf	(___xxtofl@val+2)^0,c
  1542   00DEA0  6A0A               	clrf	(___xxtofl@val+3)^0,c
  1543   00DEA2  0E00               	movlw	0
  1544   00DEA4  ECEB  F06D         	call	___xxtofl
  1545   00DEA8  C007  F015         	movff	?___xxtofl,___fldiv@b
  1546   00DEAC  C008  F016         	movff	?___xxtofl+1,___fldiv@b+1
  1547   00DEB0  C009  F017         	movff	?___xxtofl+2,___fldiv@b+2
  1548   00DEB4  C00A  F018         	movff	?___xxtofl+3,___fldiv@b+3
  1549   00DEB8  0E00               	movlw	0
  1550   00DEBA  6E19               	movwf	___fldiv@a^0,c
  1551   00DEBC  0E00               	movlw	0
  1552   00DEBE  6E1A               	movwf	(___fldiv@a+1)^0,c
  1553   00DEC0  0E80               	movlw	128
  1554   00DEC2  6E1B               	movwf	(___fldiv@a+2)^0,c
  1555   00DEC4  0E45               	movlw	69
  1556   00DEC6  6E1C               	movwf	(___fldiv@a+3)^0,c
  1557   00DEC8  ECCA  F070         	call	___fldiv	;wreg free
  1558   00DECC  C015  F0C1         	movff	?___fldiv,_SC_voltage
  1559   00DED0  C016  F0C2         	movff	?___fldiv+1,_SC_voltage+1
  1560   00DED4  C017  F0C3         	movff	?___fldiv+2,_SC_voltage+2
  1561   00DED8  C018  F0C4         	movff	?___fldiv+3,_SC_voltage+3
  1562   00DEDC                     
  1563                           ;main.c: 108:             sprintf(SCBuffer,"%.4g",SC_voltage);
  1564   00DEDC  0E50               	movlw	low _SCBuffer
  1565   00DEDE  0100               	movlb	0	; () banked
  1566   00DEE0  6F9A               	movwf	sprintf@s& (0+255),b
  1567   00DEE2  0E01               	movlw	high _SCBuffer
  1568   00DEE4  6F9B               	movwf	(sprintf@s+1)& (0+255),b
  1569   00DEE6  0EEE               	movlw	low STR_13
  1570   00DEE8  6F9C               	movwf	sprintf@fmt& (0+255),b
  1571   00DEEA  0EFF               	movlw	high STR_13
  1572   00DEEC  6F9D               	movwf	(sprintf@fmt+1)& (0+255),b
  1573   00DEEE  C0C1  F09E         	movff	_SC_voltage,?_sprintf+4
  1574   00DEF2  C0C2  F09F         	movff	_SC_voltage+1,?_sprintf+5
  1575   00DEF6  C0C3  F0A0         	movff	_SC_voltage+2,?_sprintf+6
  1576   00DEFA  C0C4  F0A1         	movff	_SC_voltage+3,?_sprintf+7
  1577   00DEFE  EC48  F067         	call	_sprintf	;wreg free
  1578   00DF02                     
  1579                           ;main.c: 109:             send_string("SC data: "); send_string(SCBuffer); send_string("
      +                          \n");
  1580   00DF02  0ED2               	movlw	low STR_14
  1581   00DF04  6E05               	movwf	send_string@message^0,c
  1582   00DF06  0EFF               	movlw	high STR_14
  1583   00DF08  6E06               	movwf	(send_string@message+1)^0,c
  1584   00DF0A  EC7D  F068         	call	_send_string	;wreg free
  1585   00DF0E  0E50               	movlw	low _SCBuffer
  1586   00DF10  6E05               	movwf	send_string@message^0,c
  1587   00DF12  0E01               	movlw	high _SCBuffer
  1588   00DF14  6E06               	movwf	(send_string@message+1)^0,c
  1589   00DF16  EC7D  F068         	call	_send_string	;wreg free
  1590   00DF1A  0EAB               	movlw	low (STR_2+12)
  1591   00DF1C  6E05               	movwf	send_string@message^0,c
  1592   00DF1E  0EFF               	movlw	high (STR_2+12)
  1593   00DF20  6E06               	movwf	(send_string@message+1)^0,c
  1594   00DF22  EC7D  F068         	call	_send_string	;wreg free
  1595   00DF26                     
  1596                           ;main.c: 112:             send_string("Voltage: "); send_string(ResultBuffer); send_stri
      +                          ng("\n"); send_string("\n"); send_string("\n");
  1597   00DF26  0EDC               	movlw	low STR_16
  1598   00DF28  6E05               	movwf	send_string@message^0,c
  1599   00DF2A  0EFF               	movlw	high STR_16
  1600   00DF2C  6E06               	movwf	(send_string@message+1)^0,c
  1601   00DF2E  EC7D  F068         	call	_send_string	;wreg free
  1602   00DF32  0EDF               	movlw	low _ResultBuffer
  1603   00DF34  6E05               	movwf	send_string@message^0,c
  1604   00DF36  0E00               	movlw	high _ResultBuffer
  1605   00DF38  6E06               	movwf	(send_string@message+1)^0,c
  1606   00DF3A  EC7D  F068         	call	_send_string	;wreg free
  1607   00DF3E  0EAB               	movlw	low (STR_2+12)
  1608   00DF40  6E05               	movwf	send_string@message^0,c
  1609   00DF42  0EFF               	movlw	high (STR_2+12)
  1610   00DF44  6E06               	movwf	(send_string@message+1)^0,c
  1611   00DF46  EC7D  F068         	call	_send_string	;wreg free
  1612   00DF4A  0EAB               	movlw	low (STR_2+12)
  1613   00DF4C  6E05               	movwf	send_string@message^0,c
  1614   00DF4E  0EFF               	movlw	high (STR_2+12)
  1615   00DF50  6E06               	movwf	(send_string@message+1)^0,c
  1616   00DF52  EC7D  F068         	call	_send_string	;wreg free
  1617   00DF56  0EAB               	movlw	low (STR_2+12)
  1618   00DF58  6E05               	movwf	send_string@message^0,c
  1619   00DF5A  0EFF               	movlw	high (STR_2+12)
  1620   00DF5C  6E06               	movwf	(send_string@message+1)^0,c
  1621   00DF5E  EC7D  F068         	call	_send_string	;wreg free
  1622   00DF62                     
  1623                           ;main.c: 126:         _delay((unsigned long)((1000)*(16000000/4000.0)));
  1624   00DF62  0E15               	movlw	21
  1625   00DF64  6E5F               	movwf	(??_main+1)^0,c
  1626   00DF66  0E4B               	movlw	75
  1627   00DF68  6E5E               	movwf	??_main^0,c
  1628   00DF6A  0EBE               	movlw	190
  1629   00DF6C                     u5047:
  1630   00DF6C  2EE8               	decfsz	wreg,f,c
  1631   00DF6E  D7FE               	bra	u5047
  1632   00DF70  2E5E               	decfsz	??_main^0,f,c
  1633   00DF72  D7FC               	bra	u5047
  1634   00DF74  2E5F               	decfsz	(??_main+1)^0,f,c
  1635   00DF76  D7FA               	bra	u5047
  1636   00DF78  D000               	nop2	
  1637   00DF7A  EF0C  F06F         	goto	l4667
  1638   00DF7E  EF00  F000         	goto	start
  1639   00DF82                     __end_of_main:
  1640                           	callstack 0
  1641                           
  1642 ;; *************** function _sprintf *****************
  1643 ;; Defined at:
  1644 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  1645 ;; Parameters:    Size  Location     Type
  1646 ;;  s               2   58[BANK0 ] PTR unsigned char 
  1647 ;;		 -> SCBuffer(20), DigitalBuffer(20), 
  1648 ;;  fmt             2   60[BANK0 ] PTR const unsigned char 
  1649 ;;		 -> STR_13(5), STR_10(3), STR_4(3), 
  1650 ;; Auto vars:     Size  Location     Type
  1651 ;;  f              11   68[BANK0 ] struct _IO_FILE
  1652 ;;  ap              2   66[BANK0 ] PTR void [1]
  1653 ;;		 -> ?_sprintf(2), 
  1654 ;;  ret             2    0        int 
  1655 ;; Return value:  Size  Location     Type
  1656 ;;                  2   58[BANK0 ] int 
  1657 ;; Registers used:
  1658 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1659 ;; Tracked objects:
  1660 ;;		On entry : 0/0
  1661 ;;		On exit  : 0/0
  1662 ;;		Unchanged: 0/0
  1663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1664 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1665 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1667 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1668 ;;Total ram usage:       21 bytes
  1669 ;; Hardware stack levels used: 1
  1670 ;; Hardware stack levels required when called: 7
  1671 ;; This function calls:
  1672 ;;		_vfprintf
  1673 ;; This function is called by:
  1674 ;;		_main
  1675 ;; This function uses a non-reentrant model
  1676 ;;
  1677                           
  1678                           	psect	text1
  1679   00CE90                     __ptext1:
  1680                           	callstack 0
  1681   00CE90                     _sprintf:
  1682                           	callstack 23
  1683   00CE90  0E9E               	movlw	low (?_sprintf+4)
  1684   00CE92  0100               	movlb	0	; () banked
  1685   00CE94  6FA2               	movwf	sprintf@ap& (0+255),b
  1686   00CE96  0E00               	movlw	high (?_sprintf+4)
  1687   00CE98  6FA3               	movwf	(sprintf@ap+1)& (0+255),b
  1688   00CE9A  C09A  F0A4         	movff	sprintf@s,sprintf@f
  1689   00CE9E  C09B  F0A5         	movff	sprintf@s+1,sprintf@f+1
  1690   00CEA2                     
  1691                           ; BSR set to: 0
  1692   00CEA2  0E00               	movlw	0
  1693   00CEA4  6FA8               	movwf	(sprintf@f+4)& (0+255),b
  1694   00CEA6  0E00               	movlw	0
  1695   00CEA8  6FA7               	movwf	(sprintf@f+3)& (0+255),b
  1696   00CEAA                     
  1697                           ; BSR set to: 0
  1698   00CEAA  0E00               	movlw	0
  1699   00CEAC  6FAE               	movwf	(sprintf@f+10)& (0+255),b
  1700   00CEAE  0E00               	movlw	0
  1701   00CEB0  6FAD               	movwf	(sprintf@f+9)& (0+255),b
  1702   00CEB2                     
  1703                           ; BSR set to: 0
  1704   00CEB2  0EA4               	movlw	low sprintf@f
  1705   00CEB4  6E56               	movwf	vfprintf@fp^0,c
  1706   00CEB6  0E00               	movlw	high sprintf@f
  1707   00CEB8  6E57               	movwf	(vfprintf@fp+1)^0,c
  1708   00CEBA  C09C  F058         	movff	sprintf@fmt,vfprintf@fmt
  1709   00CEBE  C09D  F059         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1710   00CEC2  0EA2               	movlw	low sprintf@ap
  1711   00CEC4  6E5A               	movwf	vfprintf@ap^0,c
  1712   00CEC6  0E00               	movlw	high sprintf@ap
  1713   00CEC8  6E5B               	movwf	(vfprintf@ap+1)^0,c
  1714   00CECA  EC20  F067         	call	_vfprintf	;wreg free
  1715   00CECE  0100               	movlb	0	; () banked
  1716   00CED0  51A7               	movf	(sprintf@f+3)& (0+255),w,b
  1717   00CED2  259A               	addwf	sprintf@s& (0+255),w,b
  1718   00CED4  6ED9               	movwf	fsr2l,c
  1719   00CED6  51A8               	movf	(sprintf@f+4)& (0+255),w,b
  1720   00CED8  219B               	addwfc	(sprintf@s+1)& (0+255),w,b
  1721   00CEDA  6EDA               	movwf	fsr2h,c
  1722   00CEDC  0E00               	movlw	0
  1723   00CEDE  6EDF               	movwf	indf2,c
  1724   00CEE0                     
  1725                           ; BSR set to: 0
  1726   00CEE0  0012               	return		;funcret
  1727   00CEE2                     __end_of_sprintf:
  1728                           	callstack 0
  1729                           
  1730 ;; *************** function _vfprintf *****************
  1731 ;; Defined at:
  1732 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1733 ;; Parameters:    Size  Location     Type
  1734 ;;  fp              2   85[COMRAM] PTR struct _IO_FILE
  1735 ;;		 -> sprintf@f(11), 
  1736 ;;  fmt             2   87[COMRAM] PTR const unsigned char 
  1737 ;;		 -> STR_13(5), STR_10(3), STR_4(3), 
  1738 ;;  ap              2   89[COMRAM] PTR PTR void 
  1739 ;;		 -> sprintf@ap(2), 
  1740 ;; Auto vars:     Size  Location     Type
  1741 ;;  cfmt            2   91[COMRAM] PTR unsigned char 
  1742 ;;		 -> STR_13(5), STR_10(3), STR_4(3), 
  1743 ;; Return value:  Size  Location     Type
  1744 ;;                  2   85[COMRAM] int 
  1745 ;; Registers used:
  1746 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1747 ;; Tracked objects:
  1748 ;;		On entry : 0/0
  1749 ;;		On exit  : 0/0
  1750 ;;		Unchanged: 0/0
  1751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1752 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1753 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1755 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1756 ;;Total ram usage:        8 bytes
  1757 ;; Hardware stack levels used: 1
  1758 ;; Hardware stack levels required when called: 6
  1759 ;; This function calls:
  1760 ;;		_vfpfcnvrt
  1761 ;; This function is called by:
  1762 ;;		_sprintf
  1763 ;; This function uses a non-reentrant model
  1764 ;;
  1765                           
  1766                           	psect	text2
  1767   00CE40                     __ptext2:
  1768                           	callstack 0
  1769   00CE40                     _vfprintf:
  1770                           	callstack 23
  1771   00CE40                     
  1772                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  1773   00CE40  C058  F05C         	movff	vfprintf@fmt,vfprintf@cfmt
  1774   00CE44  C059  F05D         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1775                           
  1776                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1777   00CE48  EF34  F067         	goto	l4533
  1778   00CE4C                     l4531:
  1779                           
  1780                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1781   00CE4C  C056  F04C         	movff	vfprintf@fp,vfpfcnvrt@fp
  1782   00CE50  C057  F04D         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1783   00CE54  0E5C               	movlw	low vfprintf@cfmt
  1784   00CE56  6E4E               	movwf	vfpfcnvrt@fmt^0,c
  1785   00CE58  0E00               	movlw	high vfprintf@cfmt
  1786   00CE5A  6E4F               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1787   00CE5C  C05A  F050         	movff	vfprintf@ap,vfpfcnvrt@ap
  1788   00CE60  C05B  F051         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1789   00CE64  EC97  F072         	call	_vfpfcnvrt	;wreg free
  1790   00CE68                     l4533:
  1791                           
  1792                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1793   00CE68  C05C  FFF6         	movff	vfprintf@cfmt,tblptrl
  1794   00CE6C  C05D  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1795   00CE70                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1796   00CE70  6AF8               	clrf	tblptru,c
  1797   00CE72                     	endif
  1798   00CE72                     	if	0	;tblptru may be non-zero
  1799   00CE72                     	endif
  1800   00CE72  0008               	tblrd		*
  1801   00CE74  50F5               	movf	tablat,w,c
  1802   00CE76  0900               	iorlw	0
  1803   00CE78  A4D8               	btfss	status,2,c
  1804   00CE7A  EF41  F067         	goto	u4851
  1805   00CE7E  EF43  F067         	goto	u4850
  1806   00CE82                     u4851:
  1807   00CE82  EF26  F067         	goto	l4531
  1808   00CE86                     u4850:
  1809   00CE86                     
  1810                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  1811   00CE86  0E00               	movlw	0
  1812   00CE88  6E57               	movwf	(?_vfprintf+1)^0,c
  1813   00CE8A  0E00               	movlw	0
  1814   00CE8C  6E56               	movwf	?_vfprintf^0,c
  1815   00CE8E  0012               	return		;funcret
  1816   00CE90                     __end_of_vfprintf:
  1817                           	callstack 0
  1818                           
  1819 ;; *************** function _vfpfcnvrt *****************
  1820 ;; Defined at:
  1821 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1822 ;; Parameters:    Size  Location     Type
  1823 ;;  fp              2   75[COMRAM] PTR struct _IO_FILE
  1824 ;;		 -> sprintf@f(11), 
  1825 ;;  fmt             2   77[COMRAM] PTR PTR unsigned char 
  1826 ;;		 -> vfprintf@cfmt(2), 
  1827 ;;  ap              2   79[COMRAM] PTR PTR void 
  1828 ;;		 -> sprintf@ap(2), 
  1829 ;; Auto vars:     Size  Location     Type
  1830 ;;  convarg         8   47[BANK0 ] struct .
  1831 ;;  cp              2   56[BANK0 ] PTR unsigned char 
  1832 ;;		 -> STR_13(5), STR_10(3), STR_4(3), 
  1833 ;;  i               2    0        int 
  1834 ;;  done            2    0        int 
  1835 ;;  c               1   55[BANK0 ] unsigned char 
  1836 ;; Return value:  Size  Location     Type
  1837 ;;                  1    wreg      void 
  1838 ;; Registers used:
  1839 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1840 ;; Tracked objects:
  1841 ;;		On entry : 0/0
  1842 ;;		On exit  : 0/0
  1843 ;;		Unchanged: 0/0
  1844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1845 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1846 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1847 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1848 ;;      Totals:        10      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1849 ;;Total ram usage:       21 bytes
  1850 ;; Hardware stack levels used: 1
  1851 ;; Hardware stack levels required when called: 5
  1852 ;; This function calls:
  1853 ;;		_atoi
  1854 ;;		_efgtoa
  1855 ;;		_fputc
  1856 ;;		_isdigit
  1857 ;;		_xtoa
  1858 ;; This function is called by:
  1859 ;;		_vfprintf
  1860 ;; This function uses a non-reentrant model
  1861 ;;
  1862                           
  1863                           	psect	text3
  1864   00E52E                     __ptext3:
  1865                           	callstack 0
  1866   00E52E                     _vfpfcnvrt:
  1867                           	callstack 23
  1868   00E52E                     
  1869                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  1870   00E52E  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1871   00E532  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1872   00E536  CFDE FFF6          	movff	postinc2,tblptrl
  1873   00E53A  CFDD FFF7          	movff	postdec2,tblptrh
  1874   00E53E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1875   00E53E  6AF8               	clrf	tblptru,c
  1876   00E540                     	endif
  1877   00E540                     	if	0	;tblptru may be non-zero
  1878   00E540                     	endif
  1879   00E540  0008               	tblrd		*
  1880   00E542  50F5               	movf	tablat,w,c
  1881   00E544  0A25               	xorlw	37
  1882   00E546  A4D8               	btfss	status,2,c
  1883   00E548  EFA8  F072         	goto	u4701
  1884   00E54C  EFAA  F072         	goto	u4700
  1885   00E550                     u4701:
  1886   00E550  EF8B  F074         	goto	l4393
  1887   00E554                     u4700:
  1888   00E554                     
  1889                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  1890   00E554  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1891   00E558  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1892   00E55C  2ADE               	incf	postinc2,f,c
  1893   00E55E  0E00               	movlw	0
  1894   00E560  22DD               	addwfc	postdec2,f,c
  1895   00E562                     
  1896                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  1897   00E562  0E00               	movlw	0
  1898   00E564  0100               	movlb	0	; () banked
  1899   00E566  6FC6               	movwf	(_width+1)& (0+255),b
  1900   00E568  0E00               	movlw	0
  1901   00E56A  6FC5               	movwf	_width& (0+255),b
  1902   00E56C  C0C5  F0C9         	movff	_width,_flags
  1903   00E570                     
  1904                           ; BSR set to: 0
  1905                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  1906   00E570  69C7               	setf	_prec& (0+255),b
  1907   00E572  69C8               	setf	(_prec+1)& (0+255),b
  1908   00E574                     
  1909                           ; BSR set to: 0
  1910                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1091:         if 
      +                          ((*fmt)[0] == '.') {
  1911   00E574  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1912   00E578  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1913   00E57C  CFDE FFF6          	movff	postinc2,tblptrl
  1914   00E580  CFDD FFF7          	movff	postdec2,tblptrh
  1915   00E584                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1916   00E584  6AF8               	clrf	tblptru,c
  1917   00E586                     	endif
  1918   00E586                     	if	0	;tblptru may be non-zero
  1919   00E586                     	endif
  1920   00E586  0008               	tblrd		*
  1921   00E588  50F5               	movf	tablat,w,c
  1922   00E58A  0A2E               	xorlw	46
  1923   00E58C  A4D8               	btfss	status,2,c
  1924   00E58E  EFCB  F072         	goto	u4711
  1925   00E592  EFCD  F072         	goto	u4710
  1926   00E596                     u4711:
  1927   00E596  EF3C  F073         	goto	l4341
  1928   00E59A                     u4710:
  1929   00E59A                     
  1930                           ; BSR set to: 0
  1931                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1092:            
      +                           prec = 0;
  1932   00E59A  0E00               	movlw	0
  1933   00E59C  6FC8               	movwf	(_prec+1)& (0+255),b
  1934   00E59E  0E00               	movlw	0
  1935   00E5A0  6FC7               	movwf	_prec& (0+255),b
  1936   00E5A2                     
  1937                           ; BSR set to: 0
  1938                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1093:            
      +                           ++*fmt;
  1939   00E5A2  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1940   00E5A6  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1941   00E5AA  2ADE               	incf	postinc2,f,c
  1942   00E5AC  0E00               	movlw	0
  1943   00E5AE  22DD               	addwfc	postdec2,f,c
  1944   00E5B0                     
  1945                           ; BSR set to: 0
  1946                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1094:            
      +                           if ((*fmt)[0] == '*') {
  1947   00E5B0  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1948   00E5B4  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1949   00E5B8  CFDE FFF6          	movff	postinc2,tblptrl
  1950   00E5BC  CFDD FFF7          	movff	postdec2,tblptrh
  1951   00E5C0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1952   00E5C0  6AF8               	clrf	tblptru,c
  1953   00E5C2                     	endif
  1954   00E5C2                     	if	0	;tblptru may be non-zero
  1955   00E5C2                     	endif
  1956   00E5C2  0008               	tblrd		*
  1957   00E5C4  50F5               	movf	tablat,w,c
  1958   00E5C6  0A2A               	xorlw	42
  1959   00E5C8  A4D8               	btfss	status,2,c
  1960   00E5CA  EFE9  F072         	goto	u4721
  1961   00E5CE  EFEB  F072         	goto	u4720
  1962   00E5D2                     u4721:
  1963   00E5D2  EF08  F073         	goto	l4333
  1964   00E5D6                     u4720:
  1965   00E5D6                     
  1966                           ; BSR set to: 0
  1967                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1095:            
      +                               ++*fmt;
  1968   00E5D6  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1969   00E5DA  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1970   00E5DE  2ADE               	incf	postinc2,f,c
  1971   00E5E0  0E00               	movlw	0
  1972   00E5E2  22DD               	addwfc	postdec2,f,c
  1973                           
  1974                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1096:            
      +                               prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  1975   00E5E4  C050  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1976   00E5E8  C051  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1977   00E5EC  CFDF F052          	movff	indf2,??_vfpfcnvrt
  1978   00E5F0  0E02               	movlw	2
  1979   00E5F2  26DE               	addwf	postinc2,f,c
  1980   00E5F4  CFDF F053          	movff	indf2,??_vfpfcnvrt+1
  1981   00E5F8  0E00               	movlw	0
  1982   00E5FA  22DD               	addwfc	postdec2,f,c
  1983   00E5FC  C052  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1984   00E600  C053  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1985   00E604  CFDE F0C7          	movff	postinc2,_prec
  1986   00E608  CFDD F0C8          	movff	postdec2,_prec+1
  1987                           
  1988                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1097:            
      +                           } else {
  1989   00E60C  EF3C  F073         	goto	l4341
  1990   00E610                     l4333:
  1991                           
  1992                           ; BSR set to: 0
  1993                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1098:            
      +                               prec = atoi(*fmt);
  1994   00E610  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1995   00E614  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1996   00E618  CFDE F007          	movff	postinc2,atoi@s
  1997   00E61C  CFDD F008          	movff	postdec2,atoi@s+1
  1998   00E620  EC76  F06C         	call	_atoi	;wreg free
  1999   00E624  C007  F0C7         	movff	?_atoi,_prec
  2000   00E628  C008  F0C8         	movff	?_atoi+1,_prec+1
  2001                           
  2002                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1099:            
      +                               while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  2003   00E62C  EF1F  F073         	goto	l4339
  2004   00E630                     l4335:
  2005                           
  2006                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1100:            
      +                                   ++*fmt;
  2007   00E630  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2008   00E634  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2009   00E638  2ADE               	incf	postinc2,f,c
  2010   00E63A  0E00               	movlw	0
  2011   00E63C  22DD               	addwfc	postdec2,f,c
  2012   00E63E                     l4339:
  2013   00E63E  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2014   00E642  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2015   00E646  CFDE FFF6          	movff	postinc2,tblptrl
  2016   00E64A  CFDD FFF7          	movff	postdec2,tblptrh
  2017   00E64E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2018   00E64E  6AF8               	clrf	tblptru,c
  2019   00E650                     	endif
  2020   00E650                     	if	0	;tblptru may be non-zero
  2021   00E650                     	endif
  2022   00E650  0008               	tblrd		*
  2023   00E652  CFF5 F052          	movff	tablat,??_vfpfcnvrt
  2024   00E656  0ED0               	movlw	208
  2025   00E658  2452               	addwf	??_vfpfcnvrt^0,w,c
  2026   00E65A  6E53               	movwf	(??_vfpfcnvrt+1)^0,c
  2027   00E65C  6A54               	clrf	(??_vfpfcnvrt+2)^0,c
  2028   00E65E  0EFF               	movlw	255
  2029   00E660  2254               	addwfc	(??_vfpfcnvrt+2)^0,f,c
  2030   00E662  5054               	movf	(??_vfpfcnvrt+2)^0,w,c
  2031   00E664  E109               	bnz	u4730
  2032   00E666  0E0A               	movlw	10
  2033   00E668  5C53               	subwf	(??_vfpfcnvrt+1)^0,w,c
  2034   00E66A  A0D8               	btfss	status,0,c
  2035   00E66C  EF3A  F073         	goto	u4731
  2036   00E670  EF3C  F073         	goto	u4730
  2037   00E674                     u4731:
  2038   00E674  EF18  F073         	goto	l4335
  2039   00E678                     u4730:
  2040   00E678                     l4341:
  2041                           
  2042                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1239:   if (0
  2043   00E678  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2044   00E67C  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2045   00E680  CFDE F098          	movff	postinc2,vfpfcnvrt@cp
  2046   00E684  CFDD F099          	movff	postdec2,vfpfcnvrt@cp+1
  2047   00E688  C098  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2048   00E68C  C099  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2049   00E690                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2050   00E690  6AF8               	clrf	tblptru,c
  2051   00E692                     	endif
  2052   00E692                     	if	0	;tblptru may be non-zero
  2053   00E692                     	endif
  2054   00E692  0008               	tblrd		*
  2055   00E694  50F5               	movf	tablat,w,c
  2056   00E696  0A78               	xorlw	120
  2057   00E698  A4D8               	btfss	status,2,c
  2058   00E69A  EF51  F073         	goto	u4741
  2059   00E69E  EF53  F073         	goto	u4740
  2060   00E6A2                     u4741:
  2061   00E6A2  EFB1  F073         	goto	l4355
  2062   00E6A6                     u4740:
  2063   00E6A6                     
  2064                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1252:     ) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1295:    convarg.llu 
      +                          = (unsigned long long)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (un
      +                          signed int)0));
  2065   00E6A6  C050  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2066   00E6AA  C051  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2067   00E6AE  CFDF F052          	movff	indf2,??_vfpfcnvrt
  2068   00E6B2  0E02               	movlw	2
  2069   00E6B4  26DE               	addwf	postinc2,f,c
  2070   00E6B6  CFDF F053          	movff	indf2,??_vfpfcnvrt+1
  2071   00E6BA  0E00               	movlw	0
  2072   00E6BC  22DD               	addwfc	postdec2,f,c
  2073   00E6BE  C052  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2074   00E6C2  C053  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2075   00E6C6  CFDE F054          	movff	postinc2,??_vfpfcnvrt+2
  2076   00E6CA  CFDD F055          	movff	postdec2,??_vfpfcnvrt+3
  2077   00E6CE  C054  F08F         	movff	??_vfpfcnvrt+2,vfpfcnvrt@convarg
  2078   00E6D2  C055  F090         	movff	??_vfpfcnvrt+3,vfpfcnvrt@convarg+1
  2079   00E6D6  0100               	movlb	0	; () banked
  2080   00E6D8  6B91               	clrf	(vfpfcnvrt@convarg+2)& (0+255),b
  2081   00E6DA  6B92               	clrf	(vfpfcnvrt@convarg+3)& (0+255),b
  2082   00E6DC  6B93               	clrf	(vfpfcnvrt@convarg+4)& (0+255),b
  2083   00E6DE  6B94               	clrf	(vfpfcnvrt@convarg+5)& (0+255),b
  2084   00E6E0  6B95               	clrf	(vfpfcnvrt@convarg+6)& (0+255),b
  2085   00E6E2  6B96               	clrf	(vfpfcnvrt@convarg+7)& (0+255),b
  2086                           
  2087                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1297:    *fmt = c
      +                          p+1;
  2088   00E6E4  0E01               	movlw	1
  2089   00E6E6  2598               	addwf	vfpfcnvrt@cp& (0+255),w,b
  2090   00E6E8  6E52               	movwf	??_vfpfcnvrt^0,c
  2091   00E6EA  0E00               	movlw	0
  2092   00E6EC  2199               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  2093   00E6EE  6E53               	movwf	(??_vfpfcnvrt+1)^0,c
  2094   00E6F0  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2095   00E6F4  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2096   00E6F8  C052  FFDE         	movff	??_vfpfcnvrt,postinc2
  2097   00E6FC  C053  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2098                           
  2099                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1298:    switch (
      +                          *cp) {
  2100   00E700  EF9A  F073         	goto	l4353
  2101   00E704                     l4347:
  2102                           
  2103                           ; BSR set to: 0
  2104                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1314:      return
      +                           (void) xtoa(fp,convarg.llu);;	Return value of _vfpfcnvrt is never used
  2105   00E704  C04C  F01C         	movff	vfpfcnvrt@fp,xtoa@fp
  2106   00E708  C04D  F01D         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  2107   00E70C  C08F  F01E         	movff	vfpfcnvrt@convarg,xtoa@d
  2108   00E710  C090  F01F         	movff	vfpfcnvrt@convarg+1,xtoa@d+1
  2109   00E714  C091  F020         	movff	vfpfcnvrt@convarg+2,xtoa@d+2
  2110   00E718  C092  F021         	movff	vfpfcnvrt@convarg+3,xtoa@d+3
  2111   00E71C  C093  F022         	movff	vfpfcnvrt@convarg+4,xtoa@d+4
  2112   00E720  C094  F023         	movff	vfpfcnvrt@convarg+5,xtoa@d+5
  2113   00E724  C095  F024         	movff	vfpfcnvrt@convarg+6,xtoa@d+6
  2114   00E728  C096  F025         	movff	vfpfcnvrt@convarg+7,xtoa@d+7
  2115   00E72C  EC20  F06D         	call	_xtoa	;wreg free
  2116   00E730  EFA0  F074         	goto	l1179
  2117   00E734                     l4353:
  2118                           
  2119                           ; BSR set to: 0
  2120   00E734  C098  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2121   00E738  C099  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2122   00E73C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2123   00E73C  6AF8               	clrf	tblptru,c
  2124   00E73E                     	endif
  2125   00E73E                     	if	0	;tblptru may be non-zero
  2126   00E73E                     	endif
  2127   00E73E  0008               	tblrd		*
  2128   00E740  50F5               	movf	tablat,w,c
  2129   00E742  6E52               	movwf	??_vfpfcnvrt^0,c
  2130   00E744  6A53               	clrf	(??_vfpfcnvrt+1)^0,c
  2131                           
  2132                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2133                           ; Switch size 1, requested type "simple"
  2134                           ; Number of cases is 1, Range of values is 0 to 0
  2135                           ; switch strategies available:
  2136                           ; Name         Instructions Cycles
  2137                           ; simple_byte            4     3 (average)
  2138                           ;	Chosen strategy is simple_byte
  2139   00E746  5053               	movf	(??_vfpfcnvrt+1)^0,w,c
  2140   00E748  0A00               	xorlw	0	; case 0
  2141   00E74A  B4D8               	btfsc	status,2,c
  2142   00E74C  EFAA  F073         	goto	l4869
  2143   00E750  EFB1  F073         	goto	l4355
  2144   00E754                     l4869:
  2145                           
  2146                           ; BSR set to: 0
  2147                           ; Switch size 1, requested type "simple"
  2148                           ; Number of cases is 1, Range of values is 120 to 120
  2149                           ; switch strategies available:
  2150                           ; Name         Instructions Cycles
  2151                           ; simple_byte            4     3 (average)
  2152                           ;	Chosen strategy is simple_byte
  2153   00E754  5052               	movf	??_vfpfcnvrt^0,w,c
  2154   00E756  0A78               	xorlw	120	; case 120
  2155   00E758  B4D8               	btfsc	status,2,c
  2156   00E75A  EF82  F073         	goto	l4347
  2157   00E75E  EFB1  F073         	goto	l4355
  2158   00E762                     l4355:
  2159                           
  2160                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1392:   cp = *fmt
      +                          ;
  2161   00E762  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2162   00E766  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2163   00E76A  CFDE F098          	movff	postinc2,vfpfcnvrt@cp
  2164   00E76E  CFDD F099          	movff	postdec2,vfpfcnvrt@cp+1
  2165   00E772                     
  2166                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1393:   c = *cp;
  2167   00E772  C098  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2168   00E776  C099  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2169   00E77A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2170   00E77A  6AF8               	clrf	tblptru,c
  2171   00E77C                     	endif
  2172   00E77C                     	if	0	;tblptru may be non-zero
  2173   00E77C                     	endif
  2174   00E77C  0008               	tblrd		*
  2175   00E77E  CFF5 F097          	movff	tablat,vfpfcnvrt@c
  2176                           
  2177                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1394:   switch(c)
      +                           {
  2178   00E782  EFCF  F073         	goto	l4367
  2179   00E786                     l4359:
  2180                           
  2181                           ; BSR set to: 0
  2182                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1398:     cp++;
  2183   00E786  4B98               	infsnz	vfpfcnvrt@cp& (0+255),f,b
  2184   00E788  2B99               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
  2185                           
  2186                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1399:     break;
  2187   00E78A  EFE9  F073         	goto	l4369
  2188   00E78E                     l4361:
  2189                           
  2190                           ; BSR set to: 0
  2191                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1424:     c = 'l'
      +                          ;
  2192   00E78E  0E6C               	movlw	108
  2193   00E790  6F97               	movwf	vfpfcnvrt@c& (0+255),b
  2194                           
  2195                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1425:     break;
  2196   00E792  EFE9  F073         	goto	l4369
  2197   00E796                     l4363:
  2198                           
  2199                           ; BSR set to: 0
  2200                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1427:     c = 0;
  2201   00E796  0E00               	movlw	0
  2202   00E798  6F97               	movwf	vfpfcnvrt@c& (0+255),b
  2203                           
  2204                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1428:     break;
  2205   00E79A  EFE9  F073         	goto	l4369
  2206   00E79E                     l4367:
  2207   00E79E  0100               	movlb	0	; () banked
  2208   00E7A0  5197               	movf	vfpfcnvrt@c& (0+255),w,b
  2209   00E7A2  6E52               	movwf	??_vfpfcnvrt^0,c
  2210   00E7A4  6A53               	clrf	(??_vfpfcnvrt+1)^0,c
  2211                           
  2212                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2213                           ; Switch size 1, requested type "simple"
  2214                           ; Number of cases is 1, Range of values is 0 to 0
  2215                           ; switch strategies available:
  2216                           ; Name         Instructions Cycles
  2217                           ; simple_byte            4     3 (average)
  2218                           ;	Chosen strategy is simple_byte
  2219   00E7A6  5053               	movf	(??_vfpfcnvrt+1)^0,w,c
  2220   00E7A8  0A00               	xorlw	0	; case 0
  2221   00E7AA  B4D8               	btfsc	status,2,c
  2222   00E7AC  EFDA  F073         	goto	l4871
  2223   00E7B0  EFCB  F073         	goto	l4363
  2224   00E7B4                     l4871:
  2225                           
  2226                           ; BSR set to: 0
  2227                           ; Switch size 1, requested type "simple"
  2228                           ; Number of cases is 3, Range of values is 76 to 108
  2229                           ; switch strategies available:
  2230                           ; Name         Instructions Cycles
  2231                           ; simple_byte           10     6 (average)
  2232                           ;	Chosen strategy is simple_byte
  2233   00E7B4  5052               	movf	??_vfpfcnvrt^0,w,c
  2234   00E7B6  0A4C               	xorlw	76	; case 76
  2235   00E7B8  B4D8               	btfsc	status,2,c
  2236   00E7BA  EFC3  F073         	goto	l4359
  2237   00E7BE  0A2B               	xorlw	43	; case 103
  2238   00E7C0  B4D8               	btfsc	status,2,c
  2239   00E7C2  EFC7  F073         	goto	l4361
  2240   00E7C6  0A0B               	xorlw	11	; case 108
  2241   00E7C8  B4D8               	btfsc	status,2,c
  2242   00E7CA  EFC3  F073         	goto	l4359
  2243   00E7CE  EFCB  F073         	goto	l4363
  2244   00E7D2                     l4369:
  2245                           
  2246                           ; BSR set to: 0
  2247   00E7D2  C098  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2248   00E7D6  C099  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2249   00E7DA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2250   00E7DA  6AF8               	clrf	tblptru,c
  2251   00E7DC                     	endif
  2252   00E7DC                     	if	0	;tblptru may be non-zero
  2253   00E7DC                     	endif
  2254   00E7DC  0008               	tblrd		*
  2255   00E7DE  50F5               	movf	tablat,w,c
  2256   00E7E0  0A67               	xorlw	103
  2257   00E7E2  A4D8               	btfss	status,2,c
  2258   00E7E4  EFF6  F073         	goto	u4751
  2259   00E7E8  EFF8  F073         	goto	u4750
  2260   00E7EC                     u4751:
  2261   00E7EC  EF82  F074         	goto	l4389
  2262   00E7F0                     u4750:
  2263   00E7F0  EF2E  F074         	goto	l4377
  2264   00E7F4                     l4371:
  2265                           
  2266                           ; BSR set to: 0
  2267                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1459:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2268   00E7F4  C050  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2269   00E7F8  C051  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2270   00E7FC  CFDF F052          	movff	indf2,??_vfpfcnvrt
  2271   00E800  0E04               	movlw	4
  2272   00E802  26DE               	addwf	postinc2,f,c
  2273   00E804  CFDF F053          	movff	indf2,??_vfpfcnvrt+1
  2274   00E808  0E00               	movlw	0
  2275   00E80A  22DD               	addwfc	postdec2,f,c
  2276   00E80C  C052  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2277   00E810  C053  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2278   00E814  CFDE F08F          	movff	postinc2,vfpfcnvrt@convarg
  2279   00E818  CFDE F090          	movff	postinc2,vfpfcnvrt@convarg+1
  2280   00E81C  CFDE F091          	movff	postinc2,vfpfcnvrt@convarg+2
  2281   00E820  CFDE F092          	movff	postinc2,vfpfcnvrt@convarg+3
  2282                           
  2283                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1460:      break;
  2284   00E824  EF43  F074         	goto	l4379
  2285   00E828                     l4373:
  2286                           
  2287                           ; BSR set to: 0
  2288                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1462:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2289   00E828  C050  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2290   00E82C  C051  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2291   00E830  CFDF F052          	movff	indf2,??_vfpfcnvrt
  2292   00E834  0E04               	movlw	4
  2293   00E836  26DE               	addwf	postinc2,f,c
  2294   00E838  CFDF F053          	movff	indf2,??_vfpfcnvrt+1
  2295   00E83C  0E00               	movlw	0
  2296   00E83E  22DD               	addwfc	postdec2,f,c
  2297   00E840  C052  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2298   00E844  C053  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2299   00E848  CFDE F08F          	movff	postinc2,vfpfcnvrt@convarg
  2300   00E84C  CFDE F090          	movff	postinc2,vfpfcnvrt@convarg+1
  2301   00E850  CFDE F091          	movff	postinc2,vfpfcnvrt@convarg+2
  2302   00E854  CFDE F092          	movff	postinc2,vfpfcnvrt@convarg+3
  2303                           
  2304                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1463:      break;
  2305   00E858  EF43  F074         	goto	l4379
  2306   00E85C                     l4377:
  2307                           
  2308                           ; BSR set to: 0
  2309   00E85C  5197               	movf	vfpfcnvrt@c& (0+255),w,b
  2310   00E85E  6E52               	movwf	??_vfpfcnvrt^0,c
  2311   00E860  6A53               	clrf	(??_vfpfcnvrt+1)^0,c
  2312                           
  2313                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2314                           ; Switch size 1, requested type "simple"
  2315                           ; Number of cases is 1, Range of values is 0 to 0
  2316                           ; switch strategies available:
  2317                           ; Name         Instructions Cycles
  2318                           ; simple_byte            4     3 (average)
  2319                           ;	Chosen strategy is simple_byte
  2320   00E862  5053               	movf	(??_vfpfcnvrt+1)^0,w,c
  2321   00E864  0A00               	xorlw	0	; case 0
  2322   00E866  B4D8               	btfsc	status,2,c
  2323   00E868  EF38  F074         	goto	l4873
  2324   00E86C  EF43  F074         	goto	l4379
  2325   00E870                     l4873:
  2326                           
  2327                           ; BSR set to: 0
  2328                           ; Switch size 1, requested type "simple"
  2329                           ; Number of cases is 2, Range of values is 76 to 108
  2330                           ; switch strategies available:
  2331                           ; Name         Instructions Cycles
  2332                           ; simple_byte            7     4 (average)
  2333                           ;	Chosen strategy is simple_byte
  2334   00E870  5052               	movf	??_vfpfcnvrt^0,w,c
  2335   00E872  0A4C               	xorlw	76	; case 76
  2336   00E874  B4D8               	btfsc	status,2,c
  2337   00E876  EF14  F074         	goto	l4373
  2338   00E87A  0A20               	xorlw	32	; case 108
  2339   00E87C  B4D8               	btfsc	status,2,c
  2340   00E87E  EFFA  F073         	goto	l4371
  2341   00E882  EF43  F074         	goto	l4379
  2342   00E886                     l4379:
  2343                           
  2344                           ; BSR set to: 0
  2345                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1465:    *fmt = c
      +                          p+1;
  2346   00E886  0E01               	movlw	1
  2347   00E888  2598               	addwf	vfpfcnvrt@cp& (0+255),w,b
  2348   00E88A  6E52               	movwf	??_vfpfcnvrt^0,c
  2349   00E88C  0E00               	movlw	0
  2350   00E88E  2199               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  2351   00E890  6E53               	movwf	(??_vfpfcnvrt+1)^0,c
  2352   00E892  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2353   00E896  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2354   00E89A  C052  FFDE         	movff	??_vfpfcnvrt,postinc2
  2355   00E89E  C053  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2356                           
  2357                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1466:    switch (
      +                          *cp) {
  2358   00E8A2  EF6B  F074         	goto	l4387
  2359   00E8A6                     l4381:
  2360                           
  2361                           ; BSR set to: 0
  2362                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1493:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  2363   00E8A6  C04C  F042         	movff	vfpfcnvrt@fp,efgtoa@fp
  2364   00E8AA  C04D  F043         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2365   00E8AE  C08F  F044         	movff	vfpfcnvrt@convarg,efgtoa@f
  2366   00E8B2  C090  F045         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  2367   00E8B6  C091  F046         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  2368   00E8BA  C092  F047         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  2369   00E8BE  C098  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2370   00E8C2  C099  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2371   00E8C6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2372   00E8C6  6AF8               	clrf	tblptru,c
  2373   00E8C8                     	endif
  2374   00E8C8                     	if	0	;tblptru may be non-zero
  2375   00E8C8                     	endif
  2376   00E8C8  0008               	tblrd		*
  2377   00E8CA  CFF5 F048          	movff	tablat,efgtoa@c
  2378   00E8CE  EC16  F079         	call	_efgtoa	;wreg free
  2379   00E8D2  EFA0  F074         	goto	l1179
  2380   00E8D6                     l4387:
  2381                           
  2382                           ; BSR set to: 0
  2383   00E8D6  C098  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2384   00E8DA  C099  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2385   00E8DE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2386   00E8DE  6AF8               	clrf	tblptru,c
  2387   00E8E0                     	endif
  2388   00E8E0                     	if	0	;tblptru may be non-zero
  2389   00E8E0                     	endif
  2390   00E8E0  0008               	tblrd		*
  2391   00E8E2  50F5               	movf	tablat,w,c
  2392   00E8E4  6E52               	movwf	??_vfpfcnvrt^0,c
  2393   00E8E6  6A53               	clrf	(??_vfpfcnvrt+1)^0,c
  2394                           
  2395                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2396                           ; Switch size 1, requested type "simple"
  2397                           ; Number of cases is 1, Range of values is 0 to 0
  2398                           ; switch strategies available:
  2399                           ; Name         Instructions Cycles
  2400                           ; simple_byte            4     3 (average)
  2401                           ;	Chosen strategy is simple_byte
  2402   00E8E8  5053               	movf	(??_vfpfcnvrt+1)^0,w,c
  2403   00E8EA  0A00               	xorlw	0	; case 0
  2404   00E8EC  B4D8               	btfsc	status,2,c
  2405   00E8EE  EF7B  F074         	goto	l4875
  2406   00E8F2  EF82  F074         	goto	l4389
  2407   00E8F6                     l4875:
  2408                           
  2409                           ; BSR set to: 0
  2410                           ; Switch size 1, requested type "simple"
  2411                           ; Number of cases is 1, Range of values is 103 to 103
  2412                           ; switch strategies available:
  2413                           ; Name         Instructions Cycles
  2414                           ; simple_byte            4     3 (average)
  2415                           ;	Chosen strategy is simple_byte
  2416   00E8F6  5052               	movf	??_vfpfcnvrt^0,w,c
  2417   00E8F8  0A67               	xorlw	103	; case 103
  2418   00E8FA  B4D8               	btfsc	status,2,c
  2419   00E8FC  EF53  F074         	goto	l4381
  2420   00E900  EF82  F074         	goto	l4389
  2421   00E904                     l4389:
  2422                           
  2423                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  2424   00E904  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2425   00E908  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2426   00E90C  2ADE               	incf	postinc2,f,c
  2427   00E90E  0E00               	movlw	0
  2428   00E910  22DD               	addwfc	postdec2,f,c
  2429   00E912  EFA0  F074         	goto	l1179
  2430   00E916                     l4393:
  2431                           
  2432                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  2433   00E916  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2434   00E91A  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2435   00E91E  CFDE FFF6          	movff	postinc2,tblptrl
  2436   00E922  CFDD FFF7          	movff	postdec2,tblptrh
  2437   00E926                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2438   00E926  6AF8               	clrf	tblptru,c
  2439   00E928                     	endif
  2440   00E928                     	if	0	;tblptru may be non-zero
  2441   00E928                     	endif
  2442   00E928  0008               	tblrd		*
  2443   00E92A  50F5               	movf	tablat,w,c
  2444   00E92C  6E01               	movwf	fputc@c^0,c
  2445   00E92E  6A02               	clrf	(fputc@c+1)^0,c
  2446   00E930  C04C  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2447   00E934  C04D  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2448   00E938  EC18  F06A         	call	_fputc	;wreg free
  2449   00E93C  EF82  F074         	goto	l4389
  2450   00E940                     l1179:
  2451   00E940  0012               	return		;funcret
  2452   00E942                     __end_of_vfpfcnvrt:
  2453                           	callstack 0
  2454                           
  2455 ;; *************** function _xtoa *****************
  2456 ;; Defined at:
  2457 ;;		line 934 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2458 ;; Parameters:    Size  Location     Type
  2459 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  2460 ;;		 -> sprintf@f(11), 
  2461 ;;  d               8   29[COMRAM] unsigned long long 
  2462 ;; Auto vars:     Size  Location     Type
  2463 ;;  n               8   51[COMRAM] unsigned long long 
  2464 ;;  i               2   59[COMRAM] int 
  2465 ;;  p               2   49[COMRAM] int 
  2466 ;;  w               2   45[COMRAM] int 
  2467 ;;  c               1   61[COMRAM] unsigned char 
  2468 ;; Return value:  Size  Location     Type
  2469 ;;                  1    wreg      void 
  2470 ;; Registers used:
  2471 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2472 ;; Tracked objects:
  2473 ;;		On entry : 0/0
  2474 ;;		On exit  : 0/0
  2475 ;;		Unchanged: 0/0
  2476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2477 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2478 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2479 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2480 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2481 ;;Total ram usage:       35 bytes
  2482 ;; Hardware stack levels used: 1
  2483 ;; Hardware stack levels required when called: 4
  2484 ;; This function calls:
  2485 ;;		_pad
  2486 ;; This function is called by:
  2487 ;;		_vfpfcnvrt
  2488 ;; This function uses a non-reentrant model
  2489 ;;
  2490                           
  2491                           	psect	text4
  2492   00DA40                     __ptext4:
  2493                           	callstack 0
  2494   00DA40                     _xtoa:
  2495                           	callstack 23
  2496   00DA40                     
  2497                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 934: static void 
      +                          xtoa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c9
      +                          9\common\doprnt.c: 937: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\do
      +                          prnt.c: 938:  char c;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 939:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\do
      +                          prnt.c: 940:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\
      +                          c99\common\doprnt.c: 948:     p = (0 < prec) ? prec : 1;
  2498   00DA40  0100               	movlb	0	; () banked
  2499   00DA42  BFC8               	btfsc	(_prec+1)& (0+255),7,b
  2500   00DA44  EF2E  F06D         	goto	u4550
  2501   00DA48  51C8               	movf	(_prec+1)& (0+255),w,b
  2502   00DA4A  E106               	bnz	u4551
  2503   00DA4C  05C7               	decf	_prec& (0+255),w,b
  2504   00DA4E  B0D8               	btfsc	status,0,c
  2505   00DA50  EF2C  F06D         	goto	u4551
  2506   00DA54  EF2E  F06D         	goto	u4550
  2507   00DA58                     u4551:
  2508   00DA58  EF34  F06D         	goto	l1150
  2509   00DA5C                     u4550:
  2510   00DA5C                     
  2511                           ; BSR set to: 0
  2512   00DA5C  0E00               	movlw	0
  2513   00DA5E  6E33               	movwf	(xtoa@p+1)^0,c
  2514   00DA60  0E01               	movlw	1
  2515   00DA62  6E32               	movwf	xtoa@p^0,c
  2516   00DA64  EF38  F06D         	goto	l1152
  2517   00DA68                     l1150:
  2518                           
  2519                           ; BSR set to: 0
  2520   00DA68  C0C7  F032         	movff	_prec,xtoa@p
  2521   00DA6C  C0C8  F033         	movff	_prec+1,xtoa@p+1
  2522   00DA70                     l1152:
  2523                           
  2524                           ; BSR set to: 0
  2525                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 949:     w = widt
      +                          h;
  2526   00DA70  C0C5  F02E         	movff	_width,xtoa@w
  2527   00DA74  C0C6  F02F         	movff	_width+1,xtoa@w+1
  2528                           
  2529                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 957:     n = d;
  2530   00DA78  C01E  F034         	movff	xtoa@d,xtoa@n
  2531   00DA7C  C01F  F035         	movff	xtoa@d+1,xtoa@n+1
  2532   00DA80  C020  F036         	movff	xtoa@d+2,xtoa@n+2
  2533   00DA84  C021  F037         	movff	xtoa@d+3,xtoa@n+3
  2534   00DA88  C022  F038         	movff	xtoa@d+4,xtoa@n+4
  2535   00DA8C  C023  F039         	movff	xtoa@d+5,xtoa@n+5
  2536   00DA90  C024  F03A         	movff	xtoa@d+6,xtoa@n+6
  2537   00DA94  C025  F03B         	movff	xtoa@d+7,xtoa@n+7
  2538   00DA98                     
  2539                           ; BSR set to: 0
  2540                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 958:     i = size
      +                          of(dbuf) - 1;
  2541   00DA98  0E00               	movlw	0
  2542   00DA9A  6E3D               	movwf	(xtoa@i+1)^0,c
  2543   00DA9C  0E4F               	movlw	79
  2544   00DA9E  6E3C               	movwf	xtoa@i^0,c
  2545   00DAA0                     
  2546                           ; BSR set to: 0
  2547                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 959:     dbuf[i] 
      +                          = '\0';
  2548   00DAA0  0E00               	movlw	0
  2549   00DAA2  0101               	movlb	1	; () banked
  2550   00DAA4  6F4F               	movwf	(_dbuf+79)& (0+255),b
  2551                           
  2552                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 960:     while (!
      +                          (i < 2) && (n || (0 < p)
  2553   00DAA6  EFB0  F06D         	goto	l4225
  2554   00DAAA                     l4205:
  2555                           
  2556                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 964:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 965:         --i;
  2557   00DAAA  063C               	decf	xtoa@i^0,f,c
  2558   00DAAC  A0D8               	btfss	status,0,c
  2559   00DAAE  063D               	decf	(xtoa@i+1)^0,f,c
  2560   00DAB0                     
  2561                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 966:         c = 
      +                          n & 0x0f;
  2562   00DAB0  5034               	movf	xtoa@n^0,w,c
  2563   00DAB2  0B0F               	andlw	15
  2564   00DAB4  6E3E               	movwf	xtoa@c^0,c
  2565   00DAB6                     
  2566                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 968:         c = 
      +                          (c < 10) ? (int)'0' + c : (int)'a' + (c - 10);
  2567   00DAB6  0E09               	movlw	9
  2568   00DAB8  643E               	cpfsgt	xtoa@c^0,c
  2569   00DABA  EF61  F06D         	goto	u4561
  2570   00DABE  EF63  F06D         	goto	u4560
  2571   00DAC2                     u4561:
  2572   00DAC2  EF6B  F06D         	goto	l4213
  2573   00DAC6                     u4560:
  2574   00DAC6  0E57               	movlw	87
  2575   00DAC8  243E               	addwf	xtoa@c^0,w,c
  2576   00DACA  6E30               	movwf	_xtoa$1562^0,c
  2577   00DACC  6A31               	clrf	(_xtoa$1562+1)^0,c
  2578   00DACE  0E00               	movlw	0
  2579   00DAD0  2231               	addwfc	(_xtoa$1562+1)^0,f,c
  2580   00DAD2  EF71  F06D         	goto	l4215
  2581   00DAD6                     l4213:
  2582   00DAD6  0E30               	movlw	48
  2583   00DAD8  243E               	addwf	xtoa@c^0,w,c
  2584   00DADA  6E30               	movwf	_xtoa$1562^0,c
  2585   00DADC  6A31               	clrf	(_xtoa$1562+1)^0,c
  2586   00DADE  0E00               	movlw	0
  2587   00DAE0  2231               	addwfc	(_xtoa$1562+1)^0,f,c
  2588   00DAE2                     l4215:
  2589   00DAE2  C030  F03E         	movff	_xtoa$1562,xtoa@c
  2590   00DAE6                     
  2591                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 977:         dbuf
      +                          [i] = (char)c;
  2592   00DAE6  0E00               	movlw	low _dbuf
  2593   00DAE8  243C               	addwf	xtoa@i^0,w,c
  2594   00DAEA  6ED9               	movwf	fsr2l,c
  2595   00DAEC  0E01               	movlw	high _dbuf
  2596   00DAEE  203D               	addwfc	(xtoa@i+1)^0,w,c
  2597   00DAF0  6EDA               	movwf	fsr2h,c
  2598   00DAF2  C03E  FFDF         	movff	xtoa@c,indf2
  2599   00DAF6                     
  2600                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 978:         --p;
  2601   00DAF6  0632               	decf	xtoa@p^0,f,c
  2602   00DAF8  A0D8               	btfss	status,0,c
  2603   00DAFA  0633               	decf	(xtoa@p+1)^0,f,c
  2604   00DAFC                     
  2605                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 979:         --w;
  2606   00DAFC  062E               	decf	xtoa@w^0,f,c
  2607   00DAFE  A0D8               	btfss	status,0,c
  2608   00DB00  062F               	decf	(xtoa@w+1)^0,f,c
  2609   00DB02                     
  2610                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 980:         n = 
      +                          n >> 4;
  2611   00DB02  C034  F026         	movff	xtoa@n,??_xtoa
  2612   00DB06  C035  F027         	movff	xtoa@n+1,??_xtoa+1
  2613   00DB0A  C036  F028         	movff	xtoa@n+2,??_xtoa+2
  2614   00DB0E  C037  F029         	movff	xtoa@n+3,??_xtoa+3
  2615   00DB12  C038  F02A         	movff	xtoa@n+4,??_xtoa+4
  2616   00DB16  C039  F02B         	movff	xtoa@n+5,??_xtoa+5
  2617   00DB1A  C03A  F02C         	movff	xtoa@n+6,??_xtoa+6
  2618   00DB1E  C03B  F02D         	movff	xtoa@n+7,??_xtoa+7
  2619   00DB22  0E05               	movlw	5
  2620   00DB24  EF9D  F06D         	goto	u4570
  2621   00DB28                     u4575:
  2622   00DB28  90D8               	bcf	status,0,c
  2623   00DB2A  322D               	rrcf	(??_xtoa+7)^0,f,c
  2624   00DB2C  322C               	rrcf	(??_xtoa+6)^0,f,c
  2625   00DB2E  322B               	rrcf	(??_xtoa+5)^0,f,c
  2626   00DB30  322A               	rrcf	(??_xtoa+4)^0,f,c
  2627   00DB32  3229               	rrcf	(??_xtoa+3)^0,f,c
  2628   00DB34  3228               	rrcf	(??_xtoa+2)^0,f,c
  2629   00DB36  3227               	rrcf	(??_xtoa+1)^0,f,c
  2630   00DB38  3226               	rrcf	??_xtoa^0,f,c
  2631   00DB3A                     u4570:
  2632   00DB3A  2EE8               	decfsz	wreg,f,c
  2633   00DB3C  EF94  F06D         	goto	u4575
  2634   00DB40  C026  F034         	movff	??_xtoa,xtoa@n
  2635   00DB44  C027  F035         	movff	??_xtoa+1,xtoa@n+1
  2636   00DB48  C028  F036         	movff	??_xtoa+2,xtoa@n+2
  2637   00DB4C  C029  F037         	movff	??_xtoa+3,xtoa@n+3
  2638   00DB50  C02A  F038         	movff	??_xtoa+4,xtoa@n+4
  2639   00DB54  C02B  F039         	movff	??_xtoa+5,xtoa@n+5
  2640   00DB58  C02C  F03A         	movff	??_xtoa+6,xtoa@n+6
  2641   00DB5C  C02D  F03B         	movff	??_xtoa+7,xtoa@n+7
  2642   00DB60                     l4225:
  2643                           
  2644                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 960:     while (!
      +                          (i < 2) && (n || (0 < p)
  2645   00DB60  BE3D               	btfsc	(xtoa@i+1)^0,7,c
  2646   00DB62  EFBC  F06D         	goto	u4581
  2647   00DB66  503D               	movf	(xtoa@i+1)^0,w,c
  2648   00DB68  E109               	bnz	u4580
  2649   00DB6A  0E02               	movlw	2
  2650   00DB6C  5C3C               	subwf	xtoa@i^0,w,c
  2651   00DB6E  A0D8               	btfss	status,0,c
  2652   00DB70  EFBC  F06D         	goto	u4581
  2653   00DB74  EFBE  F06D         	goto	u4580
  2654   00DB78                     u4581:
  2655   00DB78  EFDA  F06D         	goto	l4231
  2656   00DB7C                     u4580:
  2657   00DB7C  5034               	movf	xtoa@n^0,w,c
  2658   00DB7E  1035               	iorwf	(xtoa@n+1)^0,w,c
  2659   00DB80  1036               	iorwf	(xtoa@n+2)^0,w,c
  2660   00DB82  1037               	iorwf	(xtoa@n+3)^0,w,c
  2661   00DB84  1038               	iorwf	(xtoa@n+4)^0,w,c
  2662   00DB86  1039               	iorwf	(xtoa@n+5)^0,w,c
  2663   00DB88  103A               	iorwf	(xtoa@n+6)^0,w,c
  2664   00DB8A  103B               	iorwf	(xtoa@n+7)^0,w,c
  2665   00DB8C  A4D8               	btfss	status,2,c
  2666   00DB8E  EFCB  F06D         	goto	u4591
  2667   00DB92  EFCD  F06D         	goto	u4590
  2668   00DB96                     u4591:
  2669   00DB96  EF55  F06D         	goto	l4205
  2670   00DB9A                     u4590:
  2671   00DB9A  BE33               	btfsc	(xtoa@p+1)^0,7,c
  2672   00DB9C  EFDA  F06D         	goto	u4600
  2673   00DBA0  5033               	movf	(xtoa@p+1)^0,w,c
  2674   00DBA2  E106               	bnz	u4601
  2675   00DBA4  0432               	decf	xtoa@p^0,w,c
  2676   00DBA6  B0D8               	btfsc	status,0,c
  2677   00DBA8  EFD8  F06D         	goto	u4601
  2678   00DBAC  EFDA  F06D         	goto	u4600
  2679   00DBB0                     u4601:
  2680   00DBB0  EF55  F06D         	goto	l4205
  2681   00DBB4                     u4600:
  2682   00DBB4                     l4231:
  2683                           
  2684                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1000:     return 
      +                          (void) pad(fp, &dbuf[i], w);
  2685   00DBB4  C01C  F011         	movff	xtoa@fp,pad@fp
  2686   00DBB8  C01D  F012         	movff	xtoa@fp+1,pad@fp+1
  2687   00DBBC  0E00               	movlw	low _dbuf
  2688   00DBBE  243C               	addwf	xtoa@i^0,w,c
  2689   00DBC0  6E13               	movwf	pad@buf^0,c
  2690   00DBC2  0E01               	movlw	high _dbuf
  2691   00DBC4  203D               	addwfc	(xtoa@i+1)^0,w,c
  2692   00DBC6  6E14               	movwf	(pad@buf+1)^0,c
  2693   00DBC8  C02E  F015         	movff	xtoa@w,pad@p
  2694   00DBCC  C02F  F016         	movff	xtoa@w+1,pad@p+1
  2695   00DBD0  EC02  F068         	call	_pad	;wreg free
  2696   00DBD4  0012               	return		;funcret
  2697   00DBD6                     __end_of_xtoa:
  2698                           	callstack 0
  2699                           
  2700 ;; *************** function _efgtoa *****************
  2701 ;; Defined at:
  2702 ;;		line 506 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2703 ;; Parameters:    Size  Location     Type
  2704 ;;  fp              2   65[COMRAM] PTR struct _IO_FILE
  2705 ;;		 -> sprintf@f(11), 
  2706 ;;  f               4   67[COMRAM] PTR struct _IO_FILE
  2707 ;;  c               1   71[COMRAM] unsigned char 
  2708 ;; Auto vars:     Size  Location     Type
  2709 ;;  u               4   43[BANK0 ] struct flui
  2710 ;;  g               4   39[BANK0 ] struct flui
  2711 ;;  l               4   28[BANK0 ] struct flui
  2712 ;;  h               4   24[BANK0 ] struct flui
  2713 ;;  ou              4   20[BANK0 ] struct flui
  2714 ;;  n               2   37[BANK0 ] int 
  2715 ;;  e               2   35[BANK0 ] int 
  2716 ;;  i               2   33[BANK0 ] int 
  2717 ;;  w               2   16[BANK0 ] int 
  2718 ;;  p               2   14[BANK0 ] int 
  2719 ;;  d               2   12[BANK0 ] int 
  2720 ;;  m               2   10[BANK0 ] int 
  2721 ;;  ne              2    8[BANK0 ] int 
  2722 ;;  t               2    4[BANK0 ] int 
  2723 ;;  sign            1   32[BANK0 ] unsigned char 
  2724 ;;  mode            1   19[BANK0 ] unsigned char 
  2725 ;;  nmode           1   18[BANK0 ] unsigned char 
  2726 ;;  esign           1    7[BANK0 ] unsigned char 
  2727 ;;  pp              1    6[BANK0 ] unsigned char 
  2728 ;; Return value:  Size  Location     Type
  2729 ;;                  1    wreg      void 
  2730 ;; Registers used:
  2731 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2732 ;; Tracked objects:
  2733 ;;		On entry : 0/0
  2734 ;;		On exit  : 0/0
  2735 ;;		Unchanged: 0/0
  2736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2737 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2738 ;;      Locals:         0      47       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2739 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2740 ;;      Totals:        10      47       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2741 ;;Total ram usage:       57 bytes
  2742 ;; Hardware stack levels used: 1
  2743 ;; Hardware stack levels required when called: 4
  2744 ;; This function calls:
  2745 ;;		___awdiv
  2746 ;;		___awmod
  2747 ;;		___fladd
  2748 ;;		___fldiv
  2749 ;;		___fleq
  2750 ;;		___flge
  2751 ;;		___flmul
  2752 ;;		___flneg
  2753 ;;		___flsub
  2754 ;;		___fltol
  2755 ;;		___fpclassifyf
  2756 ;;		_floorf
  2757 ;;		_labs
  2758 ;;		_memcpy
  2759 ;;		_pad
  2760 ;;		_strcpy
  2761 ;; This function is called by:
  2762 ;;		_vfpfcnvrt
  2763 ;; This function uses a non-reentrant model
  2764 ;;
  2765                           
  2766                           	psect	text5
  2767   00F22C                     __ptext5:
  2768                           	callstack 0
  2769   00F22C                     _efgtoa:
  2770                           	callstack 23
  2771   00F22C                     
  2772                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 506: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.40\pic\sources
      +                          \c99\common\doprnt.c: 507: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 508:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .40\pic\sources\c99\common\doprnt.c: 509:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 510:     long double h, l;
  2773   00F22C  0E00               	movlw	0
  2774   00F22E  0100               	movlb	0	; () banked
  2775   00F230  6F80               	movwf	efgtoa@sign& (0+255),b
  2776   00F232                     
  2777                           ; BSR set to: 0
  2778                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 515:     g.f = f;
  2779   00F232  C044  F087         	movff	efgtoa@f,efgtoa@g
  2780   00F236  C045  F088         	movff	efgtoa@f+1,efgtoa@g+1
  2781   00F23A  C046  F089         	movff	efgtoa@f+2,efgtoa@g+2
  2782   00F23E  C047  F08A         	movff	efgtoa@f+3,efgtoa@g+3
  2783   00F242                     
  2784                           ; BSR set to: 0
  2785                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 516:     if (g.f 
      +                          < 0.0) {
  2786   00F242  BF8A               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2787   00F244  EF28  F079         	goto	u4050
  2788   00F248  EF26  F079         	goto	u4051
  2789   00F24C                     u4051:
  2790   00F24C  EF3C  F079         	goto	l3907
  2791   00F250                     u4050:
  2792   00F250                     
  2793                           ; BSR set to: 0
  2794                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 517:         sign
      +                           = 1;
  2795   00F250  0E01               	movlw	1
  2796   00F252  6F80               	movwf	efgtoa@sign& (0+255),b
  2797   00F254                     
  2798                           ; BSR set to: 0
  2799                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 518:         g.f 
      +                          = -g.f;
  2800   00F254  C087  F001         	movff	efgtoa@g,___flneg@f1
  2801   00F258  C088  F002         	movff	efgtoa@g+1,___flneg@f1+1
  2802   00F25C  C089  F003         	movff	efgtoa@g+2,___flneg@f1+2
  2803   00F260  C08A  F004         	movff	efgtoa@g+3,___flneg@f1+3
  2804   00F264  ECCD  F065         	call	___flneg	;wreg free
  2805   00F268  C001  F087         	movff	?___flneg,efgtoa@g
  2806   00F26C  C002  F088         	movff	?___flneg+1,efgtoa@g+1
  2807   00F270  C003  F089         	movff	?___flneg+2,efgtoa@g+2
  2808   00F274  C004  F08A         	movff	?___flneg+3,efgtoa@g+3
  2809   00F278                     l3907:
  2810                           
  2811                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 522:     n = 0;
  2812   00F278  0E00               	movlw	0
  2813   00F27A  0100               	movlb	0	; () banked
  2814   00F27C  6F86               	movwf	(efgtoa@n+1)& (0+255),b
  2815   00F27E  0E00               	movlw	0
  2816   00F280  6F85               	movwf	efgtoa@n& (0+255),b
  2817   00F282                     
  2818                           ; BSR set to: 0
  2819                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 523:     w = widt
      +                          h;
  2820   00F282  C0C5  F070         	movff	_width,efgtoa@w
  2821   00F286  C0C6  F071         	movff	_width+1,efgtoa@w+1
  2822   00F28A                     
  2823                           ; BSR set to: 0
  2824                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 524:     if (sign
  2825   00F28A  5180               	movf	efgtoa@sign& (0+255),w,b
  2826   00F28C  B4D8               	btfsc	status,2,c
  2827   00F28E  EF4B  F079         	goto	u4061
  2828   00F292  EF4D  F079         	goto	u4060
  2829   00F296                     u4061:
  2830   00F296  EF61  F079         	goto	l3921
  2831   00F29A                     u4060:
  2832   00F29A                     
  2833                           ; BSR set to: 0
  2834                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 528:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 529:   sign = sign ? '-
      +                          ' : '+';
  2835   00F29A  5180               	movf	efgtoa@sign& (0+255),w,b
  2836   00F29C  A4D8               	btfss	status,2,c
  2837   00F29E  EF53  F079         	goto	u4071
  2838   00F2A2  EF55  F079         	goto	u4070
  2839   00F2A6                     u4071:
  2840   00F2A6  EF5B  F079         	goto	l3917
  2841   00F2AA                     u4070:
  2842   00F2AA                     
  2843                           ; BSR set to: 0
  2844   00F2AA  0E00               	movlw	0
  2845   00F2AC  6F61               	movwf	(_efgtoa$1547+1)& (0+255),b
  2846   00F2AE  0E2B               	movlw	43
  2847   00F2B0  6F60               	movwf	_efgtoa$1547& (0+255),b
  2848   00F2B2  EF5F  F079         	goto	l3919
  2849   00F2B6                     l3917:
  2850                           
  2851                           ; BSR set to: 0
  2852   00F2B6  0E00               	movlw	0
  2853   00F2B8  6F61               	movwf	(_efgtoa$1547+1)& (0+255),b
  2854   00F2BA  0E2D               	movlw	45
  2855   00F2BC  6F60               	movwf	_efgtoa$1547& (0+255),b
  2856   00F2BE                     l3919:
  2857                           
  2858                           ; BSR set to: 0
  2859   00F2BE  C060  F080         	movff	_efgtoa$1547,efgtoa@sign
  2860   00F2C2                     l3921:
  2861                           
  2862                           ; BSR set to: 0
  2863                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 538:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  2864   00F2C2  C087  F001         	movff	efgtoa@g,___fpclassifyf@x
  2865   00F2C6  C088  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2866   00F2CA  C089  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2867   00F2CE  C08A  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2868   00F2D2  ECF2  F06A         	call	___fpclassifyf	;wreg free
  2869   00F2D6  0401               	decf	?___fpclassifyf^0,w,c
  2870   00F2D8  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2871   00F2DA  A4D8               	btfss	status,2,c
  2872   00F2DC  EF72  F079         	goto	u4081
  2873   00F2E0  EF74  F079         	goto	u4080
  2874   00F2E4                     u4081:
  2875   00F2E4  EFA7  F079         	goto	l3939
  2876   00F2E8                     u4080:
  2877   00F2E8                     
  2878                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 539:   if (sign) 
      +                          {
  2879   00F2E8  0100               	movlb	0	; () banked
  2880   00F2EA  5180               	movf	efgtoa@sign& (0+255),w,b
  2881   00F2EC  B4D8               	btfsc	status,2,c
  2882   00F2EE  EF7B  F079         	goto	u4091
  2883   00F2F2  EF7D  F079         	goto	u4090
  2884   00F2F6                     u4091:
  2885   00F2F6  EF86  F079         	goto	l3931
  2886   00F2FA                     u4090:
  2887   00F2FA                     
  2888                           ; BSR set to: 0
  2889                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 540:    dbuf[0] =
      +                           sign;
  2890   00F2FA  C080  F100         	movff	efgtoa@sign,_dbuf
  2891   00F2FE                     
  2892                           ; BSR set to: 0
  2893                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 541:    w--;
  2894   00F2FE  0770               	decf	efgtoa@w& (0+255),f,b
  2895   00F300  A0D8               	btfss	status,0,c
  2896   00F302  0771               	decf	(efgtoa@w+1)& (0+255),f,b
  2897   00F304                     
  2898                           ; BSR set to: 0
  2899                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 542:    n = 1;
  2900   00F304  0E00               	movlw	0
  2901   00F306  6F86               	movwf	(efgtoa@n+1)& (0+255),b
  2902   00F308  0E01               	movlw	1
  2903   00F30A  6F85               	movwf	efgtoa@n& (0+255),b
  2904   00F30C                     l3931:
  2905                           
  2906                           ; BSR set to: 0
  2907                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 550:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 551:             strcpy(&d
      +                          buf[n], "inf");
  2908   00F30C  0E00               	movlw	low _dbuf
  2909   00F30E  2585               	addwf	efgtoa@n& (0+255),w,b
  2910   00F310  6E01               	movwf	strcpy@dest^0,c
  2911   00F312  0E01               	movlw	high _dbuf
  2912   00F314  2186               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2913   00F316  6E02               	movwf	(strcpy@dest+1)^0,c
  2914   00F318  0EF3               	movlw	low STR_33
  2915   00F31A  6E03               	movwf	strcpy@src^0,c
  2916   00F31C  0EFF               	movlw	high STR_33
  2917   00F31E  6E04               	movwf	(strcpy@src+1)^0,c
  2918   00F320  EC47  F066         	call	_strcpy	;wreg free
  2919   00F324                     l3933:
  2920                           
  2921                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 552:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 553:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  2922   00F324  0100               	movlb	0	; () banked
  2923   00F326  0EFD               	movlw	253
  2924   00F328  2770               	addwf	efgtoa@w& (0+255),f,b
  2925   00F32A  0EFF               	movlw	255
  2926   00F32C  2371               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2927   00F32E                     
  2928                           ; BSR set to: 0
  2929                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 554:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  2930   00F32E  C042  F011         	movff	efgtoa@fp,pad@fp
  2931   00F332  C043  F012         	movff	efgtoa@fp+1,pad@fp+1
  2932   00F336  0E00               	movlw	low _dbuf
  2933   00F338  6E13               	movwf	pad@buf^0,c
  2934   00F33A  0E01               	movlw	high _dbuf
  2935   00F33C  6E14               	movwf	(pad@buf+1)^0,c
  2936   00F33E  C070  F015         	movff	efgtoa@w,pad@p
  2937   00F342  C071  F016         	movff	efgtoa@w+1,pad@p+1
  2938   00F346  EC02  F068         	call	_pad	;wreg free
  2939   00F34A  EF3D  F07F         	goto	l1077
  2940   00F34E                     l3939:
  2941                           
  2942                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 556:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  2943   00F34E  C087  F001         	movff	efgtoa@g,___fpclassifyf@x
  2944   00F352  C088  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2945   00F356  C089  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2946   00F35A  C08A  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2947   00F35E  ECF2  F06A         	call	___fpclassifyf	;wreg free
  2948   00F362  5001               	movf	?___fpclassifyf^0,w,c
  2949   00F364  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2950   00F366  A4D8               	btfss	status,2,c
  2951   00F368  EFB8  F079         	goto	u4101
  2952   00F36C  EFBA  F079         	goto	u4100
  2953   00F370                     u4101:
  2954   00F370  EFDA  F079         	goto	l3957
  2955   00F374                     u4100:
  2956   00F374                     
  2957                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 557:   if (sign) 
      +                          {
  2958   00F374  0100               	movlb	0	; () banked
  2959   00F376  5180               	movf	efgtoa@sign& (0+255),w,b
  2960   00F378  B4D8               	btfsc	status,2,c
  2961   00F37A  EFC1  F079         	goto	u4111
  2962   00F37E  EFC3  F079         	goto	u4110
  2963   00F382                     u4111:
  2964   00F382  EFCC  F079         	goto	l3949
  2965   00F386                     u4110:
  2966   00F386                     
  2967                           ; BSR set to: 0
  2968                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 558:    dbuf[0] =
      +                           sign;
  2969   00F386  C080  F100         	movff	efgtoa@sign,_dbuf
  2970   00F38A                     
  2971                           ; BSR set to: 0
  2972                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 559:    w--;
  2973   00F38A  0770               	decf	efgtoa@w& (0+255),f,b
  2974   00F38C  A0D8               	btfss	status,0,c
  2975   00F38E  0771               	decf	(efgtoa@w+1)& (0+255),f,b
  2976   00F390                     
  2977                           ; BSR set to: 0
  2978                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 560:    n = 1;
  2979   00F390  0E00               	movlw	0
  2980   00F392  6F86               	movwf	(efgtoa@n+1)& (0+255),b
  2981   00F394  0E01               	movlw	1
  2982   00F396  6F85               	movwf	efgtoa@n& (0+255),b
  2983   00F398                     l3949:
  2984                           
  2985                           ; BSR set to: 0
  2986                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 568:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 569:             strcpy(&d
      +                          buf[n], "nan");
  2987   00F398  0E00               	movlw	low _dbuf
  2988   00F39A  2585               	addwf	efgtoa@n& (0+255),w,b
  2989   00F39C  6E01               	movwf	strcpy@dest^0,c
  2990   00F39E  0E01               	movlw	high _dbuf
  2991   00F3A0  2186               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2992   00F3A2  6E02               	movwf	(strcpy@dest+1)^0,c
  2993   00F3A4  0EF7               	movlw	low STR_36
  2994   00F3A6  6E03               	movwf	strcpy@src^0,c
  2995   00F3A8  0EFF               	movlw	high STR_36
  2996   00F3AA  6E04               	movwf	(strcpy@src+1)^0,c
  2997   00F3AC  EC47  F066         	call	_strcpy	;wreg free
  2998   00F3B0  EF92  F079         	goto	l3933
  2999   00F3B4                     l3957:
  3000                           
  3001                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 576:     u.f = 1.
      +                          0;
  3002   00F3B4  0E00               	movlw	0
  3003   00F3B6  0100               	movlb	0	; () banked
  3004   00F3B8  6F8B               	movwf	efgtoa@u& (0+255),b
  3005   00F3BA  0E00               	movlw	0
  3006   00F3BC  6F8C               	movwf	(efgtoa@u+1)& (0+255),b
  3007   00F3BE  0E80               	movlw	128
  3008   00F3C0  6F8D               	movwf	(efgtoa@u+2)& (0+255),b
  3009   00F3C2  0E3F               	movlw	63
  3010   00F3C4  6F8E               	movwf	(efgtoa@u+3)& (0+255),b
  3011                           
  3012                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 577:     e = 0;
  3013   00F3C6  0E00               	movlw	0
  3014   00F3C8  6F84               	movwf	(efgtoa@e+1)& (0+255),b
  3015   00F3CA  0E00               	movlw	0
  3016   00F3CC  6F83               	movwf	efgtoa@e& (0+255),b
  3017   00F3CE                     
  3018                           ; BSR set to: 0
  3019                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 578:  if (!(g.f =
      +                          = 0.0)) {
  3020   00F3CE  C087  F001         	movff	efgtoa@g,___fleq@ff1
  3021   00F3D2  C088  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  3022   00F3D6  C089  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  3023   00F3DA  C08A  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  3024   00F3DE  0E00               	movlw	0
  3025   00F3E0  6E05               	movwf	___fleq@ff2^0,c
  3026   00F3E2  0E00               	movlw	0
  3027   00F3E4  6E06               	movwf	(___fleq@ff2+1)^0,c
  3028   00F3E6  0E00               	movlw	0
  3029   00F3E8  6E07               	movwf	(___fleq@ff2+2)^0,c
  3030   00F3EA  0E00               	movlw	0
  3031   00F3EC  6E08               	movwf	(___fleq@ff2+3)^0,c
  3032   00F3EE  EC09  F069         	call	___fleq	;wreg free
  3033   00F3F2  B0D8               	btfsc	status,0,c
  3034   00F3F4  EFFE  F079         	goto	u4121
  3035   00F3F8  EF00  F07A         	goto	u4120
  3036   00F3FC                     u4121:
  3037   00F3FC  EFDF  F07A         	goto	l1080
  3038   00F400                     u4120:
  3039   00F400  EF0D  F07A         	goto	l3965
  3040   00F404                     l1082:
  3041                           
  3042                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 580:    u = ou;
  3043   00F404  C074  F08B         	movff	efgtoa@ou,efgtoa@u
  3044   00F408  C075  F08C         	movff	efgtoa@ou+1,efgtoa@u+1
  3045   00F40C  C076  F08D         	movff	efgtoa@ou+2,efgtoa@u+2
  3046   00F410  C077  F08E         	movff	efgtoa@ou+3,efgtoa@u+3
  3047   00F414                     
  3048                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 581:    ++e;
  3049   00F414  0100               	movlb	0	; () banked
  3050   00F416  4B83               	infsnz	efgtoa@e& (0+255),f,b
  3051   00F418  2B84               	incf	(efgtoa@e+1)& (0+255),f,b
  3052   00F41A                     l3965:
  3053                           
  3054                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 579:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  3055   00F41A  C08B  F001         	movff	efgtoa@u,___flmul@b
  3056   00F41E  C08C  F002         	movff	efgtoa@u+1,___flmul@b+1
  3057   00F422  C08D  F003         	movff	efgtoa@u+2,___flmul@b+2
  3058   00F426  C08E  F004         	movff	efgtoa@u+3,___flmul@b+3
  3059   00F42A  0E00               	movlw	0
  3060   00F42C  6E05               	movwf	___flmul@a^0,c
  3061   00F42E  0E00               	movlw	0
  3062   00F430  6E06               	movwf	(___flmul@a+1)^0,c
  3063   00F432  0E20               	movlw	32
  3064   00F434  6E07               	movwf	(___flmul@a+2)^0,c
  3065   00F436  0E41               	movlw	65
  3066   00F438  6E08               	movwf	(___flmul@a+3)^0,c
  3067   00F43A  ECA1  F074         	call	___flmul	;wreg free
  3068   00F43E  C001  F074         	movff	?___flmul,efgtoa@ou
  3069   00F442  C002  F075         	movff	?___flmul+1,efgtoa@ou+1
  3070   00F446  C003  F076         	movff	?___flmul+2,efgtoa@ou+2
  3071   00F44A  C004  F077         	movff	?___flmul+3,efgtoa@ou+3
  3072   00F44E  0100               	movlb	0	; () banked
  3073   00F450  5174               	movf	efgtoa@ou& (0+255),w,b
  3074   00F452  5D87               	subwf	efgtoa@g& (0+255),w,b
  3075   00F454  6E01               	movwf	labs@a^0,c
  3076   00F456  5175               	movf	(efgtoa@ou+1)& (0+255),w,b
  3077   00F458  5988               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3078   00F45A  6E02               	movwf	(labs@a+1)^0,c
  3079   00F45C  5176               	movf	(efgtoa@ou+2)& (0+255),w,b
  3080   00F45E  5989               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3081   00F460  6E03               	movwf	(labs@a+2)^0,c
  3082   00F462  5177               	movf	(efgtoa@ou+3)& (0+255),w,b
  3083   00F464  598A               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3084   00F466  6E04               	movwf	(labs@a+3)^0,c
  3085   00F468  ECCF  F067         	call	_labs	;wreg free
  3086   00F46C  BE04               	btfsc	(?_labs+3)^0,7,c
  3087   00F46E  EF44  F07A         	goto	u4131
  3088   00F472  5004               	movf	(?_labs+3)^0,w,c
  3089   00F474  1003               	iorwf	(?_labs+2)^0,w,c
  3090   00F476  1002               	iorwf	(?_labs+1)^0,w,c
  3091   00F478  E109               	bnz	u4130
  3092   00F47A  0E02               	movlw	2
  3093   00F47C  5C01               	subwf	?_labs^0,w,c
  3094   00F47E  A0D8               	btfss	status,0,c
  3095   00F480  EF44  F07A         	goto	u4131
  3096   00F484  EF46  F07A         	goto	u4130
  3097   00F488                     u4131:
  3098   00F488  EF02  F07A         	goto	l1082
  3099   00F48C                     u4130:
  3100   00F48C  C074  F01A         	movff	efgtoa@ou,___flge@ff1
  3101   00F490  C075  F01B         	movff	efgtoa@ou+1,___flge@ff1+1
  3102   00F494  C076  F01C         	movff	efgtoa@ou+2,___flge@ff1+2
  3103   00F498  C077  F01D         	movff	efgtoa@ou+3,___flge@ff1+3
  3104   00F49C  C087  F01E         	movff	efgtoa@g,___flge@ff2
  3105   00F4A0  C088  F01F         	movff	efgtoa@g+1,___flge@ff2+1
  3106   00F4A4  C089  F020         	movff	efgtoa@g+2,___flge@ff2+2
  3107   00F4A8  C08A  F021         	movff	efgtoa@g+3,___flge@ff2+3
  3108   00F4AC  EC71  F06B         	call	___flge	;wreg free
  3109   00F4B0  A0D8               	btfss	status,0,c
  3110   00F4B2  EF5D  F07A         	goto	u4141
  3111   00F4B6  EF5F  F07A         	goto	u4140
  3112   00F4BA                     u4141:
  3113   00F4BA  EF02  F07A         	goto	l1082
  3114   00F4BE                     u4140:
  3115   00F4BE                     
  3116                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 583:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  3117   00F4BE  0100               	movlb	0	; () banked
  3118   00F4C0  518B               	movf	efgtoa@u& (0+255),w,b
  3119   00F4C2  5D87               	subwf	efgtoa@g& (0+255),w,b
  3120   00F4C4  6E01               	movwf	labs@a^0,c
  3121   00F4C6  518C               	movf	(efgtoa@u+1)& (0+255),w,b
  3122   00F4C8  5988               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3123   00F4CA  6E02               	movwf	(labs@a+1)^0,c
  3124   00F4CC  518D               	movf	(efgtoa@u+2)& (0+255),w,b
  3125   00F4CE  5989               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3126   00F4D0  6E03               	movwf	(labs@a+2)^0,c
  3127   00F4D2  518E               	movf	(efgtoa@u+3)& (0+255),w,b
  3128   00F4D4  598A               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3129   00F4D6  6E04               	movwf	(labs@a+3)^0,c
  3130   00F4D8  ECCF  F067         	call	_labs	;wreg free
  3131   00F4DC  BE04               	btfsc	(?_labs+3)^0,7,c
  3132   00F4DE  EF7E  F07A         	goto	u4150
  3133   00F4E2  5004               	movf	(?_labs+3)^0,w,c
  3134   00F4E4  1003               	iorwf	(?_labs+2)^0,w,c
  3135   00F4E6  1002               	iorwf	(?_labs+1)^0,w,c
  3136   00F4E8  E107               	bnz	u4151
  3137   00F4EA  0E02               	movlw	2
  3138   00F4EC  5C01               	subwf	?_labs^0,w,c
  3139   00F4EE  B0D8               	btfsc	status,0,c
  3140   00F4F0  EF7C  F07A         	goto	u4151
  3141   00F4F4  EF7E  F07A         	goto	u4150
  3142   00F4F8                     u4151:
  3143   00F4F8  EFC6  F07A         	goto	l3983
  3144   00F4FC                     u4150:
  3145   00F4FC                     l3973:
  3146                           
  3147                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 584:    g = u;
  3148   00F4FC  C08B  F087         	movff	efgtoa@u,efgtoa@g
  3149   00F500  C08C  F088         	movff	efgtoa@u+1,efgtoa@g+1
  3150   00F504  C08D  F089         	movff	efgtoa@u+2,efgtoa@g+2
  3151   00F508  C08E  F08A         	movff	efgtoa@u+3,efgtoa@g+3
  3152                           
  3153                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 585:   }
  3154   00F50C  EFDF  F07A         	goto	l1080
  3155   00F510                     l3975:
  3156                           
  3157                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 588:     u.f = u.
      +                          f/10.0;
  3158   00F510  C08B  F015         	movff	efgtoa@u,___fldiv@b
  3159   00F514  C08C  F016         	movff	efgtoa@u+1,___fldiv@b+1
  3160   00F518  C08D  F017         	movff	efgtoa@u+2,___fldiv@b+2
  3161   00F51C  C08E  F018         	movff	efgtoa@u+3,___fldiv@b+3
  3162   00F520  0E00               	movlw	0
  3163   00F522  6E19               	movwf	___fldiv@a^0,c
  3164   00F524  0E00               	movlw	0
  3165   00F526  6E1A               	movwf	(___fldiv@a+1)^0,c
  3166   00F528  0E20               	movlw	32
  3167   00F52A  6E1B               	movwf	(___fldiv@a+2)^0,c
  3168   00F52C  0E41               	movlw	65
  3169   00F52E  6E1C               	movwf	(___fldiv@a+3)^0,c
  3170   00F530  ECCA  F070         	call	___fldiv	;wreg free
  3171   00F534  C015  F08B         	movff	?___fldiv,efgtoa@u
  3172   00F538  C016  F08C         	movff	?___fldiv+1,efgtoa@u+1
  3173   00F53C  C017  F08D         	movff	?___fldiv+2,efgtoa@u+2
  3174   00F540  C018  F08E         	movff	?___fldiv+3,efgtoa@u+3
  3175   00F544                     
  3176                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 589:     --e;
  3177   00F544  0100               	movlb	0	; () banked
  3178   00F546  0783               	decf	efgtoa@e& (0+255),f,b
  3179   00F548  A0D8               	btfss	status,0,c
  3180   00F54A  0784               	decf	(efgtoa@e+1)& (0+255),f,b
  3181   00F54C                     
  3182                           ; BSR set to: 0
  3183                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 590:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  3184   00F54C  518B               	movf	efgtoa@u& (0+255),w,b
  3185   00F54E  5D87               	subwf	efgtoa@g& (0+255),w,b
  3186   00F550  6E01               	movwf	labs@a^0,c
  3187   00F552  518C               	movf	(efgtoa@u+1)& (0+255),w,b
  3188   00F554  5988               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3189   00F556  6E02               	movwf	(labs@a+1)^0,c
  3190   00F558  518D               	movf	(efgtoa@u+2)& (0+255),w,b
  3191   00F55A  5989               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3192   00F55C  6E03               	movwf	(labs@a+2)^0,c
  3193   00F55E  518E               	movf	(efgtoa@u+3)& (0+255),w,b
  3194   00F560  598A               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3195   00F562  6E04               	movwf	(labs@a+3)^0,c
  3196   00F564  ECCF  F067         	call	_labs	;wreg free
  3197   00F568  BE04               	btfsc	(?_labs+3)^0,7,c
  3198   00F56A  EFC4  F07A         	goto	u4160
  3199   00F56E  5004               	movf	(?_labs+3)^0,w,c
  3200   00F570  1003               	iorwf	(?_labs+2)^0,w,c
  3201   00F572  1002               	iorwf	(?_labs+1)^0,w,c
  3202   00F574  E107               	bnz	u4161
  3203   00F576  0E02               	movlw	2
  3204   00F578  5C01               	subwf	?_labs^0,w,c
  3205   00F57A  B0D8               	btfsc	status,0,c
  3206   00F57C  EFC2  F07A         	goto	u4161
  3207   00F580  EFC4  F07A         	goto	u4160
  3208   00F584                     u4161:
  3209   00F584  EFC6  F07A         	goto	l3983
  3210   00F588                     u4160:
  3211   00F588  EF7E  F07A         	goto	l3973
  3212   00F58C                     l3983:
  3213                           
  3214                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 587:    while (g.
      +                          f < u.f) {
  3215   00F58C  C087  F01A         	movff	efgtoa@g,___flge@ff1
  3216   00F590  C088  F01B         	movff	efgtoa@g+1,___flge@ff1+1
  3217   00F594  C089  F01C         	movff	efgtoa@g+2,___flge@ff1+2
  3218   00F598  C08A  F01D         	movff	efgtoa@g+3,___flge@ff1+3
  3219   00F59C  C08B  F01E         	movff	efgtoa@u,___flge@ff2
  3220   00F5A0  C08C  F01F         	movff	efgtoa@u+1,___flge@ff2+1
  3221   00F5A4  C08D  F020         	movff	efgtoa@u+2,___flge@ff2+2
  3222   00F5A8  C08E  F021         	movff	efgtoa@u+3,___flge@ff2+3
  3223   00F5AC  EC71  F06B         	call	___flge	;wreg free
  3224   00F5B0  A0D8               	btfss	status,0,c
  3225   00F5B2  EFDD  F07A         	goto	u4171
  3226   00F5B6  EFDF  F07A         	goto	u4170
  3227   00F5BA                     u4171:
  3228   00F5BA  EF88  F07A         	goto	l3975
  3229   00F5BE                     u4170:
  3230   00F5BE                     l1080:
  3231                           
  3232                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 602:  mode = c;
  3233   00F5BE  C048  F073         	movff	efgtoa@c,efgtoa@mode
  3234                           
  3235                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 604:     nmode = 
      +                          mode;
  3236   00F5C2  C073  F072         	movff	efgtoa@mode,efgtoa@nmode
  3237   00F5C6                     
  3238                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 606:     if (mode
      +                           == 'g') {
  3239   00F5C6  0E67               	movlw	103
  3240   00F5C8  0100               	movlb	0	; () banked
  3241   00F5CA  1973               	xorwf	efgtoa@mode& (0+255),w,b
  3242   00F5CC  A4D8               	btfss	status,2,c
  3243   00F5CE  EFEB  F07A         	goto	u4181
  3244   00F5D2  EFED  F07A         	goto	u4180
  3245   00F5D6                     u4181:
  3246   00F5D6  EF13  F07B         	goto	l3995
  3247   00F5DA                     u4180:
  3248   00F5DA                     
  3249                           ; BSR set to: 0
  3250                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 607:   if (prec =
      +                          = 0) {
  3251   00F5DA  51C7               	movf	_prec& (0+255),w,b
  3252   00F5DC  11C8               	iorwf	(_prec+1)& (0+255),w,b
  3253   00F5DE  A4D8               	btfss	status,2,c
  3254   00F5E0  EFF4  F07A         	goto	u4191
  3255   00F5E4  EFF6  F07A         	goto	u4190
  3256   00F5E8                     u4191:
  3257   00F5E8  EFFA  F07A         	goto	l3991
  3258   00F5EC                     u4190:
  3259   00F5EC                     
  3260                           ; BSR set to: 0
  3261                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 608:    prec = 1;
  3262   00F5EC  0E00               	movlw	0
  3263   00F5EE  6FC8               	movwf	(_prec+1)& (0+255),b
  3264   00F5F0  0E01               	movlw	1
  3265   00F5F2  6FC7               	movwf	_prec& (0+255),b
  3266   00F5F4                     l3991:
  3267                           
  3268                           ; BSR set to: 0
  3269                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 610:         p = 
      +                          (0 < prec) ? prec : 6;
  3270   00F5F4  BFC8               	btfsc	(_prec+1)& (0+255),7,b
  3271   00F5F6  EF07  F07B         	goto	u4200
  3272   00F5FA  51C8               	movf	(_prec+1)& (0+255),w,b
  3273   00F5FC  E106               	bnz	u4201
  3274   00F5FE  05C7               	decf	_prec& (0+255),w,b
  3275   00F600  B0D8               	btfsc	status,0,c
  3276   00F602  EF05  F07B         	goto	u4201
  3277   00F606  EF07  F07B         	goto	u4200
  3278   00F60A                     u4201:
  3279   00F60A  EF0D  F07B         	goto	l1093
  3280   00F60E                     u4200:
  3281   00F60E                     l3993:
  3282                           
  3283                           ; BSR set to: 0
  3284   00F60E  0E00               	movlw	0
  3285   00F610  6F6F               	movwf	(efgtoa@p+1)& (0+255),b
  3286   00F612  0E06               	movlw	6
  3287   00F614  6F6E               	movwf	efgtoa@p& (0+255),b
  3288   00F616  EF1C  F07B         	goto	l4001
  3289   00F61A                     l1093:
  3290                           
  3291                           ; BSR set to: 0
  3292   00F61A  C0C7  F06E         	movff	_prec,efgtoa@p
  3293   00F61E  C0C8  F06F         	movff	_prec+1,efgtoa@p+1
  3294   00F622  EF1C  F07B         	goto	l4001
  3295   00F626                     l3995:
  3296                           
  3297                           ; BSR set to: 0
  3298                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 614:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 615:         p = (prec < 0)
      +                           ? 6 : prec;
  3299   00F626  BFC8               	btfsc	(_prec+1)& (0+255),7,b
  3300   00F628  EF18  F07B         	goto	u4211
  3301   00F62C  EF1A  F07B         	goto	u4210
  3302   00F630                     u4211:
  3303   00F630  EF07  F07B         	goto	l3993
  3304   00F634                     u4210:
  3305   00F634  EF0D  F07B         	goto	l1093
  3306   00F638                     l4001:
  3307                           
  3308                           ; BSR set to: 0
  3309                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 620:     if (mode
      +                           == 'g') {
  3310   00F638  0E67               	movlw	103
  3311   00F63A  1973               	xorwf	efgtoa@mode& (0+255),w,b
  3312   00F63C  A4D8               	btfss	status,2,c
  3313   00F63E  EF23  F07B         	goto	u4221
  3314   00F642  EF25  F07B         	goto	u4220
  3315   00F646                     u4221:
  3316   00F646  EF4E  F07B         	goto	l4011
  3317   00F64A                     u4220:
  3318   00F64A                     
  3319                           ; BSR set to: 0
  3320                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 621:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  3321   00F64A  AF84               	btfss	(efgtoa@e+1)& (0+255),7,b
  3322   00F64C  EF33  F07B         	goto	u4230
  3323   00F650  0EFC               	movlw	252
  3324   00F652  5D83               	subwf	efgtoa@e& (0+255),w,b
  3325   00F654  0EFF               	movlw	255
  3326   00F656  5984               	subwfb	(efgtoa@e+1)& (0+255),w,b
  3327   00F658  A0D8               	btfss	status,0,c
  3328   00F65A  EF31  F07B         	goto	u4231
  3329   00F65E  EF33  F07B         	goto	u4230
  3330   00F662                     u4231:
  3331   00F662  EF4C  F07B         	goto	l4009
  3332   00F666                     u4230:
  3333   00F666                     
  3334                           ; BSR set to: 0
  3335   00F666  0EFF               	movlw	255
  3336   00F668  256E               	addwf	efgtoa@p& (0+255),w,b
  3337   00F66A  6E49               	movwf	??_efgtoa^0,c
  3338   00F66C  0EFF               	movlw	255
  3339   00F66E  216F               	addwfc	(efgtoa@p+1)& (0+255),w,b
  3340   00F670  6E4A               	movwf	(??_efgtoa+1)^0,c
  3341   00F672  5183               	movf	efgtoa@e& (0+255),w,b
  3342   00F674  5C49               	subwf	??_efgtoa^0,w,c
  3343   00F676  504A               	movf	(??_efgtoa+1)^0,w,c
  3344   00F678  0A80               	xorlw	128
  3345   00F67A  6E4B               	movwf	(??_efgtoa+2)^0,c
  3346   00F67C  5184               	movf	(efgtoa@e+1)& (0+255),w,b
  3347   00F67E  0A80               	xorlw	128
  3348   00F680  584B               	subwfb	(??_efgtoa+2)^0,w,c
  3349   00F682  A0D8               	btfss	status,0,c
  3350   00F684  EF46  F07B         	goto	u4241
  3351   00F688  EF48  F07B         	goto	u4240
  3352   00F68C                     u4241:
  3353   00F68C  EF4C  F07B         	goto	l4009
  3354   00F690                     u4240:
  3355   00F690                     
  3356                           ; BSR set to: 0
  3357                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 622:             
      +                          nmode = 'f';
  3358   00F690  0E66               	movlw	102
  3359   00F692  6F72               	movwf	efgtoa@nmode& (0+255),b
  3360                           
  3361                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 623:         } el
      +                          se {
  3362   00F694  EF4E  F07B         	goto	l4011
  3363   00F698                     l4009:
  3364                           
  3365                           ; BSR set to: 0
  3366                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 624:             
      +                          nmode = 'e';
  3367   00F698  0E65               	movlw	101
  3368   00F69A  6F72               	movwf	efgtoa@nmode& (0+255),b
  3369   00F69C                     l4011:
  3370                           
  3371                           ; BSR set to: 0
  3372                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 630:     m = p;
  3373   00F69C  C06E  F06A         	movff	efgtoa@p,efgtoa@m
  3374   00F6A0  C06F  F06B         	movff	efgtoa@p+1,efgtoa@m+1
  3375   00F6A4                     
  3376                           ; BSR set to: 0
  3377                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 632:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0)))
  3378   00F6A4  0E67               	movlw	103
  3379   00F6A6  1973               	xorwf	efgtoa@mode& (0+255),w,b
  3380   00F6A8  A4D8               	btfss	status,2,c
  3381   00F6AA  EF59  F07B         	goto	u4251
  3382   00F6AE  EF5B  F07B         	goto	u4250
  3383   00F6B2                     u4251:
  3384   00F6B2  EF6B  F07B         	goto	l4019
  3385   00F6B6                     u4250:
  3386   00F6B6                     
  3387                           ; BSR set to: 0
  3388   00F6B6  0E66               	movlw	102
  3389   00F6B8  1972               	xorwf	efgtoa@nmode& (0+255),w,b
  3390   00F6BA  A4D8               	btfss	status,2,c
  3391   00F6BC  EF62  F07B         	goto	u4261
  3392   00F6C0  EF64  F07B         	goto	u4260
  3393   00F6C4                     u4261:
  3394   00F6C4  EF6D  F07B         	goto	l4021
  3395   00F6C8                     u4260:
  3396   00F6C8                     
  3397                           ; BSR set to: 0
  3398   00F6C8  BF84               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3399   00F6CA  EF6B  F07B         	goto	u4270
  3400   00F6CE  EF69  F07B         	goto	u4271
  3401   00F6D2                     u4271:
  3402   00F6D2  EF6D  F07B         	goto	l4021
  3403   00F6D6                     u4270:
  3404   00F6D6                     l4019:
  3405                           
  3406                           ; BSR set to: 0
  3407                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 634:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 635:         ++m;
  3408   00F6D6  4B6A               	infsnz	efgtoa@m& (0+255),f,b
  3409   00F6D8  2B6B               	incf	(efgtoa@m+1)& (0+255),f,b
  3410   00F6DA                     l4021:
  3411                           
  3412                           ; BSR set to: 0
  3413                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 640:     if (nmod
      +                          e == 'f') {
  3414   00F6DA  0E66               	movlw	102
  3415   00F6DC  1972               	xorwf	efgtoa@nmode& (0+255),w,b
  3416   00F6DE  A4D8               	btfss	status,2,c
  3417   00F6E0  EF74  F07B         	goto	u4281
  3418   00F6E4  EF76  F07B         	goto	u4280
  3419   00F6E8                     u4281:
  3420   00F6E8  EF96  F07B         	goto	l4031
  3421   00F6EC                     u4280:
  3422   00F6EC                     
  3423                           ; BSR set to: 0
  3424                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 641:         if (
      +                          e < 0) {
  3425   00F6EC  BF84               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3426   00F6EE  EF7D  F07B         	goto	u4290
  3427   00F6F2  EF7B  F07B         	goto	u4291
  3428   00F6F6                     u4291:
  3429   00F6F6  EF89  F07B         	goto	l4027
  3430   00F6FA                     u4290:
  3431   00F6FA                     
  3432                           ; BSR set to: 0
  3433                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 642:             
      +                          u.f = 1.0;
  3434   00F6FA  0E00               	movlw	0
  3435   00F6FC  6F8B               	movwf	efgtoa@u& (0+255),b
  3436   00F6FE  0E00               	movlw	0
  3437   00F700  6F8C               	movwf	(efgtoa@u+1)& (0+255),b
  3438   00F702  0E80               	movlw	128
  3439   00F704  6F8D               	movwf	(efgtoa@u+2)& (0+255),b
  3440   00F706  0E3F               	movlw	63
  3441   00F708  6F8E               	movwf	(efgtoa@u+3)& (0+255),b
  3442                           
  3443                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 643:             
      +                          e = 0;
  3444   00F70A  0E00               	movlw	0
  3445   00F70C  6F84               	movwf	(efgtoa@e+1)& (0+255),b
  3446   00F70E  0E00               	movlw	0
  3447   00F710  6F83               	movwf	efgtoa@e& (0+255),b
  3448   00F712                     l4027:
  3449                           
  3450                           ; BSR set to: 0
  3451                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 645:         if (
      +                          !(mode == 'g')) {
  3452   00F712  0E67               	movlw	103
  3453   00F714  1973               	xorwf	efgtoa@mode& (0+255),w,b
  3454   00F716  B4D8               	btfsc	status,2,c
  3455   00F718  EF90  F07B         	goto	u4301
  3456   00F71C  EF92  F07B         	goto	u4300
  3457   00F720                     u4301:
  3458   00F720  EF96  F07B         	goto	l4031
  3459   00F724                     u4300:
  3460   00F724                     
  3461                           ; BSR set to: 0
  3462                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 646:             
      +                          m += e;
  3463   00F724  5183               	movf	efgtoa@e& (0+255),w,b
  3464   00F726  276A               	addwf	efgtoa@m& (0+255),f,b
  3465   00F728  5184               	movf	(efgtoa@e+1)& (0+255),w,b
  3466   00F72A  236B               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3467   00F72C                     l4031:
  3468                           
  3469                           ; BSR set to: 0
  3470                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 652:     i = 0;
  3471   00F72C  0E00               	movlw	0
  3472   00F72E  6F82               	movwf	(efgtoa@i+1)& (0+255),b
  3473   00F730  0E00               	movlw	0
  3474   00F732  6F81               	movwf	efgtoa@i& (0+255),b
  3475   00F734                     
  3476                           ; BSR set to: 0
  3477                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 653:     h = g.f;
  3478   00F734  C087  F078         	movff	efgtoa@g,efgtoa@h
  3479   00F738  C088  F079         	movff	efgtoa@g+1,efgtoa@h+1
  3480   00F73C  C089  F07A         	movff	efgtoa@g+2,efgtoa@h+2
  3481   00F740  C08A  F07B         	movff	efgtoa@g+3,efgtoa@h+3
  3482   00F744                     
  3483                           ; BSR set to: 0
  3484                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 654:     ou = u;
  3485   00F744  C08B  F074         	movff	efgtoa@u,efgtoa@ou
  3486   00F748  C08C  F075         	movff	efgtoa@u+1,efgtoa@ou+1
  3487   00F74C  C08D  F076         	movff	efgtoa@u+2,efgtoa@ou+2
  3488   00F750  C08E  F077         	movff	efgtoa@u+3,efgtoa@ou+3
  3489                           
  3490                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  3491   00F754  EF27  F07C         	goto	l4045
  3492   00F758                     l4037:
  3493                           
  3494                           ; BSR set to: 0
  3495                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 656:         l = 
      +                          floorf(h/u.f);
  3496   00F758  C078  F015         	movff	efgtoa@h,___fldiv@b
  3497   00F75C  C079  F016         	movff	efgtoa@h+1,___fldiv@b+1
  3498   00F760  C07A  F017         	movff	efgtoa@h+2,___fldiv@b+2
  3499   00F764  C07B  F018         	movff	efgtoa@h+3,___fldiv@b+3
  3500   00F768  C08B  F019         	movff	efgtoa@u,___fldiv@a
  3501   00F76C  C08C  F01A         	movff	efgtoa@u+1,___fldiv@a+1
  3502   00F770  C08D  F01B         	movff	efgtoa@u+2,___fldiv@a+2
  3503   00F774  C08E  F01C         	movff	efgtoa@u+3,___fldiv@a+3
  3504   00F778  ECCA  F070         	call	___fldiv	;wreg free
  3505   00F77C  C015  F02E         	movff	?___fldiv,floorf@x
  3506   00F780  C016  F02F         	movff	?___fldiv+1,floorf@x+1
  3507   00F784  C017  F030         	movff	?___fldiv+2,floorf@x+2
  3508   00F788  C018  F031         	movff	?___fldiv+3,floorf@x+3
  3509   00F78C  ECC1  F06F         	call	_floorf	;wreg free
  3510   00F790  C02E  F07C         	movff	?_floorf,efgtoa@l
  3511   00F794  C02F  F07D         	movff	?_floorf+1,efgtoa@l+1
  3512   00F798  C030  F07E         	movff	?_floorf+2,efgtoa@l+2
  3513   00F79C  C031  F07F         	movff	?_floorf+3,efgtoa@l+3
  3514                           
  3515                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 657:         d = 
      +                          (int)l;
  3516   00F7A0  C07C  F001         	movff	efgtoa@l,___fltol@f1
  3517   00F7A4  C07D  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3518   00F7A8  C07E  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3519   00F7AC  C07F  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3520   00F7B0  ECF3  F06B         	call	___fltol	;wreg free
  3521   00F7B4  C001  F06C         	movff	?___fltol,efgtoa@d
  3522   00F7B8  C002  F06D         	movff	?___fltol+1,efgtoa@d+1
  3523   00F7BC                     
  3524                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 658:         h -=
      +                           l*u.f;
  3525   00F7BC  C078  F01A         	movff	efgtoa@h,___flsub@b
  3526   00F7C0  C079  F01B         	movff	efgtoa@h+1,___flsub@b+1
  3527   00F7C4  C07A  F01C         	movff	efgtoa@h+2,___flsub@b+2
  3528   00F7C8  C07B  F01D         	movff	efgtoa@h+3,___flsub@b+3
  3529   00F7CC  C07C  F005         	movff	efgtoa@l,___flmul@a
  3530   00F7D0  C07D  F006         	movff	efgtoa@l+1,___flmul@a+1
  3531   00F7D4  C07E  F007         	movff	efgtoa@l+2,___flmul@a+2
  3532   00F7D8  C07F  F008         	movff	efgtoa@l+3,___flmul@a+3
  3533   00F7DC  C08B  F001         	movff	efgtoa@u,___flmul@b
  3534   00F7E0  C08C  F002         	movff	efgtoa@u+1,___flmul@b+1
  3535   00F7E4  C08D  F003         	movff	efgtoa@u+2,___flmul@b+2
  3536   00F7E8  C08E  F004         	movff	efgtoa@u+3,___flmul@b+3
  3537   00F7EC  ECA1  F074         	call	___flmul	;wreg free
  3538   00F7F0  C001  F01E         	movff	?___flmul,___flsub@a
  3539   00F7F4  C002  F01F         	movff	?___flmul+1,___flsub@a+1
  3540   00F7F8  C003  F020         	movff	?___flmul+2,___flsub@a+2
  3541   00F7FC  C004  F021         	movff	?___flmul+3,___flsub@a+3
  3542   00F800  ECAD  F066         	call	___flsub	;wreg free
  3543   00F804  C01A  F078         	movff	?___flsub,efgtoa@h
  3544   00F808  C01B  F079         	movff	?___flsub+1,efgtoa@h+1
  3545   00F80C  C01C  F07A         	movff	?___flsub+2,efgtoa@h+2
  3546   00F810  C01D  F07B         	movff	?___flsub+3,efgtoa@h+3
  3547   00F814                     
  3548                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 659:         u.f 
      +                          = u.f/10.0;
  3549   00F814  C08B  F015         	movff	efgtoa@u,___fldiv@b
  3550   00F818  C08C  F016         	movff	efgtoa@u+1,___fldiv@b+1
  3551   00F81C  C08D  F017         	movff	efgtoa@u+2,___fldiv@b+2
  3552   00F820  C08E  F018         	movff	efgtoa@u+3,___fldiv@b+3
  3553   00F824  0E00               	movlw	0
  3554   00F826  6E19               	movwf	___fldiv@a^0,c
  3555   00F828  0E00               	movlw	0
  3556   00F82A  6E1A               	movwf	(___fldiv@a+1)^0,c
  3557   00F82C  0E20               	movlw	32
  3558   00F82E  6E1B               	movwf	(___fldiv@a+2)^0,c
  3559   00F830  0E41               	movlw	65
  3560   00F832  6E1C               	movwf	(___fldiv@a+3)^0,c
  3561   00F834  ECCA  F070         	call	___fldiv	;wreg free
  3562   00F838  C015  F08B         	movff	?___fldiv,efgtoa@u
  3563   00F83C  C016  F08C         	movff	?___fldiv+1,efgtoa@u+1
  3564   00F840  C017  F08D         	movff	?___fldiv+2,efgtoa@u+2
  3565   00F844  C018  F08E         	movff	?___fldiv+3,efgtoa@u+3
  3566   00F848                     
  3567                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 660:         ++i;
  3568   00F848  0100               	movlb	0	; () banked
  3569   00F84A  4B81               	infsnz	efgtoa@i& (0+255),f,b
  3570   00F84C  2B82               	incf	(efgtoa@i+1)& (0+255),f,b
  3571   00F84E                     l4045:
  3572                           
  3573                           ; BSR set to: 0
  3574                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  3575   00F84E  516A               	movf	efgtoa@m& (0+255),w,b
  3576   00F850  5D81               	subwf	efgtoa@i& (0+255),w,b
  3577   00F852  5182               	movf	(efgtoa@i+1)& (0+255),w,b
  3578   00F854  0A80               	xorlw	128
  3579   00F856  6E49               	movwf	??_efgtoa^0,c
  3580   00F858  516B               	movf	(efgtoa@m+1)& (0+255),w,b
  3581   00F85A  0A80               	xorlw	128
  3582   00F85C  5849               	subwfb	??_efgtoa^0,w,c
  3583   00F85E  A0D8               	btfss	status,0,c
  3584   00F860  EF34  F07C         	goto	u4311
  3585   00F864  EF36  F07C         	goto	u4310
  3586   00F868                     u4311:
  3587   00F868  EFAC  F07B         	goto	l4037
  3588   00F86C                     u4310:
  3589   00F86C                     
  3590                           ; BSR set to: 0
  3591                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 664:     l = u.f*
      +                          5.0;
  3592   00F86C  C08B  F001         	movff	efgtoa@u,___flmul@b
  3593   00F870  C08C  F002         	movff	efgtoa@u+1,___flmul@b+1
  3594   00F874  C08D  F003         	movff	efgtoa@u+2,___flmul@b+2
  3595   00F878  C08E  F004         	movff	efgtoa@u+3,___flmul@b+3
  3596   00F87C  0E00               	movlw	0
  3597   00F87E  6E05               	movwf	___flmul@a^0,c
  3598   00F880  0E00               	movlw	0
  3599   00F882  6E06               	movwf	(___flmul@a+1)^0,c
  3600   00F884  0EA0               	movlw	160
  3601   00F886  6E07               	movwf	(___flmul@a+2)^0,c
  3602   00F888  0E40               	movlw	64
  3603   00F88A  6E08               	movwf	(___flmul@a+3)^0,c
  3604   00F88C  ECA1  F074         	call	___flmul	;wreg free
  3605   00F890  C001  F07C         	movff	?___flmul,efgtoa@l
  3606   00F894  C002  F07D         	movff	?___flmul+1,efgtoa@l+1
  3607   00F898  C003  F07E         	movff	?___flmul+2,efgtoa@l+2
  3608   00F89C  C004  F07F         	movff	?___flmul+3,efgtoa@l+3
  3609   00F8A0                     
  3610                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 665:     if (h < 
      +                          l) {
  3611   00F8A0  C078  F01A         	movff	efgtoa@h,___flge@ff1
  3612   00F8A4  C079  F01B         	movff	efgtoa@h+1,___flge@ff1+1
  3613   00F8A8  C07A  F01C         	movff	efgtoa@h+2,___flge@ff1+2
  3614   00F8AC  C07B  F01D         	movff	efgtoa@h+3,___flge@ff1+3
  3615   00F8B0  C07C  F01E         	movff	efgtoa@l,___flge@ff2
  3616   00F8B4  C07D  F01F         	movff	efgtoa@l+1,___flge@ff2+1
  3617   00F8B8  C07E  F020         	movff	efgtoa@l+2,___flge@ff2+2
  3618   00F8BC  C07F  F021         	movff	efgtoa@l+3,___flge@ff2+3
  3619   00F8C0  EC71  F06B         	call	___flge	;wreg free
  3620   00F8C4  B0D8               	btfsc	status,0,c
  3621   00F8C6  EF67  F07C         	goto	u4321
  3622   00F8CA  EF69  F07C         	goto	u4320
  3623   00F8CE                     u4321:
  3624   00F8CE  EF74  F07C         	goto	l4053
  3625   00F8D2                     u4320:
  3626   00F8D2                     
  3627                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 666:         l = 
      +                          0.0;
  3628   00F8D2  0E00               	movlw	0
  3629   00F8D4  0100               	movlb	0	; () banked
  3630   00F8D6  6F7C               	movwf	efgtoa@l& (0+255),b
  3631   00F8D8  0E00               	movlw	0
  3632   00F8DA  6F7D               	movwf	(efgtoa@l+1)& (0+255),b
  3633   00F8DC  0E00               	movlw	0
  3634   00F8DE  6F7E               	movwf	(efgtoa@l+2)& (0+255),b
  3635   00F8E0  0E00               	movlw	0
  3636   00F8E2  6F7F               	movwf	(efgtoa@l+3)& (0+255),b
  3637                           
  3638                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 667:     } else {
  3639   00F8E4  EF9D  F07C         	goto	l4059
  3640   00F8E8                     l4053:
  3641                           
  3642                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 669:         if (
      +                          (h == l) && !(d % 2)) {
  3643   00F8E8  C078  F001         	movff	efgtoa@h,___fleq@ff1
  3644   00F8EC  C079  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  3645   00F8F0  C07A  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  3646   00F8F4  C07B  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  3647   00F8F8  C07C  F005         	movff	efgtoa@l,___fleq@ff2
  3648   00F8FC  C07D  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  3649   00F900  C07E  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  3650   00F904  C07F  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  3651   00F908  EC09  F069         	call	___fleq	;wreg free
  3652   00F90C  A0D8               	btfss	status,0,c
  3653   00F90E  EF8B  F07C         	goto	u4331
  3654   00F912  EF8D  F07C         	goto	u4330
  3655   00F916                     u4331:
  3656   00F916  EF9D  F07C         	goto	l4059
  3657   00F91A                     u4330:
  3658   00F91A  0100               	movlb	0	; () banked
  3659   00F91C  B16C               	btfsc	efgtoa@d& (0+255),0,b
  3660   00F91E  EF93  F07C         	goto	u4341
  3661   00F922  EF95  F07C         	goto	u4340
  3662   00F926                     u4341:
  3663   00F926  EF9D  F07C         	goto	l4059
  3664   00F92A                     u4340:
  3665   00F92A                     
  3666                           ; BSR set to: 0
  3667                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 670:             
      +                          l = 0.0;
  3668   00F92A  0E00               	movlw	0
  3669   00F92C  6F7C               	movwf	efgtoa@l& (0+255),b
  3670   00F92E  0E00               	movlw	0
  3671   00F930  6F7D               	movwf	(efgtoa@l+1)& (0+255),b
  3672   00F932  0E00               	movlw	0
  3673   00F934  6F7E               	movwf	(efgtoa@l+2)& (0+255),b
  3674   00F936  0E00               	movlw	0
  3675   00F938  6F7F               	movwf	(efgtoa@l+3)& (0+255),b
  3676   00F93A                     l4059:
  3677                           
  3678                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 675:     h = g.f 
      +                          + l;
  3679   00F93A  C087  F001         	movff	efgtoa@g,___fladd@b
  3680   00F93E  C088  F002         	movff	efgtoa@g+1,___fladd@b+1
  3681   00F942  C089  F003         	movff	efgtoa@g+2,___fladd@b+2
  3682   00F946  C08A  F004         	movff	efgtoa@g+3,___fladd@b+3
  3683   00F94A  C07C  F005         	movff	efgtoa@l,___fladd@a
  3684   00F94E  C07D  F006         	movff	efgtoa@l+1,___fladd@a+1
  3685   00F952  C07E  F007         	movff	efgtoa@l+2,___fladd@a+2
  3686   00F956  C07F  F008         	movff	efgtoa@l+3,___fladd@a+3
  3687   00F95A  ECB6  F076         	call	___fladd	;wreg free
  3688   00F95E  C001  F078         	movff	?___fladd,efgtoa@h
  3689   00F962  C002  F079         	movff	?___fladd+1,efgtoa@h+1
  3690   00F966  C003  F07A         	movff	?___fladd+2,efgtoa@h+2
  3691   00F96A  C004  F07B         	movff	?___fladd+3,efgtoa@h+3
  3692   00F96E                     
  3693                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 677:  if (h >= (o
      +                          u.f*10.0)) {
  3694   00F96E  C078  F01A         	movff	efgtoa@h,___flge@ff1
  3695   00F972  C079  F01B         	movff	efgtoa@h+1,___flge@ff1+1
  3696   00F976  C07A  F01C         	movff	efgtoa@h+2,___flge@ff1+2
  3697   00F97A  C07B  F01D         	movff	efgtoa@h+3,___flge@ff1+3
  3698   00F97E  0E00               	movlw	0
  3699   00F980  6E05               	movwf	___flmul@a^0,c
  3700   00F982  0E00               	movlw	0
  3701   00F984  6E06               	movwf	(___flmul@a+1)^0,c
  3702   00F986  0E20               	movlw	32
  3703   00F988  6E07               	movwf	(___flmul@a+2)^0,c
  3704   00F98A  0E41               	movlw	65
  3705   00F98C  6E08               	movwf	(___flmul@a+3)^0,c
  3706   00F98E  C074  F001         	movff	efgtoa@ou,___flmul@b
  3707   00F992  C075  F002         	movff	efgtoa@ou+1,___flmul@b+1
  3708   00F996  C076  F003         	movff	efgtoa@ou+2,___flmul@b+2
  3709   00F99A  C077  F004         	movff	efgtoa@ou+3,___flmul@b+3
  3710   00F99E  ECA1  F074         	call	___flmul	;wreg free
  3711   00F9A2  C001  F01E         	movff	?___flmul,___flge@ff2
  3712   00F9A6  C002  F01F         	movff	?___flmul+1,___flge@ff2+1
  3713   00F9AA  C003  F020         	movff	?___flmul+2,___flge@ff2+2
  3714   00F9AE  C004  F021         	movff	?___flmul+3,___flge@ff2+3
  3715   00F9B2  EC71  F06B         	call	___flge	;wreg free
  3716   00F9B6  A0D8               	btfss	status,0,c
  3717   00F9B8  EFE0  F07C         	goto	u4351
  3718   00F9BC  EFE2  F07C         	goto	u4350
  3719   00F9C0                     u4351:
  3720   00F9C0  EF0B  F07D         	goto	l4071
  3721   00F9C4                     u4350:
  3722   00F9C4                     
  3723                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 678:   e++;
  3724   00F9C4  0100               	movlb	0	; () banked
  3725   00F9C6  4B83               	infsnz	efgtoa@e& (0+255),f,b
  3726   00F9C8  2B84               	incf	(efgtoa@e+1)& (0+255),f,b
  3727   00F9CA                     
  3728                           ; BSR set to: 0
  3729                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 679:   ou.f *= 10
      +                          .0;
  3730   00F9CA  C074  F001         	movff	efgtoa@ou,___flmul@b
  3731   00F9CE  C075  F002         	movff	efgtoa@ou+1,___flmul@b+1
  3732   00F9D2  C076  F003         	movff	efgtoa@ou+2,___flmul@b+2
  3733   00F9D6  C077  F004         	movff	efgtoa@ou+3,___flmul@b+3
  3734   00F9DA  0E00               	movlw	0
  3735   00F9DC  6E05               	movwf	___flmul@a^0,c
  3736   00F9DE  0E00               	movlw	0
  3737   00F9E0  6E06               	movwf	(___flmul@a+1)^0,c
  3738   00F9E2  0E20               	movlw	32
  3739   00F9E4  6E07               	movwf	(___flmul@a+2)^0,c
  3740   00F9E6  0E41               	movlw	65
  3741   00F9E8  6E08               	movwf	(___flmul@a+3)^0,c
  3742   00F9EA  ECA1  F074         	call	___flmul	;wreg free
  3743   00F9EE  C001  F074         	movff	?___flmul,efgtoa@ou
  3744   00F9F2  C002  F075         	movff	?___flmul+1,efgtoa@ou+1
  3745   00F9F6  C003  F076         	movff	?___flmul+2,efgtoa@ou+2
  3746   00F9FA  C004  F077         	movff	?___flmul+3,efgtoa@ou+3
  3747   00F9FE                     
  3748                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 681:   if (nmode 
      +                          == 'f') {
  3749   00F9FE  0E66               	movlw	102
  3750   00FA00  0100               	movlb	0	; () banked
  3751   00FA02  1972               	xorwf	efgtoa@nmode& (0+255),w,b
  3752   00FA04  A4D8               	btfss	status,2,c
  3753   00FA06  EF07  F07D         	goto	u4361
  3754   00FA0A  EF09  F07D         	goto	u4360
  3755   00FA0E                     u4361:
  3756   00FA0E  EF0B  F07D         	goto	l4071
  3757   00FA12                     u4360:
  3758   00FA12                     
  3759                           ; BSR set to: 0
  3760                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 683:    m++;
  3761   00FA12  4B6A               	infsnz	efgtoa@m& (0+255),f,b
  3762   00FA14  2B6B               	incf	(efgtoa@m+1)& (0+255),f,b
  3763   00FA16                     l4071:
  3764                           
  3765                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 689:     u = ou;
  3766   00FA16  C074  F08B         	movff	efgtoa@ou,efgtoa@u
  3767   00FA1A  C075  F08C         	movff	efgtoa@ou+1,efgtoa@u+1
  3768   00FA1E  C076  F08D         	movff	efgtoa@ou+2,efgtoa@u+2
  3769   00FA22  C077  F08E         	movff	efgtoa@ou+3,efgtoa@u+3
  3770   00FA26                     
  3771                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 691:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  3772   00FA26  0E65               	movlw	101
  3773   00FA28  0100               	movlb	0	; () banked
  3774   00FA2A  1972               	xorwf	efgtoa@nmode& (0+255),w,b
  3775   00FA2C  B4D8               	btfsc	status,2,c
  3776   00FA2E  EF1B  F07D         	goto	u4371
  3777   00FA32  EF1D  F07D         	goto	u4370
  3778   00FA36                     u4371:
  3779   00FA36  EF23  F07D         	goto	l4077
  3780   00FA3A                     u4370:
  3781   00FA3A                     
  3782                           ; BSR set to: 0
  3783   00FA3A  C083  F068         	movff	efgtoa@e,efgtoa@ne
  3784   00FA3E  C084  F069         	movff	efgtoa@e+1,efgtoa@ne+1
  3785   00FA42  EF27  F07D         	goto	l1121
  3786   00FA46                     l4077:
  3787                           
  3788                           ; BSR set to: 0
  3789   00FA46  0E00               	movlw	0
  3790   00FA48  6F69               	movwf	(efgtoa@ne+1)& (0+255),b
  3791   00FA4A  0E00               	movlw	0
  3792   00FA4C  6F68               	movwf	efgtoa@ne& (0+255),b
  3793   00FA4E                     l1121:
  3794                           
  3795                           ; BSR set to: 0
  3796                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 695:     pp = 0;
  3797   00FA4E  0E00               	movlw	0
  3798   00FA50  6F66               	movwf	efgtoa@pp& (0+255),b
  3799                           
  3800                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 696:     t = 0;
  3801   00FA52  0E00               	movlw	0
  3802   00FA54  6F65               	movwf	(efgtoa@t+1)& (0+255),b
  3803   00FA56  0E00               	movlw	0
  3804   00FA58  6F64               	movwf	efgtoa@t& (0+255),b
  3805                           
  3806                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 697:     i = 0;
  3807   00FA5A  0E00               	movlw	0
  3808   00FA5C  6F82               	movwf	(efgtoa@i+1)& (0+255),b
  3809   00FA5E  0E00               	movlw	0
  3810   00FA60  6F81               	movwf	efgtoa@i& (0+255),b
  3811                           
  3812                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3813   00FA62  EF35  F07E         	goto	l4129
  3814   00FA66                     l4079:
  3815                           
  3816                           ; BSR set to: 0
  3817                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 699:         l = 
      +                          floorf(h/u.f);
  3818   00FA66  C078  F015         	movff	efgtoa@h,___fldiv@b
  3819   00FA6A  C079  F016         	movff	efgtoa@h+1,___fldiv@b+1
  3820   00FA6E  C07A  F017         	movff	efgtoa@h+2,___fldiv@b+2
  3821   00FA72  C07B  F018         	movff	efgtoa@h+3,___fldiv@b+3
  3822   00FA76  C08B  F019         	movff	efgtoa@u,___fldiv@a
  3823   00FA7A  C08C  F01A         	movff	efgtoa@u+1,___fldiv@a+1
  3824   00FA7E  C08D  F01B         	movff	efgtoa@u+2,___fldiv@a+2
  3825   00FA82  C08E  F01C         	movff	efgtoa@u+3,___fldiv@a+3
  3826   00FA86  ECCA  F070         	call	___fldiv	;wreg free
  3827   00FA8A  C015  F02E         	movff	?___fldiv,floorf@x
  3828   00FA8E  C016  F02F         	movff	?___fldiv+1,floorf@x+1
  3829   00FA92  C017  F030         	movff	?___fldiv+2,floorf@x+2
  3830   00FA96  C018  F031         	movff	?___fldiv+3,floorf@x+3
  3831   00FA9A  ECC1  F06F         	call	_floorf	;wreg free
  3832   00FA9E  C02E  F07C         	movff	?_floorf,efgtoa@l
  3833   00FAA2  C02F  F07D         	movff	?_floorf+1,efgtoa@l+1
  3834   00FAA6  C030  F07E         	movff	?_floorf+2,efgtoa@l+2
  3835   00FAAA  C031  F07F         	movff	?_floorf+3,efgtoa@l+3
  3836                           
  3837                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 700:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  3838   00FAAE  C07C  F001         	movff	efgtoa@l,___fltol@f1
  3839   00FAB2  C07D  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3840   00FAB6  C07E  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3841   00FABA  C07F  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3842   00FABE  ECF3  F06B         	call	___fltol	;wreg free
  3843   00FAC2  BE02               	btfsc	(?___fltol+1)^0,7,c
  3844   00FAC4  EF6F  F07D         	goto	u4380
  3845   00FAC8  5002               	movf	(?___fltol+1)^0,w,c
  3846   00FACA  E107               	bnz	u4381
  3847   00FACC  0E0A               	movlw	10
  3848   00FACE  5C01               	subwf	?___fltol^0,w,c
  3849   00FAD0  B0D8               	btfsc	status,0,c
  3850   00FAD2  EF6D  F07D         	goto	u4381
  3851   00FAD6  EF6F  F07D         	goto	u4380
  3852   00FADA                     u4381:
  3853   00FADA  EF7F  F07D         	goto	l4083
  3854   00FADE                     u4380:
  3855   00FADE  C07C  F001         	movff	efgtoa@l,___fltol@f1
  3856   00FAE2  C07D  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3857   00FAE6  C07E  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3858   00FAEA  C07F  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3859   00FAEE  ECF3  F06B         	call	___fltol	;wreg free
  3860   00FAF2  C001  F06C         	movff	?___fltol,efgtoa@d
  3861   00FAF6  C002  F06D         	movff	?___fltol+1,efgtoa@d+1
  3862   00FAFA  EF84  F07D         	goto	l4085
  3863   00FAFE                     l4083:
  3864   00FAFE  0E00               	movlw	0
  3865   00FB00  0100               	movlb	0	; () banked
  3866   00FB02  6F6D               	movwf	(efgtoa@d+1)& (0+255),b
  3867   00FB04  0E09               	movlw	9
  3868   00FB06  6F6C               	movwf	efgtoa@d& (0+255),b
  3869   00FB08                     l4085:
  3870                           
  3871                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 702:         if (
      +                          !d && (mode == 'g') && (ne < 0)
  3872   00FB08  0100               	movlb	0	; () banked
  3873   00FB0A  516C               	movf	efgtoa@d& (0+255),w,b
  3874   00FB0C  116D               	iorwf	(efgtoa@d+1)& (0+255),w,b
  3875   00FB0E  A4D8               	btfss	status,2,c
  3876   00FB10  EF8C  F07D         	goto	u4391
  3877   00FB14  EF8E  F07D         	goto	u4390
  3878   00FB18                     u4391:
  3879   00FB18  EFA2  F07D         	goto	l4093
  3880   00FB1C                     u4390:
  3881   00FB1C                     
  3882                           ; BSR set to: 0
  3883   00FB1C  0E67               	movlw	103
  3884   00FB1E  1973               	xorwf	efgtoa@mode& (0+255),w,b
  3885   00FB20  A4D8               	btfss	status,2,c
  3886   00FB22  EF95  F07D         	goto	u4401
  3887   00FB26  EF97  F07D         	goto	u4400
  3888   00FB2A                     u4401:
  3889   00FB2A  EFA2  F07D         	goto	l4093
  3890   00FB2E                     u4400:
  3891   00FB2E                     
  3892                           ; BSR set to: 0
  3893   00FB2E  BF69               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3894   00FB30  EF9E  F07D         	goto	u4410
  3895   00FB34  EF9C  F07D         	goto	u4411
  3896   00FB38                     u4411:
  3897   00FB38  EFA2  F07D         	goto	l4093
  3898   00FB3C                     u4410:
  3899   00FB3C                     
  3900                           ; BSR set to: 0
  3901                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 706:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 707:             ++t;
  3902   00FB3C  4B64               	infsnz	efgtoa@t& (0+255),f,b
  3903   00FB3E  2B65               	incf	(efgtoa@t+1)& (0+255),f,b
  3904                           
  3905                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 708:         }
  3906   00FB40  EFE9  F07D         	goto	l4121
  3907   00FB44                     l4093:
  3908                           
  3909                           ; BSR set to: 0
  3910                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 711:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 712:             if (!pp &
      +                          & (ne < 0)) {
  3911   00FB44  5166               	movf	efgtoa@pp& (0+255),w,b
  3912   00FB46  A4D8               	btfss	status,2,c
  3913   00FB48  EFA8  F07D         	goto	u4421
  3914   00FB4C  EFAA  F07D         	goto	u4420
  3915   00FB50                     u4421:
  3916   00FB50  EFD2  F07D         	goto	l4113
  3917   00FB54                     u4420:
  3918   00FB54                     
  3919                           ; BSR set to: 0
  3920   00FB54  BF69               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3921   00FB56  EFB1  F07D         	goto	u4430
  3922   00FB5A  EFAF  F07D         	goto	u4431
  3923   00FB5E                     u4431:
  3924   00FB5E  EFD2  F07D         	goto	l4113
  3925   00FB62                     u4430:
  3926   00FB62                     
  3927                           ; BSR set to: 0
  3928                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 713:             
      +                              dbuf[n++] = '.';
  3929   00FB62  0E00               	movlw	low _dbuf
  3930   00FB64  2585               	addwf	efgtoa@n& (0+255),w,b
  3931   00FB66  6ED9               	movwf	fsr2l,c
  3932   00FB68  0E01               	movlw	high _dbuf
  3933   00FB6A  2186               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3934   00FB6C  6EDA               	movwf	fsr2h,c
  3935   00FB6E  0E2E               	movlw	46
  3936   00FB70  6EDF               	movwf	indf2,c
  3937   00FB72                     
  3938                           ; BSR set to: 0
  3939   00FB72  4B85               	infsnz	efgtoa@n& (0+255),f,b
  3940   00FB74  2B86               	incf	(efgtoa@n+1)& (0+255),f,b
  3941   00FB76                     
  3942                           ; BSR set to: 0
  3943                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 714:             
      +                              --w;
  3944   00FB76  0770               	decf	efgtoa@w& (0+255),f,b
  3945   00FB78  A0D8               	btfss	status,0,c
  3946   00FB7A  0771               	decf	(efgtoa@w+1)& (0+255),f,b
  3947   00FB7C                     
  3948                           ; BSR set to: 0
  3949                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 715:             
      +                              pp = 1;
  3950   00FB7C  0E01               	movlw	1
  3951   00FB7E  6F66               	movwf	efgtoa@pp& (0+255),b
  3952   00FB80  EFD2  F07D         	goto	l4113
  3953   00FB84                     l4105:
  3954                           
  3955                           ; BSR set to: 0
  3956                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 718:             
      +                              dbuf[n++] = '0';
  3957   00FB84  0E00               	movlw	low _dbuf
  3958   00FB86  2585               	addwf	efgtoa@n& (0+255),w,b
  3959   00FB88  6ED9               	movwf	fsr2l,c
  3960   00FB8A  0E01               	movlw	high _dbuf
  3961   00FB8C  2186               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3962   00FB8E  6EDA               	movwf	fsr2h,c
  3963   00FB90  0E30               	movlw	48
  3964   00FB92  6EDF               	movwf	indf2,c
  3965   00FB94                     
  3966                           ; BSR set to: 0
  3967   00FB94  4B85               	infsnz	efgtoa@n& (0+255),f,b
  3968   00FB96  2B86               	incf	(efgtoa@n+1)& (0+255),f,b
  3969   00FB98                     
  3970                           ; BSR set to: 0
  3971                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 719:             
      +                              --w;
  3972   00FB98  0770               	decf	efgtoa@w& (0+255),f,b
  3973   00FB9A  A0D8               	btfss	status,0,c
  3974   00FB9C  0771               	decf	(efgtoa@w+1)& (0+255),f,b
  3975   00FB9E                     
  3976                           ; BSR set to: 0
  3977                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 720:             
      +                              --t;
  3978   00FB9E  0764               	decf	efgtoa@t& (0+255),f,b
  3979   00FBA0  A0D8               	btfss	status,0,c
  3980   00FBA2  0765               	decf	(efgtoa@t+1)& (0+255),f,b
  3981   00FBA4                     l4113:
  3982                           
  3983                           ; BSR set to: 0
  3984                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 717:             
      +                          while (t) {
  3985   00FBA4  5164               	movf	efgtoa@t& (0+255),w,b
  3986   00FBA6  1165               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3987   00FBA8  A4D8               	btfss	status,2,c
  3988   00FBAA  EFD9  F07D         	goto	u4441
  3989   00FBAE  EFDB  F07D         	goto	u4440
  3990   00FBB2                     u4441:
  3991   00FBB2  EFC2  F07D         	goto	l4105
  3992   00FBB6                     u4440:
  3993   00FBB6                     
  3994                           ; BSR set to: 0
  3995                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 722:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  3996   00FBB6  0E00               	movlw	low _dbuf
  3997   00FBB8  2585               	addwf	efgtoa@n& (0+255),w,b
  3998   00FBBA  6ED9               	movwf	fsr2l,c
  3999   00FBBC  0E01               	movlw	high _dbuf
  4000   00FBBE  2186               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4001   00FBC0  6EDA               	movwf	fsr2h,c
  4002   00FBC2  516C               	movf	efgtoa@d& (0+255),w,b
  4003   00FBC4  0F30               	addlw	48
  4004   00FBC6  6EDF               	movwf	indf2,c
  4005   00FBC8                     
  4006                           ; BSR set to: 0
  4007   00FBC8  4B85               	infsnz	efgtoa@n& (0+255),f,b
  4008   00FBCA  2B86               	incf	(efgtoa@n+1)& (0+255),f,b
  4009   00FBCC                     
  4010                           ; BSR set to: 0
  4011                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 723:             
      +                          --w;
  4012   00FBCC  0770               	decf	efgtoa@w& (0+255),f,b
  4013   00FBCE  A0D8               	btfss	status,0,c
  4014   00FBD0  0771               	decf	(efgtoa@w+1)& (0+255),f,b
  4015   00FBD2                     l4121:
  4016                           
  4017                           ; BSR set to: 0
  4018                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 725:         h -=
      +                           l*u.f;
  4019   00FBD2  C078  F01A         	movff	efgtoa@h,___flsub@b
  4020   00FBD6  C079  F01B         	movff	efgtoa@h+1,___flsub@b+1
  4021   00FBDA  C07A  F01C         	movff	efgtoa@h+2,___flsub@b+2
  4022   00FBDE  C07B  F01D         	movff	efgtoa@h+3,___flsub@b+3
  4023   00FBE2  C07C  F005         	movff	efgtoa@l,___flmul@a
  4024   00FBE6  C07D  F006         	movff	efgtoa@l+1,___flmul@a+1
  4025   00FBEA  C07E  F007         	movff	efgtoa@l+2,___flmul@a+2
  4026   00FBEE  C07F  F008         	movff	efgtoa@l+3,___flmul@a+3
  4027   00FBF2  C08B  F001         	movff	efgtoa@u,___flmul@b
  4028   00FBF6  C08C  F002         	movff	efgtoa@u+1,___flmul@b+1
  4029   00FBFA  C08D  F003         	movff	efgtoa@u+2,___flmul@b+2
  4030   00FBFE  C08E  F004         	movff	efgtoa@u+3,___flmul@b+3
  4031   00FC02  ECA1  F074         	call	___flmul	;wreg free
  4032   00FC06  C001  F01E         	movff	?___flmul,___flsub@a
  4033   00FC0A  C002  F01F         	movff	?___flmul+1,___flsub@a+1
  4034   00FC0E  C003  F020         	movff	?___flmul+2,___flsub@a+2
  4035   00FC12  C004  F021         	movff	?___flmul+3,___flsub@a+3
  4036   00FC16  ECAD  F066         	call	___flsub	;wreg free
  4037   00FC1A  C01A  F078         	movff	?___flsub,efgtoa@h
  4038   00FC1E  C01B  F079         	movff	?___flsub+1,efgtoa@h+1
  4039   00FC22  C01C  F07A         	movff	?___flsub+2,efgtoa@h+2
  4040   00FC26  C01D  F07B         	movff	?___flsub+3,efgtoa@h+3
  4041   00FC2A                     
  4042                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 726:         u.f 
      +                          = u.f/10.0;
  4043   00FC2A  C08B  F015         	movff	efgtoa@u,___fldiv@b
  4044   00FC2E  C08C  F016         	movff	efgtoa@u+1,___fldiv@b+1
  4045   00FC32  C08D  F017         	movff	efgtoa@u+2,___fldiv@b+2
  4046   00FC36  C08E  F018         	movff	efgtoa@u+3,___fldiv@b+3
  4047   00FC3A  0E00               	movlw	0
  4048   00FC3C  6E19               	movwf	___fldiv@a^0,c
  4049   00FC3E  0E00               	movlw	0
  4050   00FC40  6E1A               	movwf	(___fldiv@a+1)^0,c
  4051   00FC42  0E20               	movlw	32
  4052   00FC44  6E1B               	movwf	(___fldiv@a+2)^0,c
  4053   00FC46  0E41               	movlw	65
  4054   00FC48  6E1C               	movwf	(___fldiv@a+3)^0,c
  4055   00FC4A  ECCA  F070         	call	___fldiv	;wreg free
  4056   00FC4E  C015  F08B         	movff	?___fldiv,efgtoa@u
  4057   00FC52  C016  F08C         	movff	?___fldiv+1,efgtoa@u+1
  4058   00FC56  C017  F08D         	movff	?___fldiv+2,efgtoa@u+2
  4059   00FC5A  C018  F08E         	movff	?___fldiv+3,efgtoa@u+3
  4060   00FC5E                     
  4061                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 727:         --ne
      +                          ;
  4062   00FC5E  0100               	movlb	0	; () banked
  4063   00FC60  0768               	decf	efgtoa@ne& (0+255),f,b
  4064   00FC62  A0D8               	btfss	status,0,c
  4065   00FC64  0769               	decf	(efgtoa@ne+1)& (0+255),f,b
  4066   00FC66                     
  4067                           ; BSR set to: 0
  4068                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 728:         ++i;
  4069   00FC66  4B81               	infsnz	efgtoa@i& (0+255),f,b
  4070   00FC68  2B82               	incf	(efgtoa@i+1)& (0+255),f,b
  4071   00FC6A                     l4129:
  4072                           
  4073                           ; BSR set to: 0
  4074                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4075   00FC6A  516A               	movf	efgtoa@m& (0+255),w,b
  4076   00FC6C  5D81               	subwf	efgtoa@i& (0+255),w,b
  4077   00FC6E  5182               	movf	(efgtoa@i+1)& (0+255),w,b
  4078   00FC70  0A80               	xorlw	128
  4079   00FC72  6E49               	movwf	??_efgtoa^0,c
  4080   00FC74  516B               	movf	(efgtoa@m+1)& (0+255),w,b
  4081   00FC76  0A80               	xorlw	128
  4082   00FC78  5849               	subwfb	??_efgtoa^0,w,c
  4083   00FC7A  B0D8               	btfsc	status,0,c
  4084   00FC7C  EF42  F07E         	goto	u4451
  4085   00FC80  EF44  F07E         	goto	u4450
  4086   00FC84                     u4451:
  4087   00FC84  EF52  F07E         	goto	l4133
  4088   00FC88                     u4450:
  4089   00FC88                     
  4090                           ; BSR set to: 0
  4091   00FC88  BF86               	btfsc	(efgtoa@n+1)& (0+255),7,b
  4092   00FC8A  EF50  F07E         	goto	u4461
  4093   00FC8E  5186               	movf	(efgtoa@n+1)& (0+255),w,b
  4094   00FC90  E109               	bnz	u4460
  4095   00FC92  0E4B               	movlw	75
  4096   00FC94  5D85               	subwf	efgtoa@n& (0+255),w,b
  4097   00FC96  A0D8               	btfss	status,0,c
  4098   00FC98  EF50  F07E         	goto	u4461
  4099   00FC9C  EF52  F07E         	goto	u4460
  4100   00FCA0                     u4461:
  4101   00FCA0  EF33  F07D         	goto	l4079
  4102   00FCA4                     u4460:
  4103   00FCA4                     l4133:
  4104                           
  4105                           ; BSR set to: 0
  4106                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 735:  i = sizeof(
      +                          dbuf) - 1;
  4107   00FCA4  0E00               	movlw	0
  4108   00FCA6  6F82               	movwf	(efgtoa@i+1)& (0+255),b
  4109   00FCA8  0E4F               	movlw	79
  4110   00FCAA  6F81               	movwf	efgtoa@i& (0+255),b
  4111   00FCAC                     
  4112                           ; BSR set to: 0
  4113                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 736:     dbuf[i] 
      +                          = '\0';
  4114   00FCAC  0E00               	movlw	low _dbuf
  4115   00FCAE  2581               	addwf	efgtoa@i& (0+255),w,b
  4116   00FCB0  6ED9               	movwf	fsr2l,c
  4117   00FCB2  0E01               	movlw	high _dbuf
  4118   00FCB4  2182               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4119   00FCB6  6EDA               	movwf	fsr2h,c
  4120   00FCB8  0E00               	movlw	0
  4121   00FCBA  6EDF               	movwf	indf2,c
  4122   00FCBC                     
  4123                           ; BSR set to: 0
  4124                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 740:     if (nmod
      +                          e == 'e') {
  4125   00FCBC  0E65               	movlw	101
  4126   00FCBE  1972               	xorwf	efgtoa@nmode& (0+255),w,b
  4127   00FCC0  A4D8               	btfss	status,2,c
  4128   00FCC2  EF65  F07E         	goto	u4471
  4129   00FCC6  EF67  F07E         	goto	u4470
  4130   00FCCA                     u4471:
  4131   00FCCA  EFEB  F07E         	goto	l4181
  4132   00FCCE                     u4470:
  4133   00FCCE                     
  4134                           ; BSR set to: 0
  4135                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 741:         esig
      +                          n = 0;
  4136   00FCCE  0E00               	movlw	0
  4137   00FCD0  6F67               	movwf	efgtoa@esign& (0+255),b
  4138   00FCD2                     
  4139                           ; BSR set to: 0
  4140                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 742:         if (
      +                          e < 0) {
  4141   00FCD2  BF84               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4142   00FCD4  EF70  F07E         	goto	u4480
  4143   00FCD8  EF6E  F07E         	goto	u4481
  4144   00FCDC                     u4481:
  4145   00FCDC  EF76  F07E         	goto	l4147
  4146   00FCE0                     u4480:
  4147   00FCE0                     
  4148                           ; BSR set to: 0
  4149                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 743:             
      +                          esign = 1;
  4150   00FCE0  0E01               	movlw	1
  4151   00FCE2  6F67               	movwf	efgtoa@esign& (0+255),b
  4152   00FCE4                     
  4153                           ; BSR set to: 0
  4154                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 744:             
      +                          e = -e;
  4155   00FCE4  6D83               	negf	efgtoa@e& (0+255),b
  4156   00FCE6  1F84               	comf	(efgtoa@e+1)& (0+255),f,b
  4157   00FCE8  B0D8               	btfsc	status,0,c
  4158   00FCEA  2B84               	incf	(efgtoa@e+1)& (0+255),f,b
  4159   00FCEC                     l4147:
  4160                           
  4161                           ; BSR set to: 0
  4162                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 746:         p = 
      +                          2;
  4163   00FCEC  0E00               	movlw	0
  4164   00FCEE  6F6F               	movwf	(efgtoa@p+1)& (0+255),b
  4165   00FCF0  0E02               	movlw	2
  4166   00FCF2  6F6E               	movwf	efgtoa@p& (0+255),b
  4167                           
  4168                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 747:         whil
      +                          e (e || (0 < p)) {
  4169   00FCF4  EFA7  F07E         	goto	l4159
  4170   00FCF8                     l4149:
  4171                           
  4172                           ; BSR set to: 0
  4173                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 748:             
      +                          --i;
  4174   00FCF8  0781               	decf	efgtoa@i& (0+255),f,b
  4175   00FCFA  A0D8               	btfss	status,0,c
  4176   00FCFC  0782               	decf	(efgtoa@i+1)& (0+255),f,b
  4177   00FCFE                     
  4178                           ; BSR set to: 0
  4179                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 749:             
      +                          dbuf[i] = '0' + (e % 10);
  4180   00FCFE  0E00               	movlw	low _dbuf
  4181   00FD00  2581               	addwf	efgtoa@i& (0+255),w,b
  4182   00FD02  6ED9               	movwf	fsr2l,c
  4183   00FD04  0E01               	movlw	high _dbuf
  4184   00FD06  2182               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4185   00FD08  6EDA               	movwf	fsr2h,c
  4186   00FD0A  C083  F001         	movff	efgtoa@e,___awmod@dividend
  4187   00FD0E  C084  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  4188   00FD12  0E00               	movlw	0
  4189   00FD14  6E04               	movwf	(___awmod@divisor+1)^0,c
  4190   00FD16  0E0A               	movlw	10
  4191   00FD18  6E03               	movwf	___awmod@divisor^0,c
  4192   00FD1A  EC5E  F069         	call	___awmod	;wreg free
  4193   00FD1E  5001               	movf	?___awmod^0,w,c
  4194   00FD20  0F30               	addlw	48
  4195   00FD22  6EDF               	movwf	indf2,c
  4196   00FD24                     
  4197                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 750:             
      +                          e = e / 10;
  4198   00FD24  C083  F001         	movff	efgtoa@e,___awdiv@dividend
  4199   00FD28  C084  F002         	movff	efgtoa@e+1,___awdiv@dividend+1
  4200   00FD2C  0E00               	movlw	0
  4201   00FD2E  6E04               	movwf	(___awdiv@divisor+1)^0,c
  4202   00FD30  0E0A               	movlw	10
  4203   00FD32  6E03               	movwf	___awdiv@divisor^0,c
  4204   00FD34  ECB6  F069         	call	___awdiv	;wreg free
  4205   00FD38  C001  F083         	movff	?___awdiv,efgtoa@e
  4206   00FD3C  C002  F084         	movff	?___awdiv+1,efgtoa@e+1
  4207   00FD40                     
  4208                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 751:             
      +                          --p;
  4209   00FD40  0100               	movlb	0	; () banked
  4210   00FD42  076E               	decf	efgtoa@p& (0+255),f,b
  4211   00FD44  A0D8               	btfss	status,0,c
  4212   00FD46  076F               	decf	(efgtoa@p+1)& (0+255),f,b
  4213   00FD48                     
  4214                           ; BSR set to: 0
  4215                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 752:             
      +                          --w;
  4216   00FD48  0770               	decf	efgtoa@w& (0+255),f,b
  4217   00FD4A  A0D8               	btfss	status,0,c
  4218   00FD4C  0771               	decf	(efgtoa@w+1)& (0+255),f,b
  4219   00FD4E                     l4159:
  4220                           
  4221                           ; BSR set to: 0
  4222                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 747:         whil
      +                          e (e || (0 < p)) {
  4223   00FD4E  5183               	movf	efgtoa@e& (0+255),w,b
  4224   00FD50  1184               	iorwf	(efgtoa@e+1)& (0+255),w,b
  4225   00FD52  A4D8               	btfss	status,2,c
  4226   00FD54  EFAE  F07E         	goto	u4491
  4227   00FD58  EFB0  F07E         	goto	u4490
  4228   00FD5C                     u4491:
  4229   00FD5C  EF7C  F07E         	goto	l4149
  4230   00FD60                     u4490:
  4231   00FD60                     
  4232                           ; BSR set to: 0
  4233   00FD60  BF6F               	btfsc	(efgtoa@p+1)& (0+255),7,b
  4234   00FD62  EFBD  F07E         	goto	u4500
  4235   00FD66  516F               	movf	(efgtoa@p+1)& (0+255),w,b
  4236   00FD68  E106               	bnz	u4501
  4237   00FD6A  056E               	decf	efgtoa@p& (0+255),w,b
  4238   00FD6C  B0D8               	btfsc	status,0,c
  4239   00FD6E  EFBB  F07E         	goto	u4501
  4240   00FD72  EFBD  F07E         	goto	u4500
  4241   00FD76                     u4501:
  4242   00FD76  EF7C  F07E         	goto	l4149
  4243   00FD7A                     u4500:
  4244   00FD7A                     
  4245                           ; BSR set to: 0
  4246                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 754:         --i;
  4247   00FD7A  0781               	decf	efgtoa@i& (0+255),f,b
  4248   00FD7C  A0D8               	btfss	status,0,c
  4249   00FD7E  0782               	decf	(efgtoa@i+1)& (0+255),f,b
  4250   00FD80                     
  4251                           ; BSR set to: 0
  4252                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 755:         dbuf
      +                          [i] = esign ? '-' : '+';
  4253   00FD80  5167               	movf	efgtoa@esign& (0+255),w,b
  4254   00FD82  A4D8               	btfss	status,2,c
  4255   00FD84  EFC6  F07E         	goto	u4511
  4256   00FD88  EFC8  F07E         	goto	u4510
  4257   00FD8C                     u4511:
  4258   00FD8C  EFCE  F07E         	goto	l4169
  4259   00FD90                     u4510:
  4260   00FD90                     
  4261                           ; BSR set to: 0
  4262   00FD90  0E00               	movlw	0
  4263   00FD92  6F63               	movwf	(_efgtoa$1553+1)& (0+255),b
  4264   00FD94  0E2B               	movlw	43
  4265   00FD96  6F62               	movwf	_efgtoa$1553& (0+255),b
  4266   00FD98  EFD2  F07E         	goto	l4171
  4267   00FD9C                     l4169:
  4268                           
  4269                           ; BSR set to: 0
  4270   00FD9C  0E00               	movlw	0
  4271   00FD9E  6F63               	movwf	(_efgtoa$1553+1)& (0+255),b
  4272   00FDA0  0E2D               	movlw	45
  4273   00FDA2  6F62               	movwf	_efgtoa$1553& (0+255),b
  4274   00FDA4                     l4171:
  4275                           
  4276                           ; BSR set to: 0
  4277   00FDA4  0E00               	movlw	low _dbuf
  4278   00FDA6  2581               	addwf	efgtoa@i& (0+255),w,b
  4279   00FDA8  6ED9               	movwf	fsr2l,c
  4280   00FDAA  0E01               	movlw	high _dbuf
  4281   00FDAC  2182               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4282   00FDAE  6EDA               	movwf	fsr2h,c
  4283   00FDB0  C062  FFDF         	movff	_efgtoa$1553,indf2
  4284   00FDB4                     
  4285                           ; BSR set to: 0
  4286                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 756:         --w;
  4287   00FDB4  0770               	decf	efgtoa@w& (0+255),f,b
  4288   00FDB6  A0D8               	btfss	status,0,c
  4289   00FDB8  0771               	decf	(efgtoa@w+1)& (0+255),f,b
  4290   00FDBA                     
  4291                           ; BSR set to: 0
  4292                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 757:         --i;
  4293   00FDBA  0781               	decf	efgtoa@i& (0+255),f,b
  4294   00FDBC  A0D8               	btfss	status,0,c
  4295   00FDBE  0782               	decf	(efgtoa@i+1)& (0+255),f,b
  4296   00FDC0                     
  4297                           ; BSR set to: 0
  4298                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 761:   dbuf[i] = 
      +                          'e';
  4299   00FDC0  0E00               	movlw	low _dbuf
  4300   00FDC2  2581               	addwf	efgtoa@i& (0+255),w,b
  4301   00FDC4  6ED9               	movwf	fsr2l,c
  4302   00FDC6  0E01               	movlw	high _dbuf
  4303   00FDC8  2182               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4304   00FDCA  6EDA               	movwf	fsr2h,c
  4305   00FDCC  0E65               	movlw	101
  4306   00FDCE  6EDF               	movwf	indf2,c
  4307   00FDD0                     
  4308                           ; BSR set to: 0
  4309                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 763:         --w;
  4310   00FDD0  0770               	decf	efgtoa@w& (0+255),f,b
  4311   00FDD2  A0D8               	btfss	status,0,c
  4312   00FDD4  0771               	decf	(efgtoa@w+1)& (0+255),f,b
  4313   00FDD6                     l4181:
  4314                           
  4315                           ; BSR set to: 0
  4316                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 767:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  4317   00FDD6  0E00               	movlw	low _dbuf
  4318   00FDD8  6E49               	movwf	??_efgtoa^0,c
  4319   00FDDA  0E01               	movlw	high _dbuf
  4320   00FDDC  6E4A               	movwf	(??_efgtoa+1)^0,c
  4321   00FDDE  5185               	movf	efgtoa@n& (0+255),w,b
  4322   00FDE0  5E49               	subwf	??_efgtoa^0,f,c
  4323   00FDE2  5186               	movf	(efgtoa@n+1)& (0+255),w,b
  4324   00FDE4  5A4A               	subwfb	(??_efgtoa+1)^0,f,c
  4325   00FDE6  5181               	movf	efgtoa@i& (0+255),w,b
  4326   00FDE8  2449               	addwf	??_efgtoa^0,w,c
  4327   00FDEA  6E01               	movwf	memcpy@d1^0,c
  4328   00FDEC  5182               	movf	(efgtoa@i+1)& (0+255),w,b
  4329   00FDEE  204A               	addwfc	(??_efgtoa+1)^0,w,c
  4330   00FDF0  6E02               	movwf	(memcpy@d1+1)^0,c
  4331   00FDF2  0E00               	movlw	low _dbuf
  4332   00FDF4  6E03               	movwf	memcpy@s1^0,c
  4333   00FDF6  0E01               	movlw	high _dbuf
  4334   00FDF8  6E04               	movwf	(memcpy@s1+1)^0,c
  4335   00FDFA  C085  F005         	movff	efgtoa@n,memcpy@n
  4336   00FDFE  C086  F006         	movff	efgtoa@n+1,memcpy@n+1
  4337   00FE02  ECF8  F066         	call	_memcpy	;wreg free
  4338   00FE06                     
  4339                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 768:  n = i-n;
  4340   00FE06  0100               	movlb	0	; () banked
  4341   00FE08  5185               	movf	efgtoa@n& (0+255),w,b
  4342   00FE0A  5D81               	subwf	efgtoa@i& (0+255),w,b
  4343   00FE0C  6F85               	movwf	efgtoa@n& (0+255),b
  4344   00FE0E  5186               	movf	(efgtoa@n+1)& (0+255),w,b
  4345   00FE10  5982               	subwfb	(efgtoa@i+1)& (0+255),w,b
  4346   00FE12  6F86               	movwf	(efgtoa@n+1)& (0+255),b
  4347   00FE14                     
  4348                           ; BSR set to: 0
  4349                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 769:  i = sign ==
      +                           0 ? 0 : 1;
  4350   00FE14  5180               	movf	efgtoa@sign& (0+255),w,b
  4351   00FE16  A4D8               	btfss	status,2,c
  4352   00FE18  EF10  F07F         	goto	u4521
  4353   00FE1C  EF13  F07F         	goto	u4520
  4354   00FE20                     u4521:
  4355   00FE20  0E01               	movlw	1
  4356   00FE22  EF14  F07F         	goto	u4530
  4357   00FE26                     u4520:
  4358   00FE26  0E00               	movlw	0
  4359   00FE28                     u4530:
  4360   00FE28  6F81               	movwf	efgtoa@i& (0+255),b
  4361   00FE2A  6B82               	clrf	(efgtoa@i+1)& (0+255),b
  4362   00FE2C                     
  4363                           ; BSR set to: 0
  4364                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 780:  if (sign) {
  4365   00FE2C  5180               	movf	efgtoa@sign& (0+255),w,b
  4366   00FE2E  B4D8               	btfsc	status,2,c
  4367   00FE30  EF1C  F07F         	goto	u4541
  4368   00FE34  EF1E  F07F         	goto	u4540
  4369   00FE38                     u4541:
  4370   00FE38  EF29  F07F         	goto	l4191
  4371   00FE3C                     u4540:
  4372   00FE3C                     
  4373                           ; BSR set to: 0
  4374                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 781:   dbuf[--n] 
      +                          = sign;
  4375   00FE3C  0785               	decf	efgtoa@n& (0+255),f,b
  4376   00FE3E  A0D8               	btfss	status,0,c
  4377   00FE40  0786               	decf	(efgtoa@n+1)& (0+255),f,b
  4378   00FE42  0E00               	movlw	low _dbuf
  4379   00FE44  2585               	addwf	efgtoa@n& (0+255),w,b
  4380   00FE46  6ED9               	movwf	fsr2l,c
  4381   00FE48  0E01               	movlw	high _dbuf
  4382   00FE4A  2186               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4383   00FE4C  6EDA               	movwf	fsr2h,c
  4384   00FE4E  C080  FFDF         	movff	efgtoa@sign,indf2
  4385   00FE52                     l4191:
  4386                           
  4387                           ; BSR set to: 0
  4388                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 783:  w -= i;
  4389   00FE52  5181               	movf	efgtoa@i& (0+255),w,b
  4390   00FE54  5F70               	subwf	efgtoa@w& (0+255),f,b
  4391   00FE56  5182               	movf	(efgtoa@i+1)& (0+255),w,b
  4392   00FE58  5B71               	subwfb	(efgtoa@w+1)& (0+255),f,b
  4393   00FE5A                     
  4394                           ; BSR set to: 0
  4395                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 786:     return (
      +                          void) pad(fp, &dbuf[n], w);
  4396   00FE5A  C042  F011         	movff	efgtoa@fp,pad@fp
  4397   00FE5E  C043  F012         	movff	efgtoa@fp+1,pad@fp+1
  4398   00FE62  0E00               	movlw	low _dbuf
  4399   00FE64  2585               	addwf	efgtoa@n& (0+255),w,b
  4400   00FE66  6E13               	movwf	pad@buf^0,c
  4401   00FE68  0E01               	movlw	high _dbuf
  4402   00FE6A  2186               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4403   00FE6C  6E14               	movwf	(pad@buf+1)^0,c
  4404   00FE6E  C070  F015         	movff	efgtoa@w,pad@p
  4405   00FE72  C071  F016         	movff	efgtoa@w+1,pad@p+1
  4406   00FE76  EC02  F068         	call	_pad	;wreg free
  4407   00FE7A                     l1077:
  4408   00FE7A  0012               	return		;funcret
  4409   00FE7C                     __end_of_efgtoa:
  4410                           	callstack 0
  4411                           
  4412 ;; *************** function _strcpy *****************
  4413 ;; Defined at:
  4414 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strcpy.c"
  4415 ;; Parameters:    Size  Location     Type
  4416 ;;  dest            2    0[COMRAM] PTR unsigned char 
  4417 ;;		 -> dbuf(80), 
  4418 ;;  src             2    2[COMRAM] PTR const unsigned char 
  4419 ;;		 -> STR_36(4), STR_33(4), 
  4420 ;; Auto vars:     Size  Location     Type
  4421 ;;  d               2    6[COMRAM] PTR unsigned char 
  4422 ;;		 -> dbuf(80), 
  4423 ;;  s               2    4[COMRAM] PTR const unsigned char 
  4424 ;;		 -> STR_36(4), STR_33(4), 
  4425 ;; Return value:  Size  Location     Type
  4426 ;;                  2    0[COMRAM] PTR unsigned char 
  4427 ;; Registers used:
  4428 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4429 ;; Tracked objects:
  4430 ;;		On entry : 0/0
  4431 ;;		On exit  : 0/0
  4432 ;;		Unchanged: 0/0
  4433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4434 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4435 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4437 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4438 ;;Total ram usage:        8 bytes
  4439 ;; Hardware stack levels used: 1
  4440 ;; This function calls:
  4441 ;;		Nothing
  4442 ;; This function is called by:
  4443 ;;		_efgtoa
  4444 ;; This function uses a non-reentrant model
  4445 ;;
  4446                           
  4447                           	psect	text6
  4448   00CC8E                     __ptext6:
  4449                           	callstack 0
  4450   00CC8E                     _strcpy:
  4451                           	callstack 26
  4452   00CC8E  C003  F005         	movff	strcpy@src,strcpy@s
  4453   00CC92  C004  F006         	movff	strcpy@src+1,strcpy@s+1
  4454   00CC96  C001  F007         	movff	strcpy@dest,strcpy@d
  4455   00CC9A  C002  F008         	movff	strcpy@dest+1,strcpy@d+1
  4456   00CC9E                     l3799:
  4457   00CC9E  C005  FFF6         	movff	strcpy@s,tblptrl
  4458   00CCA2  C006  FFF7         	movff	strcpy@s+1,tblptrh
  4459   00CCA6  4A05               	infsnz	strcpy@s^0,f,c
  4460   00CCA8  2A06               	incf	(strcpy@s+1)^0,f,c
  4461   00CCAA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4462   00CCAA  6AF8               	clrf	tblptru,c
  4463   00CCAC                     	endif
  4464   00CCAC                     	if	0	;tblptru may be non-zero
  4465   00CCAC                     	endif
  4466   00CCAC  C007  FFD9         	movff	strcpy@d,fsr2l
  4467   00CCB0  C008  FFDA         	movff	strcpy@d+1,fsr2h
  4468   00CCB4  4A07               	infsnz	strcpy@d^0,f,c
  4469   00CCB6  2A08               	incf	(strcpy@d+1)^0,f,c
  4470   00CCB8  0008               	tblrd		*
  4471   00CCBA  CFF5 FFDF          	movff	tablat,indf2
  4472   00CCBE  50DF               	movf	indf2,w,c
  4473   00CCC0  A4D8               	btfss	status,2,c
  4474   00CCC2  EF65  F066         	goto	u3811
  4475   00CCC6  EF67  F066         	goto	u3810
  4476   00CCCA                     u3811:
  4477   00CCCA  EF4F  F066         	goto	l3799
  4478   00CCCE                     u3810:
  4479   00CCCE  0012               	return		;funcret
  4480   00CCD0                     __end_of_strcpy:
  4481                           	callstack 0
  4482                           
  4483 ;; *************** function _pad *****************
  4484 ;; Defined at:
  4485 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  4486 ;; Parameters:    Size  Location     Type
  4487 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  4488 ;;		 -> sprintf@f(11), 
  4489 ;;  buf             2   18[COMRAM] PTR unsigned char 
  4490 ;;		 -> dbuf(80), 
  4491 ;;  p               2   20[COMRAM] int 
  4492 ;; Auto vars:     Size  Location     Type
  4493 ;;  w               2   25[COMRAM] int 
  4494 ;;  i               2   23[COMRAM] int 
  4495 ;; Return value:  Size  Location     Type
  4496 ;;                  1    wreg      void 
  4497 ;; Registers used:
  4498 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4499 ;; Tracked objects:
  4500 ;;		On entry : 0/0
  4501 ;;		On exit  : 0/0
  4502 ;;		Unchanged: 0/0
  4503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4504 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4505 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4506 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4507 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4508 ;;Total ram usage:       11 bytes
  4509 ;; Hardware stack levels used: 1
  4510 ;; Hardware stack levels required when called: 3
  4511 ;; This function calls:
  4512 ;;		_fputc
  4513 ;;		_fputs
  4514 ;; This function is called by:
  4515 ;;		_efgtoa
  4516 ;;		_xtoa
  4517 ;; This function uses a non-reentrant model
  4518 ;;
  4519                           
  4520                           	psect	text7
  4521   00D004                     __ptext7:
  4522                           	callstack 0
  4523   00D004                     _pad:
  4524                           	callstack 23
  4525   00D004                     
  4526                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  4527   00D004  BE16               	btfsc	(pad@p+1)^0,7,c
  4528   00D006  EF07  F068         	goto	u3721
  4529   00D00A  EF09  F068         	goto	u3720
  4530   00D00E                     u3721:
  4531   00D00E  EF0F  F068         	goto	l3765
  4532   00D012                     u3720:
  4533   00D012  C015  F01A         	movff	pad@p,pad@w
  4534   00D016  C016  F01B         	movff	pad@p+1,pad@w+1
  4535   00D01A  EF13  F068         	goto	l1062
  4536   00D01E                     l3765:
  4537   00D01E  0E00               	movlw	0
  4538   00D020  6E1B               	movwf	(pad@w+1)^0,c
  4539   00D022  0E00               	movlw	0
  4540   00D024  6E1A               	movwf	pad@w^0,c
  4541   00D026                     l1062:
  4542                           
  4543                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  4544   00D026  0E00               	movlw	0
  4545   00D028  6E19               	movwf	(pad@i+1)^0,c
  4546   00D02A  0E00               	movlw	0
  4547   00D02C  6E18               	movwf	pad@i^0,c
  4548                           
  4549                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  4550   00D02E  EF25  F068         	goto	l3771
  4551   00D032                     l3767:
  4552                           
  4553                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  4554   00D032  0E00               	movlw	0
  4555   00D034  6E02               	movwf	(fputc@c+1)^0,c
  4556   00D036  0E20               	movlw	32
  4557   00D038  6E01               	movwf	fputc@c^0,c
  4558   00D03A  C011  F003         	movff	pad@fp,fputc@fp
  4559   00D03E  C012  F004         	movff	pad@fp+1,fputc@fp+1
  4560   00D042  EC18  F06A         	call	_fputc	;wreg free
  4561   00D046                     
  4562                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  4563   00D046  4A18               	infsnz	pad@i^0,f,c
  4564   00D048  2A19               	incf	(pad@i+1)^0,f,c
  4565   00D04A                     l3771:
  4566                           
  4567                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  4568   00D04A  501A               	movf	pad@w^0,w,c
  4569   00D04C  5C18               	subwf	pad@i^0,w,c
  4570   00D04E  5019               	movf	(pad@i+1)^0,w,c
  4571   00D050  0A80               	xorlw	128
  4572   00D052  6E17               	movwf	??_pad^0,c
  4573   00D054  501B               	movf	(pad@w+1)^0,w,c
  4574   00D056  0A80               	xorlw	128
  4575   00D058  5817               	subwfb	??_pad^0,w,c
  4576   00D05A  A0D8               	btfss	status,0,c
  4577   00D05C  EF32  F068         	goto	u3731
  4578   00D060  EF34  F068         	goto	u3730
  4579   00D064                     u3731:
  4580   00D064  EF19  F068         	goto	l3767
  4581   00D068                     u3730:
  4582   00D068                     
  4583                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  4584   00D068  C013  F00A         	movff	pad@buf,fputs@s
  4585   00D06C  C014  F00B         	movff	pad@buf+1,fputs@s+1
  4586   00D070  C011  F00C         	movff	pad@fp,fputs@fp
  4587   00D074  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  4588   00D078  EC68  F066         	call	_fputs	;wreg free
  4589   00D07C  0012               	return		;funcret
  4590   00D07E                     __end_of_pad:
  4591                           	callstack 0
  4592                           
  4593 ;; *************** function _fputs *****************
  4594 ;; Defined at:
  4595 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  4596 ;; Parameters:    Size  Location     Type
  4597 ;;  s               2    9[COMRAM] PTR const unsigned char 
  4598 ;;		 -> dbuf(80), 
  4599 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  4600 ;;		 -> sprintf@f(11), 
  4601 ;; Auto vars:     Size  Location     Type
  4602 ;;  i               2   14[COMRAM] int 
  4603 ;;  c               1   13[COMRAM] unsigned char 
  4604 ;; Return value:  Size  Location     Type
  4605 ;;                  2    9[COMRAM] int 
  4606 ;; Registers used:
  4607 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4608 ;; Tracked objects:
  4609 ;;		On entry : 0/0
  4610 ;;		On exit  : 0/0
  4611 ;;		Unchanged: 0/0
  4612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4613 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4614 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4616 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4617 ;;Total ram usage:        7 bytes
  4618 ;; Hardware stack levels used: 1
  4619 ;; Hardware stack levels required when called: 2
  4620 ;; This function calls:
  4621 ;;		_fputc
  4622 ;; This function is called by:
  4623 ;;		_pad
  4624 ;; This function uses a non-reentrant model
  4625 ;;
  4626                           
  4627                           	psect	text8
  4628   00CCD0                     __ptext8:
  4629                           	callstack 0
  4630   00CCD0                     _fputs:
  4631                           	callstack 23
  4632   00CCD0  0E00               	movlw	0
  4633   00CCD2  6E10               	movwf	(fputs@i+1)^0,c
  4634   00CCD4  0E00               	movlw	0
  4635   00CCD6  6E0F               	movwf	fputs@i^0,c
  4636   00CCD8  EF79  F066         	goto	l3297
  4637   00CCDC                     l3293:
  4638   00CCDC  C00E  F001         	movff	fputs@c,fputc@c
  4639   00CCE0  6A02               	clrf	(fputc@c+1)^0,c
  4640   00CCE2  C00C  F003         	movff	fputs@fp,fputc@fp
  4641   00CCE6  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  4642   00CCEA  EC18  F06A         	call	_fputc	;wreg free
  4643   00CCEE  4A0F               	infsnz	fputs@i^0,f,c
  4644   00CCF0  2A10               	incf	(fputs@i+1)^0,f,c
  4645   00CCF2                     l3297:
  4646   00CCF2  500F               	movf	fputs@i^0,w,c
  4647   00CCF4  240A               	addwf	fputs@s^0,w,c
  4648   00CCF6  6ED9               	movwf	fsr2l,c
  4649   00CCF8  5010               	movf	(fputs@i+1)^0,w,c
  4650   00CCFA  200B               	addwfc	(fputs@s+1)^0,w,c
  4651   00CCFC  6EDA               	movwf	fsr2h,c
  4652   00CCFE  50DF               	movf	indf2,w,c
  4653   00CD00  6E0E               	movwf	fputs@c^0,c
  4654   00CD02  500E               	movf	fputs@c^0,w,c
  4655   00CD04  A4D8               	btfss	status,2,c
  4656   00CD06  EF87  F066         	goto	u2951
  4657   00CD0A  EF89  F066         	goto	u2950
  4658   00CD0E                     u2951:
  4659   00CD0E  EF6E  F066         	goto	l3293
  4660   00CD12                     u2950:
  4661   00CD12  0012               	return		;funcret
  4662   00CD14                     __end_of_fputs:
  4663                           	callstack 0
  4664                           
  4665 ;; *************** function _fputc *****************
  4666 ;; Defined at:
  4667 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  4668 ;; Parameters:    Size  Location     Type
  4669 ;;  c               2    0[COMRAM] int 
  4670 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  4671 ;;		 -> sprintf@f(11), 
  4672 ;; Auto vars:     Size  Location     Type
  4673 ;;		None
  4674 ;; Return value:  Size  Location     Type
  4675 ;;                  2    0[COMRAM] int 
  4676 ;; Registers used:
  4677 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4678 ;; Tracked objects:
  4679 ;;		On entry : 0/0
  4680 ;;		On exit  : 0/0
  4681 ;;		Unchanged: 0/0
  4682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4683 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4685 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4686 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4687 ;;Total ram usage:        9 bytes
  4688 ;; Hardware stack levels used: 1
  4689 ;; Hardware stack levels required when called: 1
  4690 ;; This function calls:
  4691 ;;		_putch
  4692 ;; This function is called by:
  4693 ;;		_pad
  4694 ;;		_vfpfcnvrt
  4695 ;;		_fputs
  4696 ;; This function uses a non-reentrant model
  4697 ;;
  4698                           
  4699                           	psect	text9
  4700   00D430                     __ptext9:
  4701                           	callstack 0
  4702   00D430                     _fputc:
  4703                           	callstack 23
  4704   00D430  5003               	movf	fputc@fp^0,w,c
  4705   00D432  1004               	iorwf	(fputc@fp+1)^0,w,c
  4706   00D434  B4D8               	btfsc	status,2,c
  4707   00D436  EF1F  F06A         	goto	u2521
  4708   00D43A  EF21  F06A         	goto	u2520
  4709   00D43E                     u2521:
  4710   00D43E  EF2A  F06A         	goto	l3079
  4711   00D442                     u2520:
  4712   00D442  5003               	movf	fputc@fp^0,w,c
  4713   00D444  1004               	iorwf	(fputc@fp+1)^0,w,c
  4714   00D446  A4D8               	btfss	status,2,c
  4715   00D448  EF28  F06A         	goto	u2531
  4716   00D44C  EF2A  F06A         	goto	u2530
  4717   00D450                     u2531:
  4718   00D450  EF2F  F06A         	goto	l3081
  4719   00D454                     u2530:
  4720   00D454                     l3079:
  4721   00D454  5001               	movf	fputc@c^0,w,c
  4722   00D456  ECE6  F064         	call	_putch
  4723   00D45A  EF7C  F06A         	goto	l1290
  4724   00D45E                     l3081:
  4725   00D45E  EE20 F009          	lfsr	2,9
  4726   00D462  5003               	movf	fputc@fp^0,w,c
  4727   00D464  26D9               	addwf	fsr2l,f,c
  4728   00D466  5004               	movf	(fputc@fp+1)^0,w,c
  4729   00D468  22DA               	addwfc	fsr2h,f,c
  4730   00D46A  50DE               	movf	postinc2,w,c
  4731   00D46C  10DE               	iorwf	postinc2,w,c
  4732   00D46E  B4D8               	btfsc	status,2,c
  4733   00D470  EF3C  F06A         	goto	u2541
  4734   00D474  EF3E  F06A         	goto	u2540
  4735   00D478                     u2541:
  4736   00D478  EF59  F06A         	goto	l3085
  4737   00D47C                     u2540:
  4738   00D47C  EE20 F009          	lfsr	2,9
  4739   00D480  5003               	movf	fputc@fp^0,w,c
  4740   00D482  26D9               	addwf	fsr2l,f,c
  4741   00D484  5004               	movf	(fputc@fp+1)^0,w,c
  4742   00D486  22DA               	addwfc	fsr2h,f,c
  4743   00D488  EE10 F003          	lfsr	1,3
  4744   00D48C  5003               	movf	fputc@fp^0,w,c
  4745   00D48E  26E1               	addwf	fsr1l,f,c
  4746   00D490  5004               	movf	(fputc@fp+1)^0,w,c
  4747   00D492  22E2               	addwfc	fsr1h,f,c
  4748   00D494  50DE               	movf	postinc2,w,c
  4749   00D496  5CE6               	subwf	postinc1,w,c
  4750   00D498  50E6               	movf	postinc1,w,c
  4751   00D49A  0A80               	xorlw	128
  4752   00D49C  6E09               	movwf	(??_fputc+4)^0,c
  4753   00D49E  50DE               	movf	postinc2,w,c
  4754   00D4A0  0A80               	xorlw	128
  4755   00D4A2  5809               	subwfb	(??_fputc+4)^0,w,c
  4756   00D4A4  B0D8               	btfsc	status,0,c
  4757   00D4A6  EF57  F06A         	goto	u2551
  4758   00D4AA  EF59  F06A         	goto	u2550
  4759   00D4AE                     u2551:
  4760   00D4AE  EF7C  F06A         	goto	l1290
  4761   00D4B2                     u2550:
  4762   00D4B2                     l3085:
  4763   00D4B2  EE20 F003          	lfsr	2,3
  4764   00D4B6  5003               	movf	fputc@fp^0,w,c
  4765   00D4B8  26D9               	addwf	fsr2l,f,c
  4766   00D4BA  5004               	movf	(fputc@fp+1)^0,w,c
  4767   00D4BC  22DA               	addwfc	fsr2h,f,c
  4768   00D4BE  CFDE F005          	movff	postinc2,??_fputc
  4769   00D4C2  CFDD F006          	movff	postdec2,??_fputc+1
  4770   00D4C6  C003  FFD9         	movff	fputc@fp,fsr2l
  4771   00D4CA  C004  FFDA         	movff	fputc@fp+1,fsr2h
  4772   00D4CE  CFDE F007          	movff	postinc2,??_fputc+2
  4773   00D4D2  CFDD F008          	movff	postdec2,??_fputc+3
  4774   00D4D6  5005               	movf	??_fputc^0,w,c
  4775   00D4D8  2407               	addwf	(??_fputc+2)^0,w,c
  4776   00D4DA  6ED9               	movwf	fsr2l,c
  4777   00D4DC  5006               	movf	(??_fputc+1)^0,w,c
  4778   00D4DE  2008               	addwfc	(??_fputc+3)^0,w,c
  4779   00D4E0  6EDA               	movwf	fsr2h,c
  4780   00D4E2  C001  FFDF         	movff	fputc@c,indf2
  4781   00D4E6  EE20 F003          	lfsr	2,3
  4782   00D4EA  5003               	movf	fputc@fp^0,w,c
  4783   00D4EC  26D9               	addwf	fsr2l,f,c
  4784   00D4EE  5004               	movf	(fputc@fp+1)^0,w,c
  4785   00D4F0  22DA               	addwfc	fsr2h,f,c
  4786   00D4F2  2ADE               	incf	postinc2,f,c
  4787   00D4F4  0E00               	movlw	0
  4788   00D4F6  22DD               	addwfc	postdec2,f,c
  4789   00D4F8                     l1290:
  4790   00D4F8  0012               	return		;funcret
  4791   00D4FA                     __end_of_fputc:
  4792                           	callstack 0
  4793                           
  4794 ;; *************** function _putch *****************
  4795 ;; Defined at:
  4796 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  4797 ;; Parameters:    Size  Location     Type
  4798 ;;  c               1    wreg     unsigned char 
  4799 ;; Auto vars:     Size  Location     Type
  4800 ;;  c               1    0[COMRAM] unsigned char 
  4801 ;; Return value:  Size  Location     Type
  4802 ;;                  1    wreg      void 
  4803 ;; Registers used:
  4804 ;;		wreg
  4805 ;; Tracked objects:
  4806 ;;		On entry : 0/0
  4807 ;;		On exit  : 0/0
  4808 ;;		Unchanged: 0/0
  4809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4813 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4814 ;;Total ram usage:        0 bytes
  4815 ;; Hardware stack levels used: 1
  4816 ;; This function calls:
  4817 ;;		Nothing
  4818 ;; This function is called by:
  4819 ;;		_fputc
  4820 ;; This function uses a non-reentrant model
  4821 ;;
  4822                           
  4823                           	psect	text10
  4824   00C9CC                     __ptext10:
  4825                           	callstack 0
  4826   00C9CC                     _putch:
  4827                           	callstack 23
  4828   00C9CC  0012               	return		;funcret
  4829   00C9CE                     __end_of_putch:
  4830                           	callstack 0
  4831                           
  4832 ;; *************** function _memcpy *****************
  4833 ;; Defined at:
  4834 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\memcpy.c"
  4835 ;; Parameters:    Size  Location     Type
  4836 ;;  d1              2    0[COMRAM] PTR void 
  4837 ;;		 -> dbuf(80), 
  4838 ;;  s1              2    2[COMRAM] PTR const void 
  4839 ;;		 -> dbuf(80), 
  4840 ;;  n               2    4[COMRAM] unsigned int 
  4841 ;; Auto vars:     Size  Location     Type
  4842 ;;  s               2    8[COMRAM] PTR const unsigned char 
  4843 ;;		 -> dbuf(80), 
  4844 ;;  d               2    6[COMRAM] PTR unsigned char 
  4845 ;;		 -> dbuf(80), 
  4846 ;;  tmp             1   10[COMRAM] unsigned char 
  4847 ;; Return value:  Size  Location     Type
  4848 ;;                  2    0[COMRAM] PTR void 
  4849 ;; Registers used:
  4850 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4851 ;; Tracked objects:
  4852 ;;		On entry : 0/0
  4853 ;;		On exit  : 0/0
  4854 ;;		Unchanged: 0/0
  4855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4856 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4857 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4859 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4860 ;;Total ram usage:       11 bytes
  4861 ;; Hardware stack levels used: 1
  4862 ;; This function calls:
  4863 ;;		Nothing
  4864 ;; This function is called by:
  4865 ;;		_efgtoa
  4866 ;; This function uses a non-reentrant model
  4867 ;;
  4868                           
  4869                           	psect	text11
  4870   00CDF0                     __ptext11:
  4871                           	callstack 0
  4872   00CDF0                     _memcpy:
  4873                           	callstack 26
  4874   00CDF0  C003  F009         	movff	memcpy@s1,memcpy@s
  4875   00CDF4  C004  F00A         	movff	memcpy@s1+1,memcpy@s+1
  4876   00CDF8  C001  F007         	movff	memcpy@d1,memcpy@d
  4877   00CDFC  C002  F008         	movff	memcpy@d1+1,memcpy@d+1
  4878   00CE00  EF12  F067         	goto	l3843
  4879   00CE04                     l3835:
  4880   00CE04  C009  FFD9         	movff	memcpy@s,fsr2l
  4881   00CE08  C00A  FFDA         	movff	memcpy@s+1,fsr2h
  4882   00CE0C  50DF               	movf	indf2,w,c
  4883   00CE0E  6E0B               	movwf	memcpy@tmp^0,c
  4884   00CE10  4A09               	infsnz	memcpy@s^0,f,c
  4885   00CE12  2A0A               	incf	(memcpy@s+1)^0,f,c
  4886   00CE14  C007  FFD9         	movff	memcpy@d,fsr2l
  4887   00CE18  C008  FFDA         	movff	memcpy@d+1,fsr2h
  4888   00CE1C  C00B  FFDF         	movff	memcpy@tmp,indf2
  4889   00CE20  4A07               	infsnz	memcpy@d^0,f,c
  4890   00CE22  2A08               	incf	(memcpy@d+1)^0,f,c
  4891   00CE24                     l3843:
  4892   00CE24  0605               	decf	memcpy@n^0,f,c
  4893   00CE26  A0D8               	btfss	status,0,c
  4894   00CE28  0606               	decf	(memcpy@n+1)^0,f,c
  4895   00CE2A  2805               	incf	memcpy@n^0,w,c
  4896   00CE2C  E106               	bnz	u3931
  4897   00CE2E  2806               	incf	(memcpy@n+1)^0,w,c
  4898   00CE30  A4D8               	btfss	status,2,c
  4899   00CE32  EF1D  F067         	goto	u3931
  4900   00CE36  EF1F  F067         	goto	u3930
  4901   00CE3A                     u3931:
  4902   00CE3A  EF02  F067         	goto	l3835
  4903   00CE3E                     u3930:
  4904   00CE3E  0012               	return		;funcret
  4905   00CE40                     __end_of_memcpy:
  4906                           	callstack 0
  4907                           
  4908 ;; *************** function _labs *****************
  4909 ;; Defined at:
  4910 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\labs.c"
  4911 ;; Parameters:    Size  Location     Type
  4912 ;;  a               4    0[COMRAM] long 
  4913 ;; Auto vars:     Size  Location     Type
  4914 ;;		None
  4915 ;; Return value:  Size  Location     Type
  4916 ;;                  4    0[COMRAM] long 
  4917 ;; Registers used:
  4918 ;;		wreg, status,2, status,0
  4919 ;; Tracked objects:
  4920 ;;		On entry : 0/0
  4921 ;;		On exit  : 0/0
  4922 ;;		Unchanged: 0/0
  4923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4924 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4926 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4927 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4928 ;;Total ram usage:        8 bytes
  4929 ;; Hardware stack levels used: 1
  4930 ;; This function calls:
  4931 ;;		Nothing
  4932 ;; This function is called by:
  4933 ;;		_efgtoa
  4934 ;; This function uses a non-reentrant model
  4935 ;;
  4936                           
  4937                           	psect	text12
  4938   00CF9E                     __ptext12:
  4939                           	callstack 0
  4940   00CF9E                     _labs:
  4941                           	callstack 26
  4942   00CF9E  BE04               	btfsc	(labs@a+3)^0,7,c
  4943   00CFA0  EFDE  F067         	goto	u3820
  4944   00CFA4  5004               	movf	(labs@a+3)^0,w,c
  4945   00CFA6  1003               	iorwf	(labs@a+2)^0,w,c
  4946   00CFA8  1002               	iorwf	(labs@a+1)^0,w,c
  4947   00CFAA  E106               	bnz	u3821
  4948   00CFAC  0401               	decf	labs@a^0,w,c
  4949   00CFAE  B0D8               	btfsc	status,0,c
  4950   00CFB0  EFDC  F067         	goto	u3821
  4951   00CFB4  EFDE  F067         	goto	u3820
  4952   00CFB8                     u3821:
  4953   00CFB8  EFF9  F067         	goto	l1269
  4954   00CFBC                     u3820:
  4955   00CFBC  C001  F005         	movff	labs@a,??_labs
  4956   00CFC0  C002  F006         	movff	labs@a+1,??_labs+1
  4957   00CFC4  C003  F007         	movff	labs@a+2,??_labs+2
  4958   00CFC8  C004  F008         	movff	labs@a+3,??_labs+3
  4959   00CFCC  1E05               	comf	??_labs^0,f,c
  4960   00CFCE  1E06               	comf	(??_labs+1)^0,f,c
  4961   00CFD0  1E07               	comf	(??_labs+2)^0,f,c
  4962   00CFD2  1E08               	comf	(??_labs+3)^0,f,c
  4963   00CFD4  2A05               	incf	??_labs^0,f,c
  4964   00CFD6  0E00               	movlw	0
  4965   00CFD8  2206               	addwfc	(??_labs+1)^0,f,c
  4966   00CFDA  2207               	addwfc	(??_labs+2)^0,f,c
  4967   00CFDC  2208               	addwfc	(??_labs+3)^0,f,c
  4968   00CFDE  C005  F001         	movff	??_labs,?_labs
  4969   00CFE2  C006  F002         	movff	??_labs+1,?_labs+1
  4970   00CFE6  C007  F003         	movff	??_labs+2,?_labs+2
  4971   00CFEA  C008  F004         	movff	??_labs+3,?_labs+3
  4972   00CFEE  EF01  F068         	goto	l1272
  4973   00CFF2                     l1269:
  4974   00CFF2  C001  F001         	movff	labs@a,?_labs
  4975   00CFF6  C002  F002         	movff	labs@a+1,?_labs+1
  4976   00CFFA  C003  F003         	movff	labs@a+2,?_labs+2
  4977   00CFFE  C004  F004         	movff	labs@a+3,?_labs+3
  4978   00D002                     l1272:
  4979   00D002  0012               	return		;funcret
  4980   00D004                     __end_of_labs:
  4981                           	callstack 0
  4982                           
  4983 ;; *************** function _floorf *****************
  4984 ;; Defined at:
  4985 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\floorf.c"
  4986 ;; Parameters:    Size  Location     Type
  4987 ;;  x               4   45[COMRAM] float 
  4988 ;; Auto vars:     Size  Location     Type
  4989 ;;  u               4   61[COMRAM] struct .
  4990 ;;  m               4   55[COMRAM] unsigned long 
  4991 ;;  e               2   59[COMRAM] int 
  4992 ;; Return value:  Size  Location     Type
  4993 ;;                  4   45[COMRAM] float 
  4994 ;; Registers used:
  4995 ;;		wreg, status,2, status,0
  4996 ;; Tracked objects:
  4997 ;;		On entry : 0/0
  4998 ;;		On exit  : 0/0
  4999 ;;		Unchanged: 0/0
  5000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5001 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5002 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5003 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5004 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5005 ;;Total ram usage:       20 bytes
  5006 ;; Hardware stack levels used: 1
  5007 ;; This function calls:
  5008 ;;		Nothing
  5009 ;; This function is called by:
  5010 ;;		_efgtoa
  5011 ;; This function uses a non-reentrant model
  5012 ;;
  5013                           
  5014                           	psect	text13
  5015   00DF82                     __ptext13:
  5016                           	callstack 0
  5017   00DF82                     _floorf:
  5018                           	callstack 26
  5019   00DF82  C0B5  F03E         	movff	floorf@F526,floorf@u
  5020   00DF86  C0B6  F03F         	movff	floorf@F526+1,floorf@u+1
  5021   00DF8A  C0B7  F040         	movff	floorf@F526+2,floorf@u+2
  5022   00DF8E  C0B8  F041         	movff	floorf@F526+3,floorf@u+3
  5023   00DF92  C02E  F03E         	movff	floorf@x,floorf@u
  5024   00DF96  C02F  F03F         	movff	floorf@x+1,floorf@u+1
  5025   00DF9A  C030  F040         	movff	floorf@x+2,floorf@u+2
  5026   00DF9E  C031  F041         	movff	floorf@x+3,floorf@u+3
  5027   00DFA2  0E81               	movlw	129
  5028   00DFA4  6E32               	movwf	??_floorf^0,c
  5029   00DFA6  0EFF               	movlw	255
  5030   00DFA8  6E33               	movwf	(??_floorf+1)^0,c
  5031   00DFAA  C03E  F034         	movff	floorf@u,??_floorf+2
  5032   00DFAE  C03F  F035         	movff	floorf@u+1,??_floorf+3
  5033   00DFB2  C040  F036         	movff	floorf@u+2,??_floorf+4
  5034   00DFB6  C041  F037         	movff	floorf@u+3,??_floorf+5
  5035   00DFBA  0E18               	movlw	24
  5036   00DFBC  EFE5  F06F         	goto	u3830
  5037   00DFC0                     u3835:
  5038   00DFC0  90D8               	bcf	status,0,c
  5039   00DFC2  3237               	rrcf	(??_floorf+5)^0,f,c
  5040   00DFC4  3236               	rrcf	(??_floorf+4)^0,f,c
  5041   00DFC6  3235               	rrcf	(??_floorf+3)^0,f,c
  5042   00DFC8  3234               	rrcf	(??_floorf+2)^0,f,c
  5043   00DFCA                     u3830:
  5044   00DFCA  2EE8               	decfsz	wreg,f,c
  5045   00DFCC  EFE0  F06F         	goto	u3835
  5046   00DFD0  5034               	movf	(??_floorf+2)^0,w,c
  5047   00DFD2  2432               	addwf	??_floorf^0,w,c
  5048   00DFD4  6E3C               	movwf	floorf@e^0,c
  5049   00DFD6  0E00               	movlw	0
  5050   00DFD8  2033               	addwfc	(??_floorf+1)^0,w,c
  5051   00DFDA  6E3D               	movwf	(floorf@e+1)^0,c
  5052   00DFDC  BE3D               	btfsc	(floorf@e+1)^0,7,c
  5053   00DFDE  EFFA  F06F         	goto	u3841
  5054   00DFE2  503D               	movf	(floorf@e+1)^0,w,c
  5055   00DFE4  E109               	bnz	u3840
  5056   00DFE6  0E17               	movlw	23
  5057   00DFE8  5C3C               	subwf	floorf@e^0,w,c
  5058   00DFEA  A0D8               	btfss	status,0,c
  5059   00DFEC  EFFA  F06F         	goto	u3841
  5060   00DFF0  EFFC  F06F         	goto	u3840
  5061   00DFF4                     u3841:
  5062   00DFF4  EF06  F070         	goto	l3811
  5063   00DFF8                     u3840:
  5064   00DFF8                     l3809:
  5065   00DFF8  C02E  F02E         	movff	floorf@x,?_floorf
  5066   00DFFC  C02F  F02F         	movff	floorf@x+1,?_floorf+1
  5067   00E000  C030  F030         	movff	floorf@x+2,?_floorf+2
  5068   00E004  C031  F031         	movff	floorf@x+3,?_floorf+3
  5069   00E008  EFC9  F070         	goto	l1244
  5070   00E00C                     l3811:
  5071   00E00C  BE3D               	btfsc	(floorf@e+1)^0,7,c
  5072   00E00E  EF0B  F070         	goto	u3851
  5073   00E012  EF0D  F070         	goto	u3850
  5074   00E016                     u3851:
  5075   00E016  EF7D  F070         	goto	l3821
  5076   00E01A                     u3850:
  5077   00E01A  C03C  F032         	movff	floorf@e,??_floorf
  5078   00E01E  0EFF               	movlw	255
  5079   00E020  6E33               	movwf	(??_floorf+1)^0,c
  5080   00E022  0EFF               	movlw	255
  5081   00E024  6E34               	movwf	(??_floorf+2)^0,c
  5082   00E026  0E7F               	movlw	127
  5083   00E028  6E35               	movwf	(??_floorf+3)^0,c
  5084   00E02A  0E00               	movlw	0
  5085   00E02C  6E36               	movwf	(??_floorf+4)^0,c
  5086   00E02E                     u3865:
  5087   00E02E  6632               	tstfsz	??_floorf^0,c
  5088   00E030  EF1C  F070         	goto	u3866
  5089   00E034  EF24  F070         	goto	u3867
  5090   00E038                     u3866:
  5091   00E038  3436               	rlcf	(??_floorf+4)^0,w,c
  5092   00E03A  3236               	rrcf	(??_floorf+4)^0,f,c
  5093   00E03C  3235               	rrcf	(??_floorf+3)^0,f,c
  5094   00E03E  3234               	rrcf	(??_floorf+2)^0,f,c
  5095   00E040  3233               	rrcf	(??_floorf+1)^0,f,c
  5096   00E042  2E32               	decfsz	??_floorf^0,f,c
  5097   00E044  EF17  F070         	goto	u3865
  5098   00E048                     u3867:
  5099   00E048  C033  F038         	movff	??_floorf+1,floorf@m
  5100   00E04C  C034  F039         	movff	??_floorf+2,floorf@m+1
  5101   00E050  C035  F03A         	movff	??_floorf+3,floorf@m+2
  5102   00E054  C036  F03B         	movff	??_floorf+4,floorf@m+3
  5103   00E058  5038               	movf	floorf@m^0,w,c
  5104   00E05A  143E               	andwf	floorf@u^0,w,c
  5105   00E05C  6E32               	movwf	??_floorf^0,c
  5106   00E05E  5039               	movf	(floorf@m+1)^0,w,c
  5107   00E060  143F               	andwf	(floorf@u+1)^0,w,c
  5108   00E062  6E33               	movwf	(??_floorf+1)^0,c
  5109   00E064  503A               	movf	(floorf@m+2)^0,w,c
  5110   00E066  1440               	andwf	(floorf@u+2)^0,w,c
  5111   00E068  6E34               	movwf	(??_floorf+2)^0,c
  5112   00E06A  503B               	movf	(floorf@m+3)^0,w,c
  5113   00E06C  1441               	andwf	(floorf@u+3)^0,w,c
  5114   00E06E  6E35               	movwf	(??_floorf+3)^0,c
  5115   00E070  5032               	movf	??_floorf^0,w,c
  5116   00E072  1033               	iorwf	(??_floorf+1)^0,w,c
  5117   00E074  1034               	iorwf	(??_floorf+2)^0,w,c
  5118   00E076  1035               	iorwf	(??_floorf+3)^0,w,c
  5119   00E078  A4D8               	btfss	status,2,c
  5120   00E07A  EF41  F070         	goto	u3871
  5121   00E07E  EF43  F070         	goto	u3870
  5122   00E082                     u3871:
  5123   00E082  EF45  F070         	goto	l3817
  5124   00E086                     u3870:
  5125   00E086  EFFC  F06F         	goto	l3809
  5126   00E08A                     l3817:
  5127   00E08A  C03E  F032         	movff	floorf@u,??_floorf
  5128   00E08E  C03F  F033         	movff	floorf@u+1,??_floorf+1
  5129   00E092  C040  F034         	movff	floorf@u+2,??_floorf+2
  5130   00E096  C041  F035         	movff	floorf@u+3,??_floorf+3
  5131   00E09A  0E20               	movlw	32
  5132   00E09C  EF55  F070         	goto	u3880
  5133   00E0A0                     u3885:
  5134   00E0A0  90D8               	bcf	status,0,c
  5135   00E0A2  3235               	rrcf	(??_floorf+3)^0,f,c
  5136   00E0A4  3234               	rrcf	(??_floorf+2)^0,f,c
  5137   00E0A6  3233               	rrcf	(??_floorf+1)^0,f,c
  5138   00E0A8  3232               	rrcf	??_floorf^0,f,c
  5139   00E0AA                     u3880:
  5140   00E0AA  2EE8               	decfsz	wreg,f,c
  5141   00E0AC  EF50  F070         	goto	u3885
  5142   00E0B0  5032               	movf	??_floorf^0,w,c
  5143   00E0B2  1033               	iorwf	(??_floorf+1)^0,w,c
  5144   00E0B4  1034               	iorwf	(??_floorf+2)^0,w,c
  5145   00E0B6  1035               	iorwf	(??_floorf+3)^0,w,c
  5146   00E0B8  B4D8               	btfsc	status,2,c
  5147   00E0BA  EF61  F070         	goto	u3891
  5148   00E0BE  EF63  F070         	goto	u3890
  5149   00E0C2                     u3891:
  5150   00E0C2  EF6B  F070         	goto	l1247
  5151   00E0C6                     u3890:
  5152   00E0C6  5038               	movf	floorf@m^0,w,c
  5153   00E0C8  263E               	addwf	floorf@u^0,f,c
  5154   00E0CA  5039               	movf	(floorf@m+1)^0,w,c
  5155   00E0CC  223F               	addwfc	(floorf@u+1)^0,f,c
  5156   00E0CE  503A               	movf	(floorf@m+2)^0,w,c
  5157   00E0D0  2240               	addwfc	(floorf@u+2)^0,f,c
  5158   00E0D2  503B               	movf	(floorf@m+3)^0,w,c
  5159   00E0D4  2241               	addwfc	(floorf@u+3)^0,f,c
  5160   00E0D6                     l1247:
  5161   00E0D6  1C38               	comf	floorf@m^0,w,c
  5162   00E0D8  6E32               	movwf	??_floorf^0,c
  5163   00E0DA  1C39               	comf	(floorf@m+1)^0,w,c
  5164   00E0DC  6E33               	movwf	(??_floorf+1)^0,c
  5165   00E0DE  1C3A               	comf	(floorf@m+2)^0,w,c
  5166   00E0E0  6E34               	movwf	(??_floorf+2)^0,c
  5167   00E0E2  1C3B               	comf	(floorf@m+3)^0,w,c
  5168   00E0E4  6E35               	movwf	(??_floorf+3)^0,c
  5169   00E0E6  5032               	movf	??_floorf^0,w,c
  5170   00E0E8  163E               	andwf	floorf@u^0,f,c
  5171   00E0EA  5033               	movf	(??_floorf+1)^0,w,c
  5172   00E0EC  163F               	andwf	(floorf@u+1)^0,f,c
  5173   00E0EE  5034               	movf	(??_floorf+2)^0,w,c
  5174   00E0F0  1640               	andwf	(floorf@u+2)^0,f,c
  5175   00E0F2  5035               	movf	(??_floorf+3)^0,w,c
  5176   00E0F4  1641               	andwf	(floorf@u+3)^0,f,c
  5177   00E0F6  EFC1  F070         	goto	l3829
  5178   00E0FA                     l3821:
  5179   00E0FA  C03E  F032         	movff	floorf@u,??_floorf
  5180   00E0FE  C03F  F033         	movff	floorf@u+1,??_floorf+1
  5181   00E102  C040  F034         	movff	floorf@u+2,??_floorf+2
  5182   00E106  C041  F035         	movff	floorf@u+3,??_floorf+3
  5183   00E10A  0E20               	movlw	32
  5184   00E10C  EF8D  F070         	goto	u3900
  5185   00E110                     u3905:
  5186   00E110  90D8               	bcf	status,0,c
  5187   00E112  3235               	rrcf	(??_floorf+3)^0,f,c
  5188   00E114  3234               	rrcf	(??_floorf+2)^0,f,c
  5189   00E116  3233               	rrcf	(??_floorf+1)^0,f,c
  5190   00E118  3232               	rrcf	??_floorf^0,f,c
  5191   00E11A                     u3900:
  5192   00E11A  2EE8               	decfsz	wreg,f,c
  5193   00E11C  EF88  F070         	goto	u3905
  5194   00E120  5032               	movf	??_floorf^0,w,c
  5195   00E122  1033               	iorwf	(??_floorf+1)^0,w,c
  5196   00E124  1034               	iorwf	(??_floorf+2)^0,w,c
  5197   00E126  1035               	iorwf	(??_floorf+3)^0,w,c
  5198   00E128  A4D8               	btfss	status,2,c
  5199   00E12A  EF99  F070         	goto	u3911
  5200   00E12E  EF9B  F070         	goto	u3910
  5201   00E132                     u3911:
  5202   00E132  EFA5  F070         	goto	l3825
  5203   00E136                     u3910:
  5204   00E136  0E00               	movlw	0
  5205   00E138  6E3E               	movwf	floorf@u^0,c
  5206   00E13A  0E00               	movlw	0
  5207   00E13C  6E3F               	movwf	(floorf@u+1)^0,c
  5208   00E13E  0E00               	movlw	0
  5209   00E140  6E40               	movwf	(floorf@u+2)^0,c
  5210   00E142  0E00               	movlw	0
  5211   00E144  6E41               	movwf	(floorf@u+3)^0,c
  5212   00E146  EFC1  F070         	goto	l3829
  5213   00E14A                     l3825:
  5214   00E14A  90D8               	bcf	status,0,c
  5215   00E14C  343E               	rlcf	floorf@u^0,w,c
  5216   00E14E  6E32               	movwf	??_floorf^0,c
  5217   00E150  343F               	rlcf	(floorf@u+1)^0,w,c
  5218   00E152  6E33               	movwf	(??_floorf+1)^0,c
  5219   00E154  3440               	rlcf	(floorf@u+2)^0,w,c
  5220   00E156  6E34               	movwf	(??_floorf+2)^0,c
  5221   00E158  3441               	rlcf	(floorf@u+3)^0,w,c
  5222   00E15A  6E35               	movwf	(??_floorf+3)^0,c
  5223   00E15C  5032               	movf	??_floorf^0,w,c
  5224   00E15E  1033               	iorwf	(??_floorf+1)^0,w,c
  5225   00E160  1034               	iorwf	(??_floorf+2)^0,w,c
  5226   00E162  1035               	iorwf	(??_floorf+3)^0,w,c
  5227   00E164  B4D8               	btfsc	status,2,c
  5228   00E166  EFB7  F070         	goto	u3921
  5229   00E16A  EFB9  F070         	goto	u3920
  5230   00E16E                     u3921:
  5231   00E16E  EFC1  F070         	goto	l3829
  5232   00E172                     u3920:
  5233   00E172  0E00               	movlw	0
  5234   00E174  6E3E               	movwf	floorf@u^0,c
  5235   00E176  0E00               	movlw	0
  5236   00E178  6E3F               	movwf	(floorf@u+1)^0,c
  5237   00E17A  0E80               	movlw	128
  5238   00E17C  6E40               	movwf	(floorf@u+2)^0,c
  5239   00E17E  0EBF               	movlw	191
  5240   00E180  6E41               	movwf	(floorf@u+3)^0,c
  5241   00E182                     l3829:
  5242   00E182  C03E  F02E         	movff	floorf@u,?_floorf
  5243   00E186  C03F  F02F         	movff	floorf@u+1,?_floorf+1
  5244   00E18A  C040  F030         	movff	floorf@u+2,?_floorf+2
  5245   00E18E  C041  F031         	movff	floorf@u+3,?_floorf+3
  5246   00E192                     l1244:
  5247   00E192  0012               	return		;funcret
  5248   00E194                     __end_of_floorf:
  5249                           	callstack 0
  5250                           
  5251 ;; *************** function ___fpclassifyf *****************
  5252 ;; Defined at:
  5253 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\__fpclassifyf.c"
  5254 ;; Parameters:    Size  Location     Type
  5255 ;;  x               4    0[COMRAM] float 
  5256 ;; Auto vars:     Size  Location     Type
  5257 ;;  u               4   10[COMRAM] struct .
  5258 ;;  e               2    8[COMRAM] int 
  5259 ;; Return value:  Size  Location     Type
  5260 ;;                  2    0[COMRAM] int 
  5261 ;; Registers used:
  5262 ;;		wreg, status,2, status,0
  5263 ;; Tracked objects:
  5264 ;;		On entry : 0/0
  5265 ;;		On exit  : 0/0
  5266 ;;		Unchanged: 0/0
  5267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5268 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5269 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5270 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5271 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5272 ;;Total ram usage:       14 bytes
  5273 ;; Hardware stack levels used: 1
  5274 ;; This function calls:
  5275 ;;		Nothing
  5276 ;; This function is called by:
  5277 ;;		_efgtoa
  5278 ;; This function uses a non-reentrant model
  5279 ;;
  5280                           
  5281                           	psect	text14
  5282   00D5E4                     __ptext14:
  5283                           	callstack 0
  5284   00D5E4                     ___fpclassifyf:
  5285                           	callstack 26
  5286   00D5E4  C0B9  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  5287   00D5E8  C0BA  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  5288   00D5EC  C0BB  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  5289   00D5F0  C0BC  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  5290   00D5F4  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  5291   00D5F8  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5292   00D5FC  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5293   00D600  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5294   00D604  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5295   00D608  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5296   00D60C  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5297   00D610  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5298   00D614  0E18               	movlw	24
  5299   00D616  EF12  F06B         	goto	u3740
  5300   00D61A                     u3745:
  5301   00D61A  90D8               	bcf	status,0,c
  5302   00D61C  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  5303   00D61E  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  5304   00D620  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  5305   00D622  3205               	rrcf	??___fpclassifyf^0,f,c
  5306   00D624                     u3740:
  5307   00D624  2EE8               	decfsz	wreg,f,c
  5308   00D626  EF0D  F06B         	goto	u3745
  5309   00D62A  5005               	movf	??___fpclassifyf^0,w,c
  5310   00D62C  6E09               	movwf	___fpclassifyf@e^0,c
  5311   00D62E  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  5312   00D630  5009               	movf	___fpclassifyf@e^0,w,c
  5313   00D632  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5314   00D634  A4D8               	btfss	status,2,c
  5315   00D636  EF1F  F06B         	goto	u3751
  5316   00D63A  EF21  F06B         	goto	u3750
  5317   00D63E                     u3751:
  5318   00D63E  EF41  F06B         	goto	l3787
  5319   00D642                     u3750:
  5320   00D642  90D8               	bcf	status,0,c
  5321   00D644  340B               	rlcf	___fpclassifyf@u^0,w,c
  5322   00D646  6E05               	movwf	??___fpclassifyf^0,c
  5323   00D648  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  5324   00D64A  6E06               	movwf	(??___fpclassifyf+1)^0,c
  5325   00D64C  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  5326   00D64E  6E07               	movwf	(??___fpclassifyf+2)^0,c
  5327   00D650  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  5328   00D652  6E08               	movwf	(??___fpclassifyf+3)^0,c
  5329   00D654  5005               	movf	??___fpclassifyf^0,w,c
  5330   00D656  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5331   00D658  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5332   00D65A  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5333   00D65C  A4D8               	btfss	status,2,c
  5334   00D65E  EF33  F06B         	goto	u3761
  5335   00D662  EF35  F06B         	goto	u3760
  5336   00D666                     u3761:
  5337   00D666  EF3B  F06B         	goto	l3783
  5338   00D66A                     u3760:
  5339   00D66A  0E00               	movlw	0
  5340   00D66C  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5341   00D66E  0E02               	movlw	2
  5342   00D670  6E01               	movwf	?___fpclassifyf^0,c
  5343   00D672  EF70  F06B         	goto	l1212
  5344   00D676                     l3783:
  5345   00D676  0E00               	movlw	0
  5346   00D678  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5347   00D67A  0E03               	movlw	3
  5348   00D67C  6E01               	movwf	?___fpclassifyf^0,c
  5349   00D67E  EF70  F06B         	goto	l1212
  5350   00D682                     l3787:
  5351   00D682  2809               	incf	___fpclassifyf@e^0,w,c
  5352   00D684  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5353   00D686  A4D8               	btfss	status,2,c
  5354   00D688  EF48  F06B         	goto	u3771
  5355   00D68C  EF4A  F06B         	goto	u3770
  5356   00D690                     u3771:
  5357   00D690  EF6C  F06B         	goto	l3793
  5358   00D694                     u3770:
  5359   00D694  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5360   00D698  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5361   00D69C  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5362   00D6A0  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5363   00D6A4  0E09               	movlw	9
  5364   00D6A6                     u3785:
  5365   00D6A6  90D8               	bcf	status,0,c
  5366   00D6A8  3605               	rlcf	??___fpclassifyf^0,f,c
  5367   00D6AA  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  5368   00D6AC  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  5369   00D6AE  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  5370   00D6B0  2EE8               	decfsz	wreg,f,c
  5371   00D6B2  EF53  F06B         	goto	u3785
  5372   00D6B6  5005               	movf	??___fpclassifyf^0,w,c
  5373   00D6B8  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5374   00D6BA  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5375   00D6BC  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5376   00D6BE  B4D8               	btfsc	status,2,c
  5377   00D6C0  EF64  F06B         	goto	u3791
  5378   00D6C4  EF67  F06B         	goto	u3790
  5379   00D6C8                     u3791:
  5380   00D6C8  0E01               	movlw	1
  5381   00D6CA  EF68  F06B         	goto	u3800
  5382   00D6CE                     u3790:
  5383   00D6CE  0E00               	movlw	0
  5384   00D6D0                     u3800:
  5385   00D6D0  6E01               	movwf	?___fpclassifyf^0,c
  5386   00D6D2  6A02               	clrf	(?___fpclassifyf+1)^0,c
  5387   00D6D4  EF70  F06B         	goto	l1212
  5388   00D6D8                     l3793:
  5389   00D6D8  0E00               	movlw	0
  5390   00D6DA  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5391   00D6DC  0E04               	movlw	4
  5392   00D6DE  6E01               	movwf	?___fpclassifyf^0,c
  5393   00D6E0                     l1212:
  5394   00D6E0  0012               	return		;funcret
  5395   00D6E2                     __end_of___fpclassifyf:
  5396                           	callstack 0
  5397                           
  5398 ;; *************** function ___fltol *****************
  5399 ;; Defined at:
  5400 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fltol.c"
  5401 ;; Parameters:    Size  Location     Type
  5402 ;;  f1              4    0[COMRAM] int 
  5403 ;; Auto vars:     Size  Location     Type
  5404 ;;  exp1            1    9[COMRAM] unsigned char 
  5405 ;;  sign1           1    8[COMRAM] unsigned char 
  5406 ;; Return value:  Size  Location     Type
  5407 ;;                  4    0[COMRAM] long 
  5408 ;; Registers used:
  5409 ;;		wreg, status,2, status,0
  5410 ;; Tracked objects:
  5411 ;;		On entry : 0/0
  5412 ;;		On exit  : 0/0
  5413 ;;		Unchanged: 0/0
  5414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5415 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5416 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5417 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5418 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5419 ;;Total ram usage:       10 bytes
  5420 ;; Hardware stack levels used: 1
  5421 ;; This function calls:
  5422 ;;		Nothing
  5423 ;; This function is called by:
  5424 ;;		_efgtoa
  5425 ;; This function uses a non-reentrant model
  5426 ;;
  5427                           
  5428                           	psect	text15
  5429   00D7E6                     __ptext15:
  5430                           	callstack 0
  5431   00D7E6                     ___fltol:
  5432                           	callstack 26
  5433   00D7E6  3403               	rlcf	(___fltol@f1+2)^0,w,c
  5434   00D7E8  3404               	rlcf	(___fltol@f1+3)^0,w,c
  5435   00D7EA  6E0A               	movwf	___fltol@exp1^0,c
  5436   00D7EC  500A               	movf	___fltol@exp1^0,w,c
  5437   00D7EE  A4D8               	btfss	status,2,c
  5438   00D7F0  EFFC  F06B         	goto	u3651
  5439   00D7F4  EFFE  F06B         	goto	u3650
  5440   00D7F8                     u3651:
  5441   00D7F8  EF08  F06C         	goto	l3723
  5442   00D7FC                     u3650:
  5443   00D7FC                     l3719:
  5444   00D7FC  0E00               	movlw	0
  5445   00D7FE  6E01               	movwf	?___fltol^0,c
  5446   00D800  0E00               	movlw	0
  5447   00D802  6E02               	movwf	(?___fltol+1)^0,c
  5448   00D804  0E00               	movlw	0
  5449   00D806  6E03               	movwf	(?___fltol+2)^0,c
  5450   00D808  0E00               	movlw	0
  5451   00D80A  6E04               	movwf	(?___fltol+3)^0,c
  5452   00D80C  EF75  F06C         	goto	l647
  5453   00D810                     l3723:
  5454   00D810  C001  F005         	movff	___fltol@f1,??___fltol
  5455   00D814  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  5456   00D818  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  5457   00D81C  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  5458   00D820  0E20               	movlw	32
  5459   00D822  EF18  F06C         	goto	u3660
  5460   00D826                     u3665:
  5461   00D826  90D8               	bcf	status,0,c
  5462   00D828  3208               	rrcf	(??___fltol+3)^0,f,c
  5463   00D82A  3207               	rrcf	(??___fltol+2)^0,f,c
  5464   00D82C  3206               	rrcf	(??___fltol+1)^0,f,c
  5465   00D82E  3205               	rrcf	??___fltol^0,f,c
  5466   00D830                     u3660:
  5467   00D830  2EE8               	decfsz	wreg,f,c
  5468   00D832  EF13  F06C         	goto	u3665
  5469   00D836  5005               	movf	??___fltol^0,w,c
  5470   00D838  6E09               	movwf	___fltol@sign1^0,c
  5471   00D83A  8E03               	bsf	(___fltol@f1+2)^0,7,c
  5472   00D83C  0EFF               	movlw	255
  5473   00D83E  1601               	andwf	___fltol@f1^0,f,c
  5474   00D840  0EFF               	movlw	255
  5475   00D842  1602               	andwf	(___fltol@f1+1)^0,f,c
  5476   00D844  0EFF               	movlw	255
  5477   00D846  1603               	andwf	(___fltol@f1+2)^0,f,c
  5478   00D848  0E00               	movlw	0
  5479   00D84A  1604               	andwf	(___fltol@f1+3)^0,f,c
  5480   00D84C  0E96               	movlw	150
  5481   00D84E  5E0A               	subwf	___fltol@exp1^0,f,c
  5482   00D850  BE0A               	btfsc	___fltol@exp1^0,7,c
  5483   00D852  EF2F  F06C         	goto	u3670
  5484   00D856  EF2D  F06C         	goto	u3671
  5485   00D85A                     u3671:
  5486   00D85A  EF45  F06C         	goto	l3743
  5487   00D85E                     u3670:
  5488   00D85E  500A               	movf	___fltol@exp1^0,w,c
  5489   00D860  0A80               	xorlw	128
  5490   00D862  0F97               	addlw	151
  5491   00D864  B0D8               	btfsc	status,0,c
  5492   00D866  EF37  F06C         	goto	u3681
  5493   00D86A  EF39  F06C         	goto	u3680
  5494   00D86E                     u3681:
  5495   00D86E  EF3B  F06C         	goto	l3739
  5496   00D872                     u3680:
  5497   00D872  EFFE  F06B         	goto	l3719
  5498   00D876                     l3739:
  5499   00D876  90D8               	bcf	status,0,c
  5500   00D878  3204               	rrcf	(___fltol@f1+3)^0,f,c
  5501   00D87A  3203               	rrcf	(___fltol@f1+2)^0,f,c
  5502   00D87C  3202               	rrcf	(___fltol@f1+1)^0,f,c
  5503   00D87E  3201               	rrcf	___fltol@f1^0,f,c
  5504   00D880  3E0A               	incfsz	___fltol@exp1^0,f,c
  5505   00D882  EF3B  F06C         	goto	l3739
  5506   00D886  EF5D  F06C         	goto	l3753
  5507   00D88A                     l3743:
  5508   00D88A  0E1F               	movlw	31
  5509   00D88C  640A               	cpfsgt	___fltol@exp1^0,c
  5510   00D88E  EF4B  F06C         	goto	u3691
  5511   00D892  EF4D  F06C         	goto	u3690
  5512   00D896                     u3691:
  5513   00D896  EF55  F06C         	goto	l3751
  5514   00D89A                     u3690:
  5515   00D89A  EFFE  F06B         	goto	l3719
  5516   00D89E                     l3749:
  5517   00D89E  90D8               	bcf	status,0,c
  5518   00D8A0  3601               	rlcf	___fltol@f1^0,f,c
  5519   00D8A2  3602               	rlcf	(___fltol@f1+1)^0,f,c
  5520   00D8A4  3603               	rlcf	(___fltol@f1+2)^0,f,c
  5521   00D8A6  3604               	rlcf	(___fltol@f1+3)^0,f,c
  5522   00D8A8  060A               	decf	___fltol@exp1^0,f,c
  5523   00D8AA                     l3751:
  5524   00D8AA  500A               	movf	___fltol@exp1^0,w,c
  5525   00D8AC  A4D8               	btfss	status,2,c
  5526   00D8AE  EF5B  F06C         	goto	u3701
  5527   00D8B2  EF5D  F06C         	goto	u3700
  5528   00D8B6                     u3701:
  5529   00D8B6  EF4F  F06C         	goto	l3749
  5530   00D8BA                     u3700:
  5531   00D8BA                     l3753:
  5532   00D8BA  5009               	movf	___fltol@sign1^0,w,c
  5533   00D8BC  B4D8               	btfsc	status,2,c
  5534   00D8BE  EF63  F06C         	goto	u3711
  5535   00D8C2  EF65  F06C         	goto	u3710
  5536   00D8C6                     u3711:
  5537   00D8C6  EF6D  F06C         	goto	l3757
  5538   00D8CA                     u3710:
  5539   00D8CA  1E04               	comf	(___fltol@f1+3)^0,f,c
  5540   00D8CC  1E03               	comf	(___fltol@f1+2)^0,f,c
  5541   00D8CE  1E02               	comf	(___fltol@f1+1)^0,f,c
  5542   00D8D0  6C01               	negf	___fltol@f1^0,c
  5543   00D8D2  0E00               	movlw	0
  5544   00D8D4  2202               	addwfc	(___fltol@f1+1)^0,f,c
  5545   00D8D6  2203               	addwfc	(___fltol@f1+2)^0,f,c
  5546   00D8D8  2204               	addwfc	(___fltol@f1+3)^0,f,c
  5547   00D8DA                     l3757:
  5548   00D8DA  C001  F001         	movff	___fltol@f1,?___fltol
  5549   00D8DE  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  5550   00D8E2  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  5551   00D8E6  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  5552   00D8EA                     l647:
  5553   00D8EA  0012               	return		;funcret
  5554   00D8EC                     __end_of___fltol:
  5555                           	callstack 0
  5556                           
  5557 ;; *************** function ___flsub *****************
  5558 ;; Defined at:
  5559 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  5560 ;; Parameters:    Size  Location     Type
  5561 ;;  b               4   25[COMRAM] long 
  5562 ;;  a               4   29[COMRAM] long 
  5563 ;; Auto vars:     Size  Location     Type
  5564 ;;		None
  5565 ;; Return value:  Size  Location     Type
  5566 ;;                  4   25[COMRAM] long 
  5567 ;; Registers used:
  5568 ;;		wreg, status,2, status,0, cstack
  5569 ;; Tracked objects:
  5570 ;;		On entry : 0/0
  5571 ;;		On exit  : 0/0
  5572 ;;		Unchanged: 0/0
  5573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5574 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5577 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5578 ;;Total ram usage:        8 bytes
  5579 ;; Hardware stack levels used: 1
  5580 ;; Hardware stack levels required when called: 1
  5581 ;; This function calls:
  5582 ;;		___fladd
  5583 ;; This function is called by:
  5584 ;;		_efgtoa
  5585 ;; This function uses a non-reentrant model
  5586 ;;
  5587                           
  5588                           	psect	text16
  5589   00CD5A                     __ptext16:
  5590                           	callstack 0
  5591   00CD5A                     ___flsub:
  5592                           	callstack 25
  5593   00CD5A  0E00               	movlw	0
  5594   00CD5C  1A1E               	xorwf	___flsub@a^0,f,c
  5595   00CD5E  0E00               	movlw	0
  5596   00CD60  1A1F               	xorwf	(___flsub@a+1)^0,f,c
  5597   00CD62  0E00               	movlw	0
  5598   00CD64  1A20               	xorwf	(___flsub@a+2)^0,f,c
  5599   00CD66  0E80               	movlw	128
  5600   00CD68  1A21               	xorwf	(___flsub@a+3)^0,f,c
  5601   00CD6A  C01A  F001         	movff	___flsub@b,___fladd@b
  5602   00CD6E  C01B  F002         	movff	___flsub@b+1,___fladd@b+1
  5603   00CD72  C01C  F003         	movff	___flsub@b+2,___fladd@b+2
  5604   00CD76  C01D  F004         	movff	___flsub@b+3,___fladd@b+3
  5605   00CD7A  C01E  F005         	movff	___flsub@a,___fladd@a
  5606   00CD7E  C01F  F006         	movff	___flsub@a+1,___fladd@a+1
  5607   00CD82  C020  F007         	movff	___flsub@a+2,___fladd@a+2
  5608   00CD86  C021  F008         	movff	___flsub@a+3,___fladd@a+3
  5609   00CD8A  ECB6  F076         	call	___fladd	;wreg free
  5610   00CD8E  C001  F01A         	movff	?___fladd,?___flsub
  5611   00CD92  C002  F01B         	movff	?___fladd+1,?___flsub+1
  5612   00CD96  C003  F01C         	movff	?___fladd+2,?___flsub+2
  5613   00CD9A  C004  F01D         	movff	?___fladd+3,?___flsub+3
  5614   00CD9E  0012               	return		;funcret
  5615   00CDA0                     __end_of___flsub:
  5616                           	callstack 0
  5617                           
  5618 ;; *************** function ___fladd *****************
  5619 ;; Defined at:
  5620 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  5621 ;; Parameters:    Size  Location     Type
  5622 ;;  b               4    0[COMRAM] long 
  5623 ;;  a               4    4[COMRAM] long 
  5624 ;; Auto vars:     Size  Location     Type
  5625 ;;  grs             1   15[COMRAM] unsigned char 
  5626 ;;  bexp            1   14[COMRAM] unsigned char 
  5627 ;;  aexp            1   13[COMRAM] unsigned char 
  5628 ;;  signs           1   12[COMRAM] unsigned char 
  5629 ;; Return value:  Size  Location     Type
  5630 ;;                  4    0[COMRAM] unsigned char 
  5631 ;; Registers used:
  5632 ;;		wreg, status,2, status,0
  5633 ;; Tracked objects:
  5634 ;;		On entry : 0/0
  5635 ;;		On exit  : 0/0
  5636 ;;		Unchanged: 0/0
  5637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5638 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5639 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5640 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5641 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5642 ;;Total ram usage:       16 bytes
  5643 ;; Hardware stack levels used: 1
  5644 ;; This function calls:
  5645 ;;		Nothing
  5646 ;; This function is called by:
  5647 ;;		___flsub
  5648 ;;		_efgtoa
  5649 ;; This function uses a non-reentrant model
  5650 ;;
  5651                           
  5652                           	psect	text17
  5653   00ED6C                     __ptext17:
  5654                           	callstack 0
  5655   00ED6C                     ___fladd:
  5656                           	callstack 25
  5657   00ED6C  5004               	movf	(___fladd@b+3)^0,w,c
  5658   00ED6E  0B80               	andlw	128
  5659   00ED70  6E0D               	movwf	___fladd@signs^0,c
  5660   00ED72  5004               	movf	(___fladd@b+3)^0,w,c
  5661   00ED74  2404               	addwf	(___fladd@b+3)^0,w,c
  5662   00ED76  6E0F               	movwf	___fladd@bexp^0,c
  5663   00ED78  AE03               	btfss	(___fladd@b+2)^0,7,c
  5664   00ED7A  EFC1  F076         	goto	u2561
  5665   00ED7E  EFC3  F076         	goto	u2560
  5666   00ED82                     u2561:
  5667   00ED82  EFC4  F076         	goto	l3095
  5668   00ED86                     u2560:
  5669   00ED86  800F               	bsf	___fladd@bexp^0,0,c
  5670   00ED88                     l3095:
  5671   00ED88  500F               	movf	___fladd@bexp^0,w,c
  5672   00ED8A  B4D8               	btfsc	status,2,c
  5673   00ED8C  EFCA  F076         	goto	u2571
  5674   00ED90  EFCC  F076         	goto	u2570
  5675   00ED94                     u2571:
  5676   00ED94  EFE1  F076         	goto	l3105
  5677   00ED98                     u2570:
  5678   00ED98  280F               	incf	___fladd@bexp^0,w,c
  5679   00ED9A  A4D8               	btfss	status,2,c
  5680   00ED9C  EFD2  F076         	goto	u2581
  5681   00EDA0  EFD4  F076         	goto	u2580
  5682   00EDA4                     u2581:
  5683   00EDA4  EFDC  F076         	goto	l3101
  5684   00EDA8                     u2580:
  5685   00EDA8  0E00               	movlw	0
  5686   00EDAA  6E01               	movwf	___fladd@b^0,c
  5687   00EDAC  0E00               	movlw	0
  5688   00EDAE  6E02               	movwf	(___fladd@b+1)^0,c
  5689   00EDB0  0E00               	movlw	0
  5690   00EDB2  6E03               	movwf	(___fladd@b+2)^0,c
  5691   00EDB4  0E00               	movlw	0
  5692   00EDB6  6E04               	movwf	(___fladd@b+3)^0,c
  5693   00EDB8                     l3101:
  5694   00EDB8  8E03               	bsf	(___fladd@b+2)^0,7,c
  5695   00EDBA  0E00               	movlw	0
  5696   00EDBC  6E04               	movwf	(___fladd@b+3)^0,c
  5697   00EDBE  EFE9  F076         	goto	l3107
  5698   00EDC2                     l3105:
  5699   00EDC2  0E00               	movlw	0
  5700   00EDC4  6E01               	movwf	___fladd@b^0,c
  5701   00EDC6  0E00               	movlw	0
  5702   00EDC8  6E02               	movwf	(___fladd@b+1)^0,c
  5703   00EDCA  0E00               	movlw	0
  5704   00EDCC  6E03               	movwf	(___fladd@b+2)^0,c
  5705   00EDCE  0E00               	movlw	0
  5706   00EDD0  6E04               	movwf	(___fladd@b+3)^0,c
  5707   00EDD2                     l3107:
  5708   00EDD2  5008               	movf	(___fladd@a+3)^0,w,c
  5709   00EDD4  0B80               	andlw	128
  5710   00EDD6  6E0E               	movwf	___fladd@aexp^0,c
  5711   00EDD8  500D               	movf	___fladd@signs^0,w,c
  5712   00EDDA  180E               	xorwf	___fladd@aexp^0,w,c
  5713   00EDDC  B4D8               	btfsc	status,2,c
  5714   00EDDE  EFF3  F076         	goto	u2591
  5715   00EDE2  EFF5  F076         	goto	u2590
  5716   00EDE6                     u2591:
  5717   00EDE6  EFF6  F076         	goto	l3113
  5718   00EDEA                     u2590:
  5719   00EDEA  8C0D               	bsf	___fladd@signs^0,6,c
  5720   00EDEC                     l3113:
  5721   00EDEC  5008               	movf	(___fladd@a+3)^0,w,c
  5722   00EDEE  2408               	addwf	(___fladd@a+3)^0,w,c
  5723   00EDF0  6E0E               	movwf	___fladd@aexp^0,c
  5724   00EDF2  AE07               	btfss	(___fladd@a+2)^0,7,c
  5725   00EDF4  EFFE  F076         	goto	u2601
  5726   00EDF8  EF00  F077         	goto	u2600
  5727   00EDFC                     u2601:
  5728   00EDFC  EF01  F077         	goto	l3119
  5729   00EE00                     u2600:
  5730   00EE00  800E               	bsf	___fladd@aexp^0,0,c
  5731   00EE02                     l3119:
  5732   00EE02  500E               	movf	___fladd@aexp^0,w,c
  5733   00EE04  B4D8               	btfsc	status,2,c
  5734   00EE06  EF07  F077         	goto	u2611
  5735   00EE0A  EF09  F077         	goto	u2610
  5736   00EE0E                     u2611:
  5737   00EE0E  EF1E  F077         	goto	l3129
  5738   00EE12                     u2610:
  5739   00EE12  280E               	incf	___fladd@aexp^0,w,c
  5740   00EE14  A4D8               	btfss	status,2,c
  5741   00EE16  EF0F  F077         	goto	u2621
  5742   00EE1A  EF11  F077         	goto	u2620
  5743   00EE1E                     u2621:
  5744   00EE1E  EF19  F077         	goto	l3125
  5745   00EE22                     u2620:
  5746   00EE22  0E00               	movlw	0
  5747   00EE24  6E05               	movwf	___fladd@a^0,c
  5748   00EE26  0E00               	movlw	0
  5749   00EE28  6E06               	movwf	(___fladd@a+1)^0,c
  5750   00EE2A  0E00               	movlw	0
  5751   00EE2C  6E07               	movwf	(___fladd@a+2)^0,c
  5752   00EE2E  0E00               	movlw	0
  5753   00EE30  6E08               	movwf	(___fladd@a+3)^0,c
  5754   00EE32                     l3125:
  5755   00EE32  8E07               	bsf	(___fladd@a+2)^0,7,c
  5756   00EE34  0E00               	movlw	0
  5757   00EE36  6E08               	movwf	(___fladd@a+3)^0,c
  5758   00EE38  EF26  F077         	goto	l3131
  5759   00EE3C                     l3129:
  5760   00EE3C  0E00               	movlw	0
  5761   00EE3E  6E05               	movwf	___fladd@a^0,c
  5762   00EE40  0E00               	movlw	0
  5763   00EE42  6E06               	movwf	(___fladd@a+1)^0,c
  5764   00EE44  0E00               	movlw	0
  5765   00EE46  6E07               	movwf	(___fladd@a+2)^0,c
  5766   00EE48  0E00               	movlw	0
  5767   00EE4A  6E08               	movwf	(___fladd@a+3)^0,c
  5768   00EE4C                     l3131:
  5769   00EE4C  500F               	movf	___fladd@bexp^0,w,c
  5770   00EE4E  5C0E               	subwf	___fladd@aexp^0,w,c
  5771   00EE50  B0D8               	btfsc	status,0,c
  5772   00EE52  EF2D  F077         	goto	u2631
  5773   00EE56  EF2F  F077         	goto	u2630
  5774   00EE5A                     u2631:
  5775   00EE5A  EF56  F077         	goto	l3167
  5776   00EE5E                     u2630:
  5777   00EE5E  AC0D               	btfss	___fladd@signs^0,6,c
  5778   00EE60  EF34  F077         	goto	u2641
  5779   00EE64  EF36  F077         	goto	u2640
  5780   00EE68                     u2641:
  5781   00EE68  EF38  F077         	goto	l3137
  5782   00EE6C                     u2640:
  5783   00EE6C  0E80               	movlw	128
  5784   00EE6E  1A0D               	xorwf	___fladd@signs^0,f,c
  5785   00EE70                     l3137:
  5786   00EE70  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  5787   00EE74  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5788   00EE78  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  5789   00EE7C  C001  F010         	movff	___fladd@b,___fladd@grs
  5790   00EE80  C005  F001         	movff	___fladd@a,___fladd@b
  5791   00EE84  C010  F005         	movff	___fladd@grs,___fladd@a
  5792   00EE88  C002  F010         	movff	___fladd@b+1,___fladd@grs
  5793   00EE8C  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  5794   00EE90  C010  F006         	movff	___fladd@grs,___fladd@a+1
  5795   00EE94  C003  F010         	movff	___fladd@b+2,___fladd@grs
  5796   00EE98  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  5797   00EE9C  C010  F007         	movff	___fladd@grs,___fladd@a+2
  5798   00EEA0  C004  F010         	movff	___fladd@b+3,___fladd@grs
  5799   00EEA4  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  5800   00EEA8  C010  F008         	movff	___fladd@grs,___fladd@a+3
  5801   00EEAC                     l3167:
  5802   00EEAC  0E00               	movlw	0
  5803   00EEAE  6E10               	movwf	___fladd@grs^0,c
  5804   00EEB0  500F               	movf	___fladd@bexp^0,w,c
  5805   00EEB2  C00E  F009         	movff	___fladd@aexp,??___fladd
  5806   00EEB6  6A0A               	clrf	(??___fladd+1)^0,c
  5807   00EEB8  5E09               	subwf	??___fladd^0,f,c
  5808   00EEBA  0E00               	movlw	0
  5809   00EEBC  5A0A               	subwfb	(??___fladd+1)^0,f,c
  5810   00EEBE  BE0A               	btfsc	(??___fladd+1)^0,7,c
  5811   00EEC0  EF6B  F077         	goto	u2651
  5812   00EEC4  500A               	movf	(??___fladd+1)^0,w,c
  5813   00EEC6  E109               	bnz	u2650
  5814   00EEC8  0E1A               	movlw	26
  5815   00EECA  5C09               	subwf	??___fladd^0,w,c
  5816   00EECC  A0D8               	btfss	status,0,c
  5817   00EECE  EF6B  F077         	goto	u2651
  5818   00EED2  EF6D  F077         	goto	u2650
  5819   00EED6                     u2651:
  5820   00EED6  EFA4  F077         	goto	l879
  5821   00EEDA                     u2650:
  5822   00EEDA  5001               	movf	___fladd@b^0,w,c
  5823   00EEDC  1002               	iorwf	(___fladd@b+1)^0,w,c
  5824   00EEDE  1003               	iorwf	(___fladd@b+2)^0,w,c
  5825   00EEE0  1004               	iorwf	(___fladd@b+3)^0,w,c
  5826   00EEE2  A4D8               	btfss	status,2,c
  5827   00EEE4  EF76  F077         	goto	u2661
  5828   00EEE8  EF79  F077         	goto	u2660
  5829   00EEEC                     u2661:
  5830   00EEEC  0E01               	movlw	1
  5831   00EEEE  EF7A  F077         	goto	u2670
  5832   00EEF2                     u2660:
  5833   00EEF2  0E00               	movlw	0
  5834   00EEF4                     u2670:
  5835   00EEF4  6E10               	movwf	___fladd@grs^0,c
  5836   00EEF6  0E00               	movlw	0
  5837   00EEF8  6E01               	movwf	___fladd@b^0,c
  5838   00EEFA  0E00               	movlw	0
  5839   00EEFC  6E02               	movwf	(___fladd@b+1)^0,c
  5840   00EEFE  0E00               	movlw	0
  5841   00EF00  6E03               	movwf	(___fladd@b+2)^0,c
  5842   00EF02  0E00               	movlw	0
  5843   00EF04  6E04               	movwf	(___fladd@b+3)^0,c
  5844   00EF06  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5845   00EF0A  EFAD  F077         	goto	l878
  5846   00EF0E                     l880:
  5847   00EF0E  A010               	btfss	___fladd@grs^0,0,c
  5848   00EF10  EF8C  F077         	goto	u2681
  5849   00EF14  EF8E  F077         	goto	u2680
  5850   00EF18                     u2681:
  5851   00EF18  EF94  F077         	goto	l3179
  5852   00EF1C                     u2680:
  5853   00EF1C  90D8               	bcf	status,0,c
  5854   00EF1E  3010               	rrcf	___fladd@grs^0,w,c
  5855   00EF20  0901               	iorlw	1
  5856   00EF22  6E10               	movwf	___fladd@grs^0,c
  5857   00EF24  EF96  F077         	goto	l3181
  5858   00EF28                     l3179:
  5859   00EF28  90D8               	bcf	status,0,c
  5860   00EF2A  3210               	rrcf	___fladd@grs^0,f,c
  5861   00EF2C                     l3181:
  5862   00EF2C  A001               	btfss	___fladd@b^0,0,c
  5863   00EF2E  EF9B  F077         	goto	u2691
  5864   00EF32  EF9D  F077         	goto	u2690
  5865   00EF36                     u2691:
  5866   00EF36  EF9E  F077         	goto	l3185
  5867   00EF3A                     u2690:
  5868   00EF3A  8E10               	bsf	___fladd@grs^0,7,c
  5869   00EF3C                     l3185:
  5870   00EF3C  3404               	rlcf	(___fladd@b+3)^0,w,c
  5871   00EF3E  3204               	rrcf	(___fladd@b+3)^0,f,c
  5872   00EF40  3203               	rrcf	(___fladd@b+2)^0,f,c
  5873   00EF42  3202               	rrcf	(___fladd@b+1)^0,f,c
  5874   00EF44  3201               	rrcf	___fladd@b^0,f,c
  5875   00EF46  2A0F               	incf	___fladd@bexp^0,f,c
  5876   00EF48                     l879:
  5877   00EF48  500E               	movf	___fladd@aexp^0,w,c
  5878   00EF4A  5C0F               	subwf	___fladd@bexp^0,w,c
  5879   00EF4C  A0D8               	btfss	status,0,c
  5880   00EF4E  EFAB  F077         	goto	u2701
  5881   00EF52  EFAD  F077         	goto	u2700
  5882   00EF56                     u2701:
  5883   00EF56  EF87  F077         	goto	l880
  5884   00EF5A                     u2700:
  5885   00EF5A                     l878:
  5886   00EF5A  BC0D               	btfsc	___fladd@signs^0,6,c
  5887   00EF5C  EFB2  F077         	goto	u2711
  5888   00EF60  EFB4  F077         	goto	u2710
  5889   00EF64                     u2711:
  5890   00EF64  EFF4  F077         	goto	l3213
  5891   00EF68                     u2710:
  5892   00EF68  500F               	movf	___fladd@bexp^0,w,c
  5893   00EF6A  A4D8               	btfss	status,2,c
  5894   00EF6C  EFBA  F077         	goto	u2721
  5895   00EF70  EFBC  F077         	goto	u2720
  5896   00EF74                     u2721:
  5897   00EF74  EFC6  F077         	goto	l3195
  5898   00EF78                     u2720:
  5899   00EF78  0E00               	movlw	0
  5900   00EF7A  6E01               	movwf	?___fladd^0,c
  5901   00EF7C  0E00               	movlw	0
  5902   00EF7E  6E02               	movwf	(?___fladd+1)^0,c
  5903   00EF80  0E00               	movlw	0
  5904   00EF82  6E03               	movwf	(?___fladd+2)^0,c
  5905   00EF84  0E00               	movlw	0
  5906   00EF86  6E04               	movwf	(?___fladd+3)^0,c
  5907   00EF88  EF15  F079         	goto	l887
  5908   00EF8C                     l3195:
  5909   00EF8C  5005               	movf	___fladd@a^0,w,c
  5910   00EF8E  2601               	addwf	___fladd@b^0,f,c
  5911   00EF90  5006               	movf	(___fladd@a+1)^0,w,c
  5912   00EF92  2202               	addwfc	(___fladd@b+1)^0,f,c
  5913   00EF94  5007               	movf	(___fladd@a+2)^0,w,c
  5914   00EF96  2203               	addwfc	(___fladd@b+2)^0,f,c
  5915   00EF98  5008               	movf	(___fladd@a+3)^0,w,c
  5916   00EF9A  2204               	addwfc	(___fladd@b+3)^0,f,c
  5917   00EF9C  A004               	btfss	(___fladd@b+3)^0,0,c
  5918   00EF9E  EFD3  F077         	goto	u2731
  5919   00EFA2  EFD5  F077         	goto	u2730
  5920   00EFA6                     u2731:
  5921   00EFA6  EF81  F078         	goto	l3249
  5922   00EFAA                     u2730:
  5923   00EFAA  A010               	btfss	___fladd@grs^0,0,c
  5924   00EFAC  EFDA  F077         	goto	u2741
  5925   00EFB0  EFDC  F077         	goto	u2740
  5926   00EFB4                     u2741:
  5927   00EFB4  EFE2  F077         	goto	l3203
  5928   00EFB8                     u2740:
  5929   00EFB8  90D8               	bcf	status,0,c
  5930   00EFBA  3010               	rrcf	___fladd@grs^0,w,c
  5931   00EFBC  0901               	iorlw	1
  5932   00EFBE  6E10               	movwf	___fladd@grs^0,c
  5933   00EFC0  EFE4  F077         	goto	l3205
  5934   00EFC4                     l3203:
  5935   00EFC4  90D8               	bcf	status,0,c
  5936   00EFC6  3210               	rrcf	___fladd@grs^0,f,c
  5937   00EFC8                     l3205:
  5938   00EFC8  A001               	btfss	___fladd@b^0,0,c
  5939   00EFCA  EFE9  F077         	goto	u2751
  5940   00EFCE  EFEB  F077         	goto	u2750
  5941   00EFD2                     u2751:
  5942   00EFD2  EFEC  F077         	goto	l3209
  5943   00EFD6                     u2750:
  5944   00EFD6  8E10               	bsf	___fladd@grs^0,7,c
  5945   00EFD8                     l3209:
  5946   00EFD8  3404               	rlcf	(___fladd@b+3)^0,w,c
  5947   00EFDA  3204               	rrcf	(___fladd@b+3)^0,f,c
  5948   00EFDC  3203               	rrcf	(___fladd@b+2)^0,f,c
  5949   00EFDE  3202               	rrcf	(___fladd@b+1)^0,f,c
  5950   00EFE0  3201               	rrcf	___fladd@b^0,f,c
  5951   00EFE2  2A0F               	incf	___fladd@bexp^0,f,c
  5952   00EFE4  EF81  F078         	goto	l3249
  5953   00EFE8                     l3213:
  5954   00EFE8  5005               	movf	___fladd@a^0,w,c
  5955   00EFEA  5C01               	subwf	___fladd@b^0,w,c
  5956   00EFEC  5006               	movf	(___fladd@a+1)^0,w,c
  5957   00EFEE  5802               	subwfb	(___fladd@b+1)^0,w,c
  5958   00EFF0  5007               	movf	(___fladd@a+2)^0,w,c
  5959   00EFF2  5803               	subwfb	(___fladd@b+2)^0,w,c
  5960   00EFF4  5004               	movf	(___fladd@b+3)^0,w,c
  5961   00EFF6  0A80               	xorlw	128
  5962   00EFF8  6E09               	movwf	??___fladd^0,c
  5963   00EFFA  5008               	movf	(___fladd@a+3)^0,w,c
  5964   00EFFC  0A80               	xorlw	128
  5965   00EFFE  5809               	subwfb	??___fladd^0,w,c
  5966   00F000  B0D8               	btfsc	status,0,c
  5967   00F002  EF05  F078         	goto	u2761
  5968   00F006  EF07  F078         	goto	u2760
  5969   00F00A                     u2761:
  5970   00F00A  EF32  F078         	goto	l3223
  5971   00F00E                     u2760:
  5972   00F00E  5001               	movf	___fladd@b^0,w,c
  5973   00F010  5C05               	subwf	___fladd@a^0,w,c
  5974   00F012  6E09               	movwf	??___fladd^0,c
  5975   00F014  5002               	movf	(___fladd@b+1)^0,w,c
  5976   00F016  5806               	subwfb	(___fladd@a+1)^0,w,c
  5977   00F018  6E0A               	movwf	(??___fladd+1)^0,c
  5978   00F01A  5003               	movf	(___fladd@b+2)^0,w,c
  5979   00F01C  5807               	subwfb	(___fladd@a+2)^0,w,c
  5980   00F01E  6E0B               	movwf	(??___fladd+2)^0,c
  5981   00F020  5004               	movf	(___fladd@b+3)^0,w,c
  5982   00F022  5808               	subwfb	(___fladd@a+3)^0,w,c
  5983   00F024  6E0C               	movwf	(??___fladd+3)^0,c
  5984   00F026  0EFF               	movlw	255
  5985   00F028  2409               	addwf	??___fladd^0,w,c
  5986   00F02A  6E01               	movwf	___fladd@b^0,c
  5987   00F02C  0EFF               	movlw	255
  5988   00F02E  200A               	addwfc	(??___fladd+1)^0,w,c
  5989   00F030  6E02               	movwf	(___fladd@b+1)^0,c
  5990   00F032  0EFF               	movlw	255
  5991   00F034  200B               	addwfc	(??___fladd+2)^0,w,c
  5992   00F036  6E03               	movwf	(___fladd@b+2)^0,c
  5993   00F038  0EFF               	movlw	255
  5994   00F03A  200C               	addwfc	(??___fladd+3)^0,w,c
  5995   00F03C  6E04               	movwf	(___fladd@b+3)^0,c
  5996   00F03E  0E80               	movlw	128
  5997   00F040  1A0D               	xorwf	___fladd@signs^0,f,c
  5998   00F042  6C10               	negf	___fladd@grs^0,c
  5999   00F044  5010               	movf	___fladd@grs^0,w,c
  6000   00F046  A4D8               	btfss	status,2,c
  6001   00F048  EF28  F078         	goto	u2771
  6002   00F04C  EF2A  F078         	goto	u2770
  6003   00F050                     u2771:
  6004   00F050  EF3A  F078         	goto	l895
  6005   00F054                     u2770:
  6006   00F054  0E01               	movlw	1
  6007   00F056  2601               	addwf	___fladd@b^0,f,c
  6008   00F058  0E00               	movlw	0
  6009   00F05A  2202               	addwfc	(___fladd@b+1)^0,f,c
  6010   00F05C  2203               	addwfc	(___fladd@b+2)^0,f,c
  6011   00F05E  2204               	addwfc	(___fladd@b+3)^0,f,c
  6012   00F060  EF3A  F078         	goto	l895
  6013   00F064                     l3223:
  6014   00F064  5005               	movf	___fladd@a^0,w,c
  6015   00F066  5E01               	subwf	___fladd@b^0,f,c
  6016   00F068  5006               	movf	(___fladd@a+1)^0,w,c
  6017   00F06A  5A02               	subwfb	(___fladd@b+1)^0,f,c
  6018   00F06C  5007               	movf	(___fladd@a+2)^0,w,c
  6019   00F06E  5A03               	subwfb	(___fladd@b+2)^0,f,c
  6020   00F070  5008               	movf	(___fladd@a+3)^0,w,c
  6021   00F072  5A04               	subwfb	(___fladd@b+3)^0,f,c
  6022   00F074                     l895:
  6023   00F074  5001               	movf	___fladd@b^0,w,c
  6024   00F076  1002               	iorwf	(___fladd@b+1)^0,w,c
  6025   00F078  1003               	iorwf	(___fladd@b+2)^0,w,c
  6026   00F07A  1004               	iorwf	(___fladd@b+3)^0,w,c
  6027   00F07C  A4D8               	btfss	status,2,c
  6028   00F07E  EF43  F078         	goto	u2781
  6029   00F082  EF45  F078         	goto	u2780
  6030   00F086                     u2781:
  6031   00F086  EF7A  F078         	goto	l3247
  6032   00F08A                     u2780:
  6033   00F08A  5010               	movf	___fladd@grs^0,w,c
  6034   00F08C  A4D8               	btfss	status,2,c
  6035   00F08E  EF4B  F078         	goto	u2791
  6036   00F092  EF4D  F078         	goto	u2790
  6037   00F096                     u2791:
  6038   00F096  EF7A  F078         	goto	l3247
  6039   00F09A                     u2790:
  6040   00F09A  0E00               	movlw	0
  6041   00F09C  6E01               	movwf	?___fladd^0,c
  6042   00F09E  0E00               	movlw	0
  6043   00F0A0  6E02               	movwf	(?___fladd+1)^0,c
  6044   00F0A2  0E00               	movlw	0
  6045   00F0A4  6E03               	movwf	(?___fladd+2)^0,c
  6046   00F0A6  0E00               	movlw	0
  6047   00F0A8  6E04               	movwf	(?___fladd+3)^0,c
  6048   00F0AA  EF15  F079         	goto	l887
  6049   00F0AE                     l3231:
  6050   00F0AE  90D8               	bcf	status,0,c
  6051   00F0B0  3601               	rlcf	___fladd@b^0,f,c
  6052   00F0B2  3602               	rlcf	(___fladd@b+1)^0,f,c
  6053   00F0B4  3603               	rlcf	(___fladd@b+2)^0,f,c
  6054   00F0B6  3604               	rlcf	(___fladd@b+3)^0,f,c
  6055   00F0B8  AE10               	btfss	___fladd@grs^0,7,c
  6056   00F0BA  EF61  F078         	goto	u2801
  6057   00F0BE  EF63  F078         	goto	u2800
  6058   00F0C2                     u2801:
  6059   00F0C2  EF64  F078         	goto	l3237
  6060   00F0C6                     u2800:
  6061   00F0C6  8001               	bsf	___fladd@b^0,0,c
  6062   00F0C8                     l3237:
  6063   00F0C8  A010               	btfss	___fladd@grs^0,0,c
  6064   00F0CA  EF69  F078         	goto	u2811
  6065   00F0CE  EF6B  F078         	goto	u2810
  6066   00F0D2                     u2811:
  6067   00F0D2  EF6F  F078         	goto	l3241
  6068   00F0D6                     u2810:
  6069   00F0D6  80D8               	bsf	status,0,c
  6070   00F0D8  3610               	rlcf	___fladd@grs^0,f,c
  6071   00F0DA  EF71  F078         	goto	l3243
  6072   00F0DE                     l3241:
  6073   00F0DE  90D8               	bcf	status,0,c
  6074   00F0E0  3610               	rlcf	___fladd@grs^0,f,c
  6075   00F0E2                     l3243:
  6076   00F0E2  500F               	movf	___fladd@bexp^0,w,c
  6077   00F0E4  B4D8               	btfsc	status,2,c
  6078   00F0E6  EF77  F078         	goto	u2821
  6079   00F0EA  EF79  F078         	goto	u2820
  6080   00F0EE                     u2821:
  6081   00F0EE  EF7A  F078         	goto	l3247
  6082   00F0F2                     u2820:
  6083   00F0F2  060F               	decf	___fladd@bexp^0,f,c
  6084   00F0F4                     l3247:
  6085   00F0F4  AE03               	btfss	(___fladd@b+2)^0,7,c
  6086   00F0F6  EF7F  F078         	goto	u2831
  6087   00F0FA  EF81  F078         	goto	u2830
  6088   00F0FE                     u2831:
  6089   00F0FE  EF57  F078         	goto	l3231
  6090   00F102                     u2830:
  6091   00F102                     l3249:
  6092   00F102  0E00               	movlw	0
  6093   00F104  6E0E               	movwf	___fladd@aexp^0,c
  6094   00F106  AE10               	btfss	___fladd@grs^0,7,c
  6095   00F108  EF88  F078         	goto	u2841
  6096   00F10C  EF8A  F078         	goto	u2840
  6097   00F110                     u2841:
  6098   00F110  EFA2  F078         	goto	l904
  6099   00F114                     u2840:
  6100   00F114  C010  F009         	movff	___fladd@grs,??___fladd
  6101   00F118  0E7F               	movlw	127
  6102   00F11A  1609               	andwf	??___fladd^0,f,c
  6103   00F11C  B4D8               	btfsc	status,2,c
  6104   00F11E  EF93  F078         	goto	u2851
  6105   00F122  EF95  F078         	goto	u2850
  6106   00F126                     u2851:
  6107   00F126  EF99  F078         	goto	l905
  6108   00F12A                     u2850:
  6109   00F12A                     l3255:
  6110   00F12A  0E01               	movlw	1
  6111   00F12C  6E0E               	movwf	___fladd@aexp^0,c
  6112   00F12E  EFA2  F078         	goto	l904
  6113   00F132                     l905:
  6114   00F132  A001               	btfss	___fladd@b^0,0,c
  6115   00F134  EF9E  F078         	goto	u2861
  6116   00F138  EFA0  F078         	goto	u2860
  6117   00F13C                     u2861:
  6118   00F13C  EFA2  F078         	goto	l904
  6119   00F140                     u2860:
  6120   00F140  EF95  F078         	goto	l3255
  6121   00F144                     l904:
  6122   00F144  500E               	movf	___fladd@aexp^0,w,c
  6123   00F146  B4D8               	btfsc	status,2,c
  6124   00F148  EFA8  F078         	goto	u2871
  6125   00F14C  EFAA  F078         	goto	u2870
  6126   00F150                     u2871:
  6127   00F150  EFD5  F078         	goto	l3267
  6128   00F154                     u2870:
  6129   00F154  0E01               	movlw	1
  6130   00F156  2601               	addwf	___fladd@b^0,f,c
  6131   00F158  0E00               	movlw	0
  6132   00F15A  2202               	addwfc	(___fladd@b+1)^0,f,c
  6133   00F15C  2203               	addwfc	(___fladd@b+2)^0,f,c
  6134   00F15E  2204               	addwfc	(___fladd@b+3)^0,f,c
  6135   00F160  A004               	btfss	(___fladd@b+3)^0,0,c
  6136   00F162  EFB5  F078         	goto	u2881
  6137   00F166  EFB7  F078         	goto	u2880
  6138   00F16A                     u2881:
  6139   00F16A  EFD5  F078         	goto	l3267
  6140   00F16E                     u2880:
  6141   00F16E  C001  F009         	movff	___fladd@b,??___fladd
  6142   00F172  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  6143   00F176  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  6144   00F17A  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  6145   00F17E  340C               	rlcf	(??___fladd+3)^0,w,c
  6146   00F180  320C               	rrcf	(??___fladd+3)^0,f,c
  6147   00F182  320B               	rrcf	(??___fladd+2)^0,f,c
  6148   00F184  320A               	rrcf	(??___fladd+1)^0,f,c
  6149   00F186  3209               	rrcf	??___fladd^0,f,c
  6150   00F188  C009  F001         	movff	??___fladd,___fladd@b
  6151   00F18C  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  6152   00F190  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  6153   00F194  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  6154   00F198  280F               	incf	___fladd@bexp^0,w,c
  6155   00F19A  B4D8               	btfsc	status,2,c
  6156   00F19C  EFD2  F078         	goto	u2891
  6157   00F1A0  EFD4  F078         	goto	u2890
  6158   00F1A4                     u2891:
  6159   00F1A4  EFD5  F078         	goto	l3267
  6160   00F1A8                     u2890:
  6161   00F1A8  2A0F               	incf	___fladd@bexp^0,f,c
  6162   00F1AA                     l3267:
  6163   00F1AA  280F               	incf	___fladd@bexp^0,w,c
  6164   00F1AC  B4D8               	btfsc	status,2,c
  6165   00F1AE  EFDB  F078         	goto	u2901
  6166   00F1B2  EFDD  F078         	goto	u2900
  6167   00F1B6                     u2901:
  6168   00F1B6  EFE5  F078         	goto	l3271
  6169   00F1BA                     u2900:
  6170   00F1BA  500F               	movf	___fladd@bexp^0,w,c
  6171   00F1BC  A4D8               	btfss	status,2,c
  6172   00F1BE  EFE3  F078         	goto	u2911
  6173   00F1C2  EFE5  F078         	goto	u2910
  6174   00F1C6                     u2911:
  6175   00F1C6  EFF7  F078         	goto	l3275
  6176   00F1CA                     u2910:
  6177   00F1CA                     l3271:
  6178   00F1CA  0E00               	movlw	0
  6179   00F1CC  6E01               	movwf	___fladd@b^0,c
  6180   00F1CE  0E00               	movlw	0
  6181   00F1D0  6E02               	movwf	(___fladd@b+1)^0,c
  6182   00F1D2  0E00               	movlw	0
  6183   00F1D4  6E03               	movwf	(___fladd@b+2)^0,c
  6184   00F1D6  0E00               	movlw	0
  6185   00F1D8  6E04               	movwf	(___fladd@b+3)^0,c
  6186   00F1DA  500F               	movf	___fladd@bexp^0,w,c
  6187   00F1DC  A4D8               	btfss	status,2,c
  6188   00F1DE  EFF3  F078         	goto	u2921
  6189   00F1E2  EFF5  F078         	goto	u2920
  6190   00F1E6                     u2921:
  6191   00F1E6  EFF7  F078         	goto	l3275
  6192   00F1EA                     u2920:
  6193   00F1EA  0E00               	movlw	0
  6194   00F1EC  6E0D               	movwf	___fladd@signs^0,c
  6195   00F1EE                     l3275:
  6196   00F1EE  A00F               	btfss	___fladd@bexp^0,0,c
  6197   00F1F0  EFFC  F078         	goto	u2931
  6198   00F1F4  EFFE  F078         	goto	u2930
  6199   00F1F8                     u2931:
  6200   00F1F8  EF01  F079         	goto	l3279
  6201   00F1FC                     u2930:
  6202   00F1FC  8E03               	bsf	(___fladd@b+2)^0,7,c
  6203   00F1FE  EF02  F079         	goto	l3281
  6204   00F202                     l3279:
  6205   00F202  9E03               	bcf	(___fladd@b+2)^0,7,c
  6206   00F204                     l3281:
  6207   00F204  90D8               	bcf	status,0,c
  6208   00F206  300F               	rrcf	___fladd@bexp^0,w,c
  6209   00F208  6E04               	movwf	(___fladd@b+3)^0,c
  6210   00F20A  AE0D               	btfss	___fladd@signs^0,7,c
  6211   00F20C  EF0A  F079         	goto	u2941
  6212   00F210  EF0C  F079         	goto	u2940
  6213   00F214                     u2941:
  6214   00F214  EF0D  F079         	goto	l3287
  6215   00F218                     u2940:
  6216   00F218  8E04               	bsf	(___fladd@b+3)^0,7,c
  6217   00F21A                     l3287:
  6218   00F21A  C001  F001         	movff	___fladd@b,?___fladd
  6219   00F21E  C002  F002         	movff	___fladd@b+1,?___fladd+1
  6220   00F222  C003  F003         	movff	___fladd@b+2,?___fladd+2
  6221   00F226  C004  F004         	movff	___fladd@b+3,?___fladd+3
  6222   00F22A                     l887:
  6223   00F22A  0012               	return		;funcret
  6224   00F22C                     __end_of___fladd:
  6225                           	callstack 0
  6226                           
  6227 ;; *************** function ___flneg *****************
  6228 ;; Defined at:
  6229 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flneg.c"
  6230 ;; Parameters:    Size  Location     Type
  6231 ;;  f1              4    0[COMRAM] unsigned char 
  6232 ;; Auto vars:     Size  Location     Type
  6233 ;;		None
  6234 ;; Return value:  Size  Location     Type
  6235 ;;                  4    0[COMRAM] unsigned char 
  6236 ;; Registers used:
  6237 ;;		wreg, status,2, status,0
  6238 ;; Tracked objects:
  6239 ;;		On entry : 0/0
  6240 ;;		On exit  : 0/0
  6241 ;;		Unchanged: 0/0
  6242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6243 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6246 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6247 ;;Total ram usage:        4 bytes
  6248 ;; Hardware stack levels used: 1
  6249 ;; This function calls:
  6250 ;;		Nothing
  6251 ;; This function is called by:
  6252 ;;		_efgtoa
  6253 ;; This function uses a non-reentrant model
  6254 ;;
  6255                           
  6256                           	psect	text18
  6257   00CB9A                     __ptext18:
  6258                           	callstack 0
  6259   00CB9A                     ___flneg:
  6260                           	callstack 26
  6261   00CB9A  5001               	movf	___flneg@f1^0,w,c
  6262   00CB9C  1002               	iorwf	(___flneg@f1+1)^0,w,c
  6263   00CB9E  1003               	iorwf	(___flneg@f1+2)^0,w,c
  6264   00CBA0  1004               	iorwf	(___flneg@f1+3)^0,w,c
  6265   00CBA2  B4D8               	btfsc	status,2,c
  6266   00CBA4  EFD6  F065         	goto	u3641
  6267   00CBA8  EFD8  F065         	goto	u3640
  6268   00CBAC                     u3641:
  6269   00CBAC  EFE0  F065         	goto	l3713
  6270   00CBB0                     u3640:
  6271   00CBB0  0E00               	movlw	0
  6272   00CBB2  1A01               	xorwf	___flneg@f1^0,f,c
  6273   00CBB4  0E00               	movlw	0
  6274   00CBB6  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  6275   00CBB8  0E00               	movlw	0
  6276   00CBBA  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  6277   00CBBC  0E80               	movlw	128
  6278   00CBBE  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  6279   00CBC0                     l3713:
  6280   00CBC0  C001  F001         	movff	___flneg@f1,?___flneg
  6281   00CBC4  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  6282   00CBC8  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  6283   00CBCC  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  6284   00CBD0  0012               	return		;funcret
  6285   00CBD2                     __end_of___flneg:
  6286                           	callstack 0
  6287                           
  6288 ;; *************** function ___flmul *****************
  6289 ;; Defined at:
  6290 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
  6291 ;; Parameters:    Size  Location     Type
  6292 ;;  b               4    0[COMRAM] unsigned char 
  6293 ;;  a               4    4[COMRAM] unsigned char 
  6294 ;; Auto vars:     Size  Location     Type
  6295 ;;  prod            4   19[COMRAM] struct .
  6296 ;;  grs             4   13[COMRAM] unsigned long 
  6297 ;;  temp            2   23[COMRAM] struct .
  6298 ;;  bexp            1   18[COMRAM] unsigned char 
  6299 ;;  aexp            1   17[COMRAM] unsigned char 
  6300 ;;  sign            1   12[COMRAM] unsigned char 
  6301 ;; Return value:  Size  Location     Type
  6302 ;;                  4    0[COMRAM] unsigned char 
  6303 ;; Registers used:
  6304 ;;		wreg, status,2, status,0, prodl, prodh
  6305 ;; Tracked objects:
  6306 ;;		On entry : 0/0
  6307 ;;		On exit  : 0/0
  6308 ;;		Unchanged: 0/0
  6309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6310 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6311 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6312 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6313 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6314 ;;Total ram usage:       25 bytes
  6315 ;; Hardware stack levels used: 1
  6316 ;; This function calls:
  6317 ;;		Nothing
  6318 ;; This function is called by:
  6319 ;;		_efgtoa
  6320 ;; This function uses a non-reentrant model
  6321 ;;
  6322                           
  6323                           	psect	text19
  6324   00E942                     __ptext19:
  6325                           	callstack 0
  6326   00E942                     ___flmul:
  6327                           	callstack 26
  6328   00E942  5004               	movf	(___flmul@b+3)^0,w,c
  6329   00E944  0B80               	andlw	128
  6330   00E946  6E0D               	movwf	___flmul@sign^0,c
  6331   00E948  5004               	movf	(___flmul@b+3)^0,w,c
  6332   00E94A  2404               	addwf	(___flmul@b+3)^0,w,c
  6333   00E94C  6E13               	movwf	___flmul@bexp^0,c
  6334   00E94E  AE03               	btfss	(___flmul@b+2)^0,7,c
  6335   00E950  EFAC  F074         	goto	u3251
  6336   00E954  EFAE  F074         	goto	u3250
  6337   00E958                     u3251:
  6338   00E958  EFAF  F074         	goto	l3461
  6339   00E95C                     u3250:
  6340   00E95C  8013               	bsf	___flmul@bexp^0,0,c
  6341   00E95E                     l3461:
  6342   00E95E  5013               	movf	___flmul@bexp^0,w,c
  6343   00E960  B4D8               	btfsc	status,2,c
  6344   00E962  EFB5  F074         	goto	u3261
  6345   00E966  EFB7  F074         	goto	u3260
  6346   00E96A                     u3261:
  6347   00E96A  EFCA  F074         	goto	l3469
  6348   00E96E                     u3260:
  6349   00E96E  2813               	incf	___flmul@bexp^0,w,c
  6350   00E970  A4D8               	btfss	status,2,c
  6351   00E972  EFBD  F074         	goto	u3271
  6352   00E976  EFBF  F074         	goto	u3270
  6353   00E97A                     u3271:
  6354   00E97A  EFC7  F074         	goto	l3467
  6355   00E97E                     u3270:
  6356   00E97E  0E00               	movlw	0
  6357   00E980  6E01               	movwf	___flmul@b^0,c
  6358   00E982  0E00               	movlw	0
  6359   00E984  6E02               	movwf	(___flmul@b+1)^0,c
  6360   00E986  0E00               	movlw	0
  6361   00E988  6E03               	movwf	(___flmul@b+2)^0,c
  6362   00E98A  0E00               	movlw	0
  6363   00E98C  6E04               	movwf	(___flmul@b+3)^0,c
  6364   00E98E                     l3467:
  6365   00E98E  8E03               	bsf	(___flmul@b+2)^0,7,c
  6366   00E990  EFD2  F074         	goto	l3471
  6367   00E994                     l3469:
  6368   00E994  0E00               	movlw	0
  6369   00E996  6E01               	movwf	___flmul@b^0,c
  6370   00E998  0E00               	movlw	0
  6371   00E99A  6E02               	movwf	(___flmul@b+1)^0,c
  6372   00E99C  0E00               	movlw	0
  6373   00E99E  6E03               	movwf	(___flmul@b+2)^0,c
  6374   00E9A0  0E00               	movlw	0
  6375   00E9A2  6E04               	movwf	(___flmul@b+3)^0,c
  6376   00E9A4                     l3471:
  6377   00E9A4  5008               	movf	(___flmul@a+3)^0,w,c
  6378   00E9A6  0B80               	andlw	128
  6379   00E9A8  1A0D               	xorwf	___flmul@sign^0,f,c
  6380   00E9AA  5008               	movf	(___flmul@a+3)^0,w,c
  6381   00E9AC  2408               	addwf	(___flmul@a+3)^0,w,c
  6382   00E9AE  6E12               	movwf	___flmul@aexp^0,c
  6383   00E9B0  AE07               	btfss	(___flmul@a+2)^0,7,c
  6384   00E9B2  EFDD  F074         	goto	u3281
  6385   00E9B6  EFDF  F074         	goto	u3280
  6386   00E9BA                     u3281:
  6387   00E9BA  EFE0  F074         	goto	l3479
  6388   00E9BE                     u3280:
  6389   00E9BE  8012               	bsf	___flmul@aexp^0,0,c
  6390   00E9C0                     l3479:
  6391   00E9C0  5012               	movf	___flmul@aexp^0,w,c
  6392   00E9C2  B4D8               	btfsc	status,2,c
  6393   00E9C4  EFE6  F074         	goto	u3291
  6394   00E9C8  EFE8  F074         	goto	u3290
  6395   00E9CC                     u3291:
  6396   00E9CC  EFFB  F074         	goto	l3487
  6397   00E9D0                     u3290:
  6398   00E9D0  2812               	incf	___flmul@aexp^0,w,c
  6399   00E9D2  A4D8               	btfss	status,2,c
  6400   00E9D4  EFEE  F074         	goto	u3301
  6401   00E9D8  EFF0  F074         	goto	u3300
  6402   00E9DC                     u3301:
  6403   00E9DC  EFF8  F074         	goto	l3485
  6404   00E9E0                     u3300:
  6405   00E9E0  0E00               	movlw	0
  6406   00E9E2  6E05               	movwf	___flmul@a^0,c
  6407   00E9E4  0E00               	movlw	0
  6408   00E9E6  6E06               	movwf	(___flmul@a+1)^0,c
  6409   00E9E8  0E00               	movlw	0
  6410   00E9EA  6E07               	movwf	(___flmul@a+2)^0,c
  6411   00E9EC  0E00               	movlw	0
  6412   00E9EE  6E08               	movwf	(___flmul@a+3)^0,c
  6413   00E9F0                     l3485:
  6414   00E9F0  8E07               	bsf	(___flmul@a+2)^0,7,c
  6415   00E9F2  EF03  F075         	goto	l964
  6416   00E9F6                     l3487:
  6417   00E9F6  0E00               	movlw	0
  6418   00E9F8  6E05               	movwf	___flmul@a^0,c
  6419   00E9FA  0E00               	movlw	0
  6420   00E9FC  6E06               	movwf	(___flmul@a+1)^0,c
  6421   00E9FE  0E00               	movlw	0
  6422   00EA00  6E07               	movwf	(___flmul@a+2)^0,c
  6423   00EA02  0E00               	movlw	0
  6424   00EA04  6E08               	movwf	(___flmul@a+3)^0,c
  6425   00EA06                     l964:
  6426   00EA06  5012               	movf	___flmul@aexp^0,w,c
  6427   00EA08  B4D8               	btfsc	status,2,c
  6428   00EA0A  EF09  F075         	goto	u3311
  6429   00EA0E  EF0B  F075         	goto	u3310
  6430   00EA12                     u3311:
  6431   00EA12  EF13  F075         	goto	l3491
  6432   00EA16                     u3310:
  6433   00EA16  5013               	movf	___flmul@bexp^0,w,c
  6434   00EA18  A4D8               	btfss	status,2,c
  6435   00EA1A  EF11  F075         	goto	u3321
  6436   00EA1E  EF13  F075         	goto	u3320
  6437   00EA22                     u3321:
  6438   00EA22  EF1D  F075         	goto	l3495
  6439   00EA26                     u3320:
  6440   00EA26                     l3491:
  6441   00EA26  0E00               	movlw	0
  6442   00EA28  6E01               	movwf	?___flmul^0,c
  6443   00EA2A  0E00               	movlw	0
  6444   00EA2C  6E02               	movwf	(?___flmul+1)^0,c
  6445   00EA2E  0E00               	movlw	0
  6446   00EA30  6E03               	movwf	(?___flmul+2)^0,c
  6447   00EA32  0E00               	movlw	0
  6448   00EA34  6E04               	movwf	(?___flmul+3)^0,c
  6449   00EA36  EFB5  F076         	goto	l968
  6450   00EA3A                     l3495:
  6451   00EA3A  5007               	movf	(___flmul@a+2)^0,w,c
  6452   00EA3C  0201               	mulwf	___flmul@b^0,c
  6453   00EA3E  CFF3 F018          	movff	prodl,___flmul@temp
  6454   00EA42  CFF4 F019          	movff	prodh,___flmul@temp+1
  6455   00EA46  5018               	movf	___flmul@temp^0,w,c
  6456   00EA48  6E0E               	movwf	___flmul@grs^0,c
  6457   00EA4A  6A0F               	clrf	(___flmul@grs+1)^0,c
  6458   00EA4C  6A10               	clrf	(___flmul@grs+2)^0,c
  6459   00EA4E  6A11               	clrf	(___flmul@grs+3)^0,c
  6460   00EA50  5019               	movf	(___flmul@temp+1)^0,w,c
  6461   00EA52  6E14               	movwf	___flmul@prod^0,c
  6462   00EA54  6A15               	clrf	(___flmul@prod+1)^0,c
  6463   00EA56  6A16               	clrf	(___flmul@prod+2)^0,c
  6464   00EA58  6A17               	clrf	(___flmul@prod+3)^0,c
  6465   00EA5A  5006               	movf	(___flmul@a+1)^0,w,c
  6466   00EA5C  0202               	mulwf	(___flmul@b+1)^0,c
  6467   00EA5E  CFF3 F018          	movff	prodl,___flmul@temp
  6468   00EA62  CFF4 F019          	movff	prodh,___flmul@temp+1
  6469   00EA66  5018               	movf	___flmul@temp^0,w,c
  6470   00EA68  260E               	addwf	___flmul@grs^0,f,c
  6471   00EA6A  0E00               	movlw	0
  6472   00EA6C  220F               	addwfc	(___flmul@grs+1)^0,f,c
  6473   00EA6E  2210               	addwfc	(___flmul@grs+2)^0,f,c
  6474   00EA70  2211               	addwfc	(___flmul@grs+3)^0,f,c
  6475   00EA72  5019               	movf	(___flmul@temp+1)^0,w,c
  6476   00EA74  2614               	addwf	___flmul@prod^0,f,c
  6477   00EA76  0E00               	movlw	0
  6478   00EA78  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6479   00EA7A  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6480   00EA7C  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6481   00EA7E  5005               	movf	___flmul@a^0,w,c
  6482   00EA80  0203               	mulwf	(___flmul@b+2)^0,c
  6483   00EA82  CFF3 F018          	movff	prodl,___flmul@temp
  6484   00EA86  CFF4 F019          	movff	prodh,___flmul@temp+1
  6485   00EA8A  5018               	movf	___flmul@temp^0,w,c
  6486   00EA8C  260E               	addwf	___flmul@grs^0,f,c
  6487   00EA8E  0E00               	movlw	0
  6488   00EA90  220F               	addwfc	(___flmul@grs+1)^0,f,c
  6489   00EA92  2210               	addwfc	(___flmul@grs+2)^0,f,c
  6490   00EA94  2211               	addwfc	(___flmul@grs+3)^0,f,c
  6491   00EA96  5019               	movf	(___flmul@temp+1)^0,w,c
  6492   00EA98  2614               	addwf	___flmul@prod^0,f,c
  6493   00EA9A  0E00               	movlw	0
  6494   00EA9C  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6495   00EA9E  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6496   00EAA0  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6497   00EAA2  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  6498   00EAA6  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  6499   00EAAA  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  6500   00EAAE  6A0E               	clrf	___flmul@grs^0,c
  6501   00EAB0  5005               	movf	___flmul@a^0,w,c
  6502   00EAB2  0202               	mulwf	(___flmul@b+1)^0,c
  6503   00EAB4  CFF3 F018          	movff	prodl,___flmul@temp
  6504   00EAB8  CFF4 F019          	movff	prodh,___flmul@temp+1
  6505   00EABC  5018               	movf	___flmul@temp^0,w,c
  6506   00EABE  260E               	addwf	___flmul@grs^0,f,c
  6507   00EAC0  5019               	movf	(___flmul@temp+1)^0,w,c
  6508   00EAC2  220F               	addwfc	(___flmul@grs+1)^0,f,c
  6509   00EAC4  0E00               	movlw	0
  6510   00EAC6  2210               	addwfc	(___flmul@grs+2)^0,f,c
  6511   00EAC8  0E00               	movlw	0
  6512   00EACA  2211               	addwfc	(___flmul@grs+3)^0,f,c
  6513   00EACC  5006               	movf	(___flmul@a+1)^0,w,c
  6514   00EACE  0201               	mulwf	___flmul@b^0,c
  6515   00EAD0  CFF3 F018          	movff	prodl,___flmul@temp
  6516   00EAD4  CFF4 F019          	movff	prodh,___flmul@temp+1
  6517   00EAD8  5018               	movf	___flmul@temp^0,w,c
  6518   00EADA  260E               	addwf	___flmul@grs^0,f,c
  6519   00EADC  5019               	movf	(___flmul@temp+1)^0,w,c
  6520   00EADE  220F               	addwfc	(___flmul@grs+1)^0,f,c
  6521   00EAE0  0E00               	movlw	0
  6522   00EAE2  2210               	addwfc	(___flmul@grs+2)^0,f,c
  6523   00EAE4  0E00               	movlw	0
  6524   00EAE6  2211               	addwfc	(___flmul@grs+3)^0,f,c
  6525   00EAE8  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  6526   00EAEC  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  6527   00EAF0  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  6528   00EAF4  6A0E               	clrf	___flmul@grs^0,c
  6529   00EAF6  5005               	movf	___flmul@a^0,w,c
  6530   00EAF8  0201               	mulwf	___flmul@b^0,c
  6531   00EAFA  CFF3 F018          	movff	prodl,___flmul@temp
  6532   00EAFE  CFF4 F019          	movff	prodh,___flmul@temp+1
  6533   00EB02  5018               	movf	___flmul@temp^0,w,c
  6534   00EB04  260E               	addwf	___flmul@grs^0,f,c
  6535   00EB06  5019               	movf	(___flmul@temp+1)^0,w,c
  6536   00EB08  220F               	addwfc	(___flmul@grs+1)^0,f,c
  6537   00EB0A  0E00               	movlw	0
  6538   00EB0C  2210               	addwfc	(___flmul@grs+2)^0,f,c
  6539   00EB0E  0E00               	movlw	0
  6540   00EB10  2211               	addwfc	(___flmul@grs+3)^0,f,c
  6541   00EB12  5007               	movf	(___flmul@a+2)^0,w,c
  6542   00EB14  0202               	mulwf	(___flmul@b+1)^0,c
  6543   00EB16  CFF3 F018          	movff	prodl,___flmul@temp
  6544   00EB1A  CFF4 F019          	movff	prodh,___flmul@temp+1
  6545   00EB1E  5018               	movf	___flmul@temp^0,w,c
  6546   00EB20  2614               	addwf	___flmul@prod^0,f,c
  6547   00EB22  5019               	movf	(___flmul@temp+1)^0,w,c
  6548   00EB24  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6549   00EB26  0E00               	movlw	0
  6550   00EB28  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6551   00EB2A  0E00               	movlw	0
  6552   00EB2C  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6553   00EB2E  5006               	movf	(___flmul@a+1)^0,w,c
  6554   00EB30  0203               	mulwf	(___flmul@b+2)^0,c
  6555   00EB32  CFF3 F018          	movff	prodl,___flmul@temp
  6556   00EB36  CFF4 F019          	movff	prodh,___flmul@temp+1
  6557   00EB3A  5018               	movf	___flmul@temp^0,w,c
  6558   00EB3C  2614               	addwf	___flmul@prod^0,f,c
  6559   00EB3E  5019               	movf	(___flmul@temp+1)^0,w,c
  6560   00EB40  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6561   00EB42  0E00               	movlw	0
  6562   00EB44  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6563   00EB46  0E00               	movlw	0
  6564   00EB48  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6565   00EB4A  5007               	movf	(___flmul@a+2)^0,w,c
  6566   00EB4C  0203               	mulwf	(___flmul@b+2)^0,c
  6567   00EB4E  CFF3 F018          	movff	prodl,___flmul@temp
  6568   00EB52  CFF4 F019          	movff	prodh,___flmul@temp+1
  6569   00EB56  5018               	movf	___flmul@temp^0,w,c
  6570   00EB58  6E09               	movwf	??___flmul^0,c
  6571   00EB5A  5019               	movf	(___flmul@temp+1)^0,w,c
  6572   00EB5C  6E0A               	movwf	(??___flmul+1)^0,c
  6573   00EB5E  6A0B               	clrf	(??___flmul+2)^0,c
  6574   00EB60  6A0C               	clrf	(??___flmul+3)^0,c
  6575   00EB62  C00B  F00C         	movff	??___flmul+2,??___flmul+3
  6576   00EB66  C00A  F00B         	movff	??___flmul+1,??___flmul+2
  6577   00EB6A  C009  F00A         	movff	??___flmul,??___flmul+1
  6578   00EB6E  6A09               	clrf	??___flmul^0,c
  6579   00EB70  5009               	movf	??___flmul^0,w,c
  6580   00EB72  2614               	addwf	___flmul@prod^0,f,c
  6581   00EB74  500A               	movf	(??___flmul+1)^0,w,c
  6582   00EB76  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6583   00EB78  500B               	movf	(??___flmul+2)^0,w,c
  6584   00EB7A  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6585   00EB7C  500C               	movf	(??___flmul+3)^0,w,c
  6586   00EB7E  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6587   00EB80  C00E  F009         	movff	___flmul@grs,??___flmul
  6588   00EB84  C00F  F00A         	movff	___flmul@grs+1,??___flmul+1
  6589   00EB88  C010  F00B         	movff	___flmul@grs+2,??___flmul+2
  6590   00EB8C  C011  F00C         	movff	___flmul@grs+3,??___flmul+3
  6591   00EB90  0E19               	movlw	25
  6592   00EB92  EFD0  F075         	goto	u3330
  6593   00EB96                     u3335:
  6594   00EB96  90D8               	bcf	status,0,c
  6595   00EB98  320C               	rrcf	(??___flmul+3)^0,f,c
  6596   00EB9A  320B               	rrcf	(??___flmul+2)^0,f,c
  6597   00EB9C  320A               	rrcf	(??___flmul+1)^0,f,c
  6598   00EB9E  3209               	rrcf	??___flmul^0,f,c
  6599   00EBA0                     u3330:
  6600   00EBA0  2EE8               	decfsz	wreg,f,c
  6601   00EBA2  EFCB  F075         	goto	u3335
  6602   00EBA6  5009               	movf	??___flmul^0,w,c
  6603   00EBA8  2614               	addwf	___flmul@prod^0,f,c
  6604   00EBAA  500A               	movf	(??___flmul+1)^0,w,c
  6605   00EBAC  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6606   00EBAE  500B               	movf	(??___flmul+2)^0,w,c
  6607   00EBB0  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6608   00EBB2  500C               	movf	(??___flmul+3)^0,w,c
  6609   00EBB4  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6610   00EBB6  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  6611   00EBBA  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  6612   00EBBE  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  6613   00EBC2  6A0E               	clrf	___flmul@grs^0,c
  6614   00EBC4  5012               	movf	___flmul@aexp^0,w,c
  6615   00EBC6  C013  F009         	movff	___flmul@bexp,??___flmul
  6616   00EBCA  6A0A               	clrf	(??___flmul+1)^0,c
  6617   00EBCC  2609               	addwf	??___flmul^0,f,c
  6618   00EBCE  0E00               	movlw	0
  6619   00EBD0  220A               	addwfc	(??___flmul+1)^0,f,c
  6620   00EBD2  0E82               	movlw	130
  6621   00EBD4  2409               	addwf	??___flmul^0,w,c
  6622   00EBD6  6E18               	movwf	___flmul@temp^0,c
  6623   00EBD8  0EFF               	movlw	255
  6624   00EBDA  200A               	addwfc	(??___flmul+1)^0,w,c
  6625   00EBDC  6E19               	movwf	(___flmul@temp+1)^0,c
  6626   00EBDE  EF06  F076         	goto	l3543
  6627   00EBE2                     l3537:
  6628   00EBE2  90D8               	bcf	status,0,c
  6629   00EBE4  3614               	rlcf	___flmul@prod^0,f,c
  6630   00EBE6  3615               	rlcf	(___flmul@prod+1)^0,f,c
  6631   00EBE8  3616               	rlcf	(___flmul@prod+2)^0,f,c
  6632   00EBEA  3617               	rlcf	(___flmul@prod+3)^0,f,c
  6633   00EBEC  AE11               	btfss	(___flmul@grs+3)^0,7,c
  6634   00EBEE  EFFB  F075         	goto	u3341
  6635   00EBF2  EFFD  F075         	goto	u3340
  6636   00EBF6                     u3341:
  6637   00EBF6  EFFE  F075         	goto	l971
  6638   00EBFA                     u3340:
  6639   00EBFA  8014               	bsf	___flmul@prod^0,0,c
  6640   00EBFC                     l971:
  6641   00EBFC  90D8               	bcf	status,0,c
  6642   00EBFE  360E               	rlcf	___flmul@grs^0,f,c
  6643   00EC00  360F               	rlcf	(___flmul@grs+1)^0,f,c
  6644   00EC02  3610               	rlcf	(___flmul@grs+2)^0,f,c
  6645   00EC04  3611               	rlcf	(___flmul@grs+3)^0,f,c
  6646   00EC06  0618               	decf	___flmul@temp^0,f,c
  6647   00EC08  A0D8               	btfss	status,0,c
  6648   00EC0A  0619               	decf	(___flmul@temp+1)^0,f,c
  6649   00EC0C                     l3543:
  6650   00EC0C  AE16               	btfss	(___flmul@prod+2)^0,7,c
  6651   00EC0E  EF0B  F076         	goto	u3351
  6652   00EC12  EF0D  F076         	goto	u3350
  6653   00EC16                     u3351:
  6654   00EC16  EFF1  F075         	goto	l3537
  6655   00EC1A                     u3350:
  6656   00EC1A  0E00               	movlw	0
  6657   00EC1C  6E12               	movwf	___flmul@aexp^0,c
  6658   00EC1E  AE11               	btfss	(___flmul@grs+3)^0,7,c
  6659   00EC20  EF14  F076         	goto	u3361
  6660   00EC24  EF16  F076         	goto	u3360
  6661   00EC28                     u3361:
  6662   00EC28  EF3A  F076         	goto	l973
  6663   00EC2C                     u3360:
  6664   00EC2C  0EFF               	movlw	255
  6665   00EC2E  140E               	andwf	___flmul@grs^0,w,c
  6666   00EC30  6E09               	movwf	??___flmul^0,c
  6667   00EC32  0EFF               	movlw	255
  6668   00EC34  140F               	andwf	(___flmul@grs+1)^0,w,c
  6669   00EC36  6E0A               	movwf	(??___flmul+1)^0,c
  6670   00EC38  0EFF               	movlw	255
  6671   00EC3A  1410               	andwf	(___flmul@grs+2)^0,w,c
  6672   00EC3C  6E0B               	movwf	(??___flmul+2)^0,c
  6673   00EC3E  0E7F               	movlw	127
  6674   00EC40  1411               	andwf	(___flmul@grs+3)^0,w,c
  6675   00EC42  6E0C               	movwf	(??___flmul+3)^0,c
  6676   00EC44  5009               	movf	??___flmul^0,w,c
  6677   00EC46  100A               	iorwf	(??___flmul+1)^0,w,c
  6678   00EC48  100B               	iorwf	(??___flmul+2)^0,w,c
  6679   00EC4A  100C               	iorwf	(??___flmul+3)^0,w,c
  6680   00EC4C  B4D8               	btfsc	status,2,c
  6681   00EC4E  EF2B  F076         	goto	u3371
  6682   00EC52  EF2D  F076         	goto	u3370
  6683   00EC56                     u3371:
  6684   00EC56  EF31  F076         	goto	l974
  6685   00EC5A                     u3370:
  6686   00EC5A                     l3551:
  6687   00EC5A  0E01               	movlw	1
  6688   00EC5C  6E12               	movwf	___flmul@aexp^0,c
  6689   00EC5E  EF3A  F076         	goto	l973
  6690   00EC62                     l974:
  6691   00EC62  A014               	btfss	___flmul@prod^0,0,c
  6692   00EC64  EF36  F076         	goto	u3381
  6693   00EC68  EF38  F076         	goto	u3380
  6694   00EC6C                     u3381:
  6695   00EC6C  EF3A  F076         	goto	l973
  6696   00EC70                     u3380:
  6697   00EC70  EF2D  F076         	goto	l3551
  6698   00EC74                     l973:
  6699   00EC74  5012               	movf	___flmul@aexp^0,w,c
  6700   00EC76  B4D8               	btfsc	status,2,c
  6701   00EC78  EF40  F076         	goto	u3391
  6702   00EC7C  EF42  F076         	goto	u3390
  6703   00EC80                     u3391:
  6704   00EC80  EF66  F076         	goto	l3563
  6705   00EC84                     u3390:
  6706   00EC84  0E01               	movlw	1
  6707   00EC86  2614               	addwf	___flmul@prod^0,f,c
  6708   00EC88  0E00               	movlw	0
  6709   00EC8A  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6710   00EC8C  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6711   00EC8E  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6712   00EC90  A017               	btfss	(___flmul@prod+3)^0,0,c
  6713   00EC92  EF4D  F076         	goto	u3401
  6714   00EC96  EF4F  F076         	goto	u3400
  6715   00EC9A                     u3401:
  6716   00EC9A  EF66  F076         	goto	l3563
  6717   00EC9E                     u3400:
  6718   00EC9E  C014  F009         	movff	___flmul@prod,??___flmul
  6719   00ECA2  C015  F00A         	movff	___flmul@prod+1,??___flmul+1
  6720   00ECA6  C016  F00B         	movff	___flmul@prod+2,??___flmul+2
  6721   00ECAA  C017  F00C         	movff	___flmul@prod+3,??___flmul+3
  6722   00ECAE  340C               	rlcf	(??___flmul+3)^0,w,c
  6723   00ECB0  320C               	rrcf	(??___flmul+3)^0,f,c
  6724   00ECB2  320B               	rrcf	(??___flmul+2)^0,f,c
  6725   00ECB4  320A               	rrcf	(??___flmul+1)^0,f,c
  6726   00ECB6  3209               	rrcf	??___flmul^0,f,c
  6727   00ECB8  C009  F014         	movff	??___flmul,___flmul@prod
  6728   00ECBC  C00A  F015         	movff	??___flmul+1,___flmul@prod+1
  6729   00ECC0  C00B  F016         	movff	??___flmul+2,___flmul@prod+2
  6730   00ECC4  C00C  F017         	movff	??___flmul+3,___flmul@prod+3
  6731   00ECC8  4A18               	infsnz	___flmul@temp^0,f,c
  6732   00ECCA  2A19               	incf	(___flmul@temp+1)^0,f,c
  6733   00ECCC                     l3563:
  6734   00ECCC  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  6735   00ECCE  EF71  F076         	goto	u3411
  6736   00ECD2  5019               	movf	(___flmul@temp+1)^0,w,c
  6737   00ECD4  E108               	bnz	u3410
  6738   00ECD6  2818               	incf	___flmul@temp^0,w,c
  6739   00ECD8  A0D8               	btfss	status,0,c
  6740   00ECDA  EF71  F076         	goto	u3411
  6741   00ECDE  EF73  F076         	goto	u3410
  6742   00ECE2                     u3411:
  6743   00ECE2  EF7D  F076         	goto	l3567
  6744   00ECE6                     u3410:
  6745   00ECE6  0E00               	movlw	0
  6746   00ECE8  6E14               	movwf	___flmul@prod^0,c
  6747   00ECEA  0E00               	movlw	0
  6748   00ECEC  6E15               	movwf	(___flmul@prod+1)^0,c
  6749   00ECEE  0E80               	movlw	128
  6750   00ECF0  6E16               	movwf	(___flmul@prod+2)^0,c
  6751   00ECF2  0E7F               	movlw	127
  6752   00ECF4  6E17               	movwf	(___flmul@prod+3)^0,c
  6753   00ECF6  EFAB  F076         	goto	l3579
  6754   00ECFA                     l3567:
  6755   00ECFA  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  6756   00ECFC  EF8A  F076         	goto	u3420
  6757   00ED00  5019               	movf	(___flmul@temp+1)^0,w,c
  6758   00ED02  E106               	bnz	u3421
  6759   00ED04  0418               	decf	___flmul@temp^0,w,c
  6760   00ED06  B0D8               	btfsc	status,0,c
  6761   00ED08  EF88  F076         	goto	u3421
  6762   00ED0C  EF8A  F076         	goto	u3420
  6763   00ED10                     u3421:
  6764   00ED10  EF96  F076         	goto	l981
  6765   00ED14                     u3420:
  6766   00ED14  0E00               	movlw	0
  6767   00ED16  6E14               	movwf	___flmul@prod^0,c
  6768   00ED18  0E00               	movlw	0
  6769   00ED1A  6E15               	movwf	(___flmul@prod+1)^0,c
  6770   00ED1C  0E00               	movlw	0
  6771   00ED1E  6E16               	movwf	(___flmul@prod+2)^0,c
  6772   00ED20  0E00               	movlw	0
  6773   00ED22  6E17               	movwf	(___flmul@prod+3)^0,c
  6774   00ED24  0E00               	movlw	0
  6775   00ED26  6E0D               	movwf	___flmul@sign^0,c
  6776   00ED28  EFAB  F076         	goto	l3579
  6777   00ED2C                     l981:
  6778   00ED2C  C018  F013         	movff	___flmul@temp,___flmul@bexp
  6779   00ED30  0EFF               	movlw	255
  6780   00ED32  1614               	andwf	___flmul@prod^0,f,c
  6781   00ED34  0EFF               	movlw	255
  6782   00ED36  1615               	andwf	(___flmul@prod+1)^0,f,c
  6783   00ED38  0E7F               	movlw	127
  6784   00ED3A  1616               	andwf	(___flmul@prod+2)^0,f,c
  6785   00ED3C  0E00               	movlw	0
  6786   00ED3E  1617               	andwf	(___flmul@prod+3)^0,f,c
  6787   00ED40  A013               	btfss	___flmul@bexp^0,0,c
  6788   00ED42  EFA5  F076         	goto	u3431
  6789   00ED46  EFA7  F076         	goto	u3430
  6790   00ED4A                     u3431:
  6791   00ED4A  EFA8  F076         	goto	l3577
  6792   00ED4E                     u3430:
  6793   00ED4E  8E16               	bsf	(___flmul@prod+2)^0,7,c
  6794   00ED50                     l3577:
  6795   00ED50  90D8               	bcf	status,0,c
  6796   00ED52  3013               	rrcf	___flmul@bexp^0,w,c
  6797   00ED54  6E17               	movwf	(___flmul@prod+3)^0,c
  6798   00ED56                     l3579:
  6799   00ED56  500D               	movf	___flmul@sign^0,w,c
  6800   00ED58  1217               	iorwf	(___flmul@prod+3)^0,f,c
  6801   00ED5A  C014  F001         	movff	___flmul@prod,?___flmul
  6802   00ED5E  C015  F002         	movff	___flmul@prod+1,?___flmul+1
  6803   00ED62  C016  F003         	movff	___flmul@prod+2,?___flmul+2
  6804   00ED66  C017  F004         	movff	___flmul@prod+3,?___flmul+3
  6805   00ED6A                     l968:
  6806   00ED6A  0012               	return		;funcret
  6807   00ED6C                     __end_of___flmul:
  6808                           	callstack 0
  6809                           
  6810 ;; *************** function ___flge *****************
  6811 ;; Defined at:
  6812 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
  6813 ;; Parameters:    Size  Location     Type
  6814 ;;  ff1             4   25[COMRAM] unsigned char 
  6815 ;;  ff2             4   29[COMRAM] unsigned char 
  6816 ;; Auto vars:     Size  Location     Type
  6817 ;;		None
  6818 ;; Return value:  Size  Location     Type
  6819 ;;		None               void
  6820 ;; Registers used:
  6821 ;;		wreg, status,2, status,0
  6822 ;; Tracked objects:
  6823 ;;		On entry : 0/0
  6824 ;;		On exit  : 0/0
  6825 ;;		Unchanged: 0/0
  6826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6827 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6829 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6830 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6831 ;;Total ram usage:       12 bytes
  6832 ;; Hardware stack levels used: 1
  6833 ;; This function calls:
  6834 ;;		Nothing
  6835 ;; This function is called by:
  6836 ;;		_efgtoa
  6837 ;; This function uses a non-reentrant model
  6838 ;;
  6839                           
  6840                           	psect	text20
  6841   00D6E2                     __ptext20:
  6842                           	callstack 0
  6843   00D6E2                     ___flge:
  6844                           	callstack 26
  6845   00D6E2  0E00               	movlw	0
  6846   00D6E4  141A               	andwf	___flge@ff1^0,w,c
  6847   00D6E6  6E22               	movwf	??___flge^0,c
  6848   00D6E8  0E00               	movlw	0
  6849   00D6EA  141B               	andwf	(___flge@ff1+1)^0,w,c
  6850   00D6EC  6E23               	movwf	(??___flge+1)^0,c
  6851   00D6EE  0E80               	movlw	128
  6852   00D6F0  141C               	andwf	(___flge@ff1+2)^0,w,c
  6853   00D6F2  6E24               	movwf	(??___flge+2)^0,c
  6854   00D6F4  0E7F               	movlw	127
  6855   00D6F6  141D               	andwf	(___flge@ff1+3)^0,w,c
  6856   00D6F8  6E25               	movwf	(??___flge+3)^0,c
  6857   00D6FA  5022               	movf	??___flge^0,w,c
  6858   00D6FC  1023               	iorwf	(??___flge+1)^0,w,c
  6859   00D6FE  1024               	iorwf	(??___flge+2)^0,w,c
  6860   00D700  1025               	iorwf	(??___flge+3)^0,w,c
  6861   00D702  A4D8               	btfss	status,2,c
  6862   00D704  EF86  F06B         	goto	u3591
  6863   00D708  EF88  F06B         	goto	u3590
  6864   00D70C                     u3591:
  6865   00D70C  EF90  F06B         	goto	l3691
  6866   00D710                     u3590:
  6867   00D710  0E00               	movlw	0
  6868   00D712  6E1A               	movwf	___flge@ff1^0,c
  6869   00D714  0E00               	movlw	0
  6870   00D716  6E1B               	movwf	(___flge@ff1+1)^0,c
  6871   00D718  0E00               	movlw	0
  6872   00D71A  6E1C               	movwf	(___flge@ff1+2)^0,c
  6873   00D71C  0E00               	movlw	0
  6874   00D71E  6E1D               	movwf	(___flge@ff1+3)^0,c
  6875   00D720                     l3691:
  6876   00D720  0E00               	movlw	0
  6877   00D722  141E               	andwf	___flge@ff2^0,w,c
  6878   00D724  6E22               	movwf	??___flge^0,c
  6879   00D726  0E00               	movlw	0
  6880   00D728  141F               	andwf	(___flge@ff2+1)^0,w,c
  6881   00D72A  6E23               	movwf	(??___flge+1)^0,c
  6882   00D72C  0E80               	movlw	128
  6883   00D72E  1420               	andwf	(___flge@ff2+2)^0,w,c
  6884   00D730  6E24               	movwf	(??___flge+2)^0,c
  6885   00D732  0E7F               	movlw	127
  6886   00D734  1421               	andwf	(___flge@ff2+3)^0,w,c
  6887   00D736  6E25               	movwf	(??___flge+3)^0,c
  6888   00D738  5022               	movf	??___flge^0,w,c
  6889   00D73A  1023               	iorwf	(??___flge+1)^0,w,c
  6890   00D73C  1024               	iorwf	(??___flge+2)^0,w,c
  6891   00D73E  1025               	iorwf	(??___flge+3)^0,w,c
  6892   00D740  A4D8               	btfss	status,2,c
  6893   00D742  EFA5  F06B         	goto	u3601
  6894   00D746  EFA7  F06B         	goto	u3600
  6895   00D74A                     u3601:
  6896   00D74A  EFAF  F06B         	goto	l3695
  6897   00D74E                     u3600:
  6898   00D74E  0E00               	movlw	0
  6899   00D750  6E1E               	movwf	___flge@ff2^0,c
  6900   00D752  0E00               	movlw	0
  6901   00D754  6E1F               	movwf	(___flge@ff2+1)^0,c
  6902   00D756  0E00               	movlw	0
  6903   00D758  6E20               	movwf	(___flge@ff2+2)^0,c
  6904   00D75A  0E00               	movlw	0
  6905   00D75C  6E21               	movwf	(___flge@ff2+3)^0,c
  6906   00D75E                     l3695:
  6907   00D75E  AE1D               	btfss	(___flge@ff1+3)^0,7,c
  6908   00D760  EFB4  F06B         	goto	u3611
  6909   00D764  EFB6  F06B         	goto	u3610
  6910   00D768                     u3611:
  6911   00D768  EFBF  F06B         	goto	l3699
  6912   00D76C                     u3610:
  6913   00D76C  6C1A               	negf	___flge@ff1^0,c
  6914   00D76E  1E1B               	comf	(___flge@ff1+1)^0,f,c
  6915   00D770  B0D8               	btfsc	status,0,c
  6916   00D772  2A1B               	incf	(___flge@ff1+1)^0,f,c
  6917   00D774  1E1C               	comf	(___flge@ff1+2)^0,f,c
  6918   00D776  B0D8               	btfsc	status,0,c
  6919   00D778  2A1C               	incf	(___flge@ff1+2)^0,f,c
  6920   00D77A  0E80               	movlw	128
  6921   00D77C  561D               	subfwb	(___flge@ff1+3)^0,f,c
  6922   00D77E                     l3699:
  6923   00D77E  AE21               	btfss	(___flge@ff2+3)^0,7,c
  6924   00D780  EFC4  F06B         	goto	u3621
  6925   00D784  EFC6  F06B         	goto	u3620
  6926   00D788                     u3621:
  6927   00D788  EFCF  F06B         	goto	l615
  6928   00D78C                     u3620:
  6929   00D78C  6C1E               	negf	___flge@ff2^0,c
  6930   00D78E  1E1F               	comf	(___flge@ff2+1)^0,f,c
  6931   00D790  B0D8               	btfsc	status,0,c
  6932   00D792  2A1F               	incf	(___flge@ff2+1)^0,f,c
  6933   00D794  1E20               	comf	(___flge@ff2+2)^0,f,c
  6934   00D796  B0D8               	btfsc	status,0,c
  6935   00D798  2A20               	incf	(___flge@ff2+2)^0,f,c
  6936   00D79A  0E80               	movlw	128
  6937   00D79C  5621               	subfwb	(___flge@ff2+3)^0,f,c
  6938   00D79E                     l615:
  6939   00D79E  0E00               	movlw	0
  6940   00D7A0  1A1A               	xorwf	___flge@ff1^0,f,c
  6941   00D7A2  0E00               	movlw	0
  6942   00D7A4  1A1B               	xorwf	(___flge@ff1+1)^0,f,c
  6943   00D7A6  0E00               	movlw	0
  6944   00D7A8  1A1C               	xorwf	(___flge@ff1+2)^0,f,c
  6945   00D7AA  0E80               	movlw	128
  6946   00D7AC  1A1D               	xorwf	(___flge@ff1+3)^0,f,c
  6947   00D7AE  0E00               	movlw	0
  6948   00D7B0  1A1E               	xorwf	___flge@ff2^0,f,c
  6949   00D7B2  0E00               	movlw	0
  6950   00D7B4  1A1F               	xorwf	(___flge@ff2+1)^0,f,c
  6951   00D7B6  0E00               	movlw	0
  6952   00D7B8  1A20               	xorwf	(___flge@ff2+2)^0,f,c
  6953   00D7BA  0E80               	movlw	128
  6954   00D7BC  1A21               	xorwf	(___flge@ff2+3)^0,f,c
  6955   00D7BE  501E               	movf	___flge@ff2^0,w,c
  6956   00D7C0  5C1A               	subwf	___flge@ff1^0,w,c
  6957   00D7C2  501F               	movf	(___flge@ff2+1)^0,w,c
  6958   00D7C4  581B               	subwfb	(___flge@ff1+1)^0,w,c
  6959   00D7C6  5020               	movf	(___flge@ff2+2)^0,w,c
  6960   00D7C8  581C               	subwfb	(___flge@ff1+2)^0,w,c
  6961   00D7CA  5021               	movf	(___flge@ff2+3)^0,w,c
  6962   00D7CC  581D               	subwfb	(___flge@ff1+3)^0,w,c
  6963   00D7CE  B0D8               	btfsc	status,0,c
  6964   00D7D0  EFEC  F06B         	goto	u3631
  6965   00D7D4  EFEE  F06B         	goto	u3630
  6966   00D7D8                     u3631:
  6967   00D7D8  EFF1  F06B         	goto	l3705
  6968   00D7DC                     u3630:
  6969   00D7DC  90D8               	bcf	status,0,c
  6970   00D7DE  EFF2  F06B         	goto	l620
  6971   00D7E2                     l3705:
  6972   00D7E2  80D8               	bsf	status,0,c
  6973   00D7E4                     l620:
  6974   00D7E4  0012               	return		;funcret
  6975   00D7E6                     __end_of___flge:
  6976                           	callstack 0
  6977                           
  6978 ;; *************** function ___fleq *****************
  6979 ;; Defined at:
  6980 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fleq.c"
  6981 ;; Parameters:    Size  Location     Type
  6982 ;;  ff1             4    0[COMRAM] unsigned char 
  6983 ;;  ff2             4    4[COMRAM] unsigned char 
  6984 ;; Auto vars:     Size  Location     Type
  6985 ;;		None
  6986 ;; Return value:  Size  Location     Type
  6987 ;;		None               void
  6988 ;; Registers used:
  6989 ;;		wreg, status,2, status,0
  6990 ;; Tracked objects:
  6991 ;;		On entry : 0/0
  6992 ;;		On exit  : 0/0
  6993 ;;		Unchanged: 0/0
  6994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6995 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6997 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6998 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6999 ;;Total ram usage:       12 bytes
  7000 ;; Hardware stack levels used: 1
  7001 ;; This function calls:
  7002 ;;		Nothing
  7003 ;; This function is called by:
  7004 ;;		_efgtoa
  7005 ;; This function uses a non-reentrant model
  7006 ;;
  7007                           
  7008                           	psect	text21
  7009   00D212                     __ptext21:
  7010                           	callstack 0
  7011   00D212                     ___fleq:
  7012                           	callstack 26
  7013   00D212  0E00               	movlw	0
  7014   00D214  1401               	andwf	___fleq@ff1^0,w,c
  7015   00D216  6E09               	movwf	??___fleq^0,c
  7016   00D218  0E00               	movlw	0
  7017   00D21A  1402               	andwf	(___fleq@ff1+1)^0,w,c
  7018   00D21C  6E0A               	movwf	(??___fleq+1)^0,c
  7019   00D21E  0E80               	movlw	128
  7020   00D220  1403               	andwf	(___fleq@ff1+2)^0,w,c
  7021   00D222  6E0B               	movwf	(??___fleq+2)^0,c
  7022   00D224  0E7F               	movlw	127
  7023   00D226  1404               	andwf	(___fleq@ff1+3)^0,w,c
  7024   00D228  6E0C               	movwf	(??___fleq+3)^0,c
  7025   00D22A  5009               	movf	??___fleq^0,w,c
  7026   00D22C  100A               	iorwf	(??___fleq+1)^0,w,c
  7027   00D22E  100B               	iorwf	(??___fleq+2)^0,w,c
  7028   00D230  100C               	iorwf	(??___fleq+3)^0,w,c
  7029   00D232  A4D8               	btfss	status,2,c
  7030   00D234  EF1E  F069         	goto	u3561
  7031   00D238  EF20  F069         	goto	u3560
  7032   00D23C                     u3561:
  7033   00D23C  EF28  F069         	goto	l3675
  7034   00D240                     u3560:
  7035   00D240  0E00               	movlw	0
  7036   00D242  6E01               	movwf	___fleq@ff1^0,c
  7037   00D244  0E00               	movlw	0
  7038   00D246  6E02               	movwf	(___fleq@ff1+1)^0,c
  7039   00D248  0E00               	movlw	0
  7040   00D24A  6E03               	movwf	(___fleq@ff1+2)^0,c
  7041   00D24C  0E00               	movlw	0
  7042   00D24E  6E04               	movwf	(___fleq@ff1+3)^0,c
  7043   00D250                     l3675:
  7044   00D250  0E00               	movlw	0
  7045   00D252  1405               	andwf	___fleq@ff2^0,w,c
  7046   00D254  6E09               	movwf	??___fleq^0,c
  7047   00D256  0E00               	movlw	0
  7048   00D258  1406               	andwf	(___fleq@ff2+1)^0,w,c
  7049   00D25A  6E0A               	movwf	(??___fleq+1)^0,c
  7050   00D25C  0E80               	movlw	128
  7051   00D25E  1407               	andwf	(___fleq@ff2+2)^0,w,c
  7052   00D260  6E0B               	movwf	(??___fleq+2)^0,c
  7053   00D262  0E7F               	movlw	127
  7054   00D264  1408               	andwf	(___fleq@ff2+3)^0,w,c
  7055   00D266  6E0C               	movwf	(??___fleq+3)^0,c
  7056   00D268  5009               	movf	??___fleq^0,w,c
  7057   00D26A  100A               	iorwf	(??___fleq+1)^0,w,c
  7058   00D26C  100B               	iorwf	(??___fleq+2)^0,w,c
  7059   00D26E  100C               	iorwf	(??___fleq+3)^0,w,c
  7060   00D270  A4D8               	btfss	status,2,c
  7061   00D272  EF3D  F069         	goto	u3571
  7062   00D276  EF3F  F069         	goto	u3570
  7063   00D27A                     u3571:
  7064   00D27A  EF47  F069         	goto	l3679
  7065   00D27E                     u3570:
  7066   00D27E  0E00               	movlw	0
  7067   00D280  6E05               	movwf	___fleq@ff2^0,c
  7068   00D282  0E00               	movlw	0
  7069   00D284  6E06               	movwf	(___fleq@ff2+1)^0,c
  7070   00D286  0E00               	movlw	0
  7071   00D288  6E07               	movwf	(___fleq@ff2+2)^0,c
  7072   00D28A  0E00               	movlw	0
  7073   00D28C  6E08               	movwf	(___fleq@ff2+3)^0,c
  7074   00D28E                     l3679:
  7075   00D28E  5005               	movf	___fleq@ff2^0,w,c
  7076   00D290  1801               	xorwf	___fleq@ff1^0,w,c
  7077   00D292  E10F               	bnz	u3580
  7078   00D294  5006               	movf	(___fleq@ff2+1)^0,w,c
  7079   00D296  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  7080   00D298  E10C               	bnz	u3580
  7081   00D29A  5007               	movf	(___fleq@ff2+2)^0,w,c
  7082   00D29C  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  7083   00D29E  E109               	bnz	u3580
  7084   00D2A0  5008               	movf	(___fleq@ff2+3)^0,w,c
  7085   00D2A2  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  7086   00D2A4  B4D8               	btfsc	status,2,c
  7087   00D2A6  EF57  F069         	goto	u3581
  7088   00D2AA  EF59  F069         	goto	u3580
  7089   00D2AE                     u3581:
  7090   00D2AE  EF5C  F069         	goto	l3683
  7091   00D2B2                     u3580:
  7092   00D2B2  90D8               	bcf	status,0,c
  7093   00D2B4  EF5D  F069         	goto	l609
  7094   00D2B8                     l3683:
  7095   00D2B8  80D8               	bsf	status,0,c
  7096   00D2BA                     l609:
  7097   00D2BA  0012               	return		;funcret
  7098   00D2BC                     __end_of___fleq:
  7099                           	callstack 0
  7100                           
  7101 ;; *************** function ___fldiv *****************
  7102 ;; Defined at:
  7103 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
  7104 ;; Parameters:    Size  Location     Type
  7105 ;;  b               4   20[COMRAM] unsigned char 
  7106 ;;  a               4   24[COMRAM] unsigned char 
  7107 ;; Auto vars:     Size  Location     Type
  7108 ;;  grs             4   39[COMRAM] unsigned long 
  7109 ;;  rem             4   32[COMRAM] unsigned long 
  7110 ;;  new_exp         2   37[COMRAM] short 
  7111 ;;  aexp            1   44[COMRAM] unsigned char 
  7112 ;;  bexp            1   43[COMRAM] unsigned char 
  7113 ;;  sign            1   36[COMRAM] unsigned char 
  7114 ;; Return value:  Size  Location     Type
  7115 ;;                  4   20[COMRAM] unsigned char 
  7116 ;; Registers used:
  7117 ;;		wreg, status,2, status,0
  7118 ;; Tracked objects:
  7119 ;;		On entry : 0/0
  7120 ;;		On exit  : 0/0
  7121 ;;		Unchanged: 0/0
  7122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7123 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7124 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7125 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7126 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7127 ;;Total ram usage:       25 bytes
  7128 ;; Hardware stack levels used: 1
  7129 ;; This function calls:
  7130 ;;		Nothing
  7131 ;; This function is called by:
  7132 ;;		_main
  7133 ;;		_efgtoa
  7134 ;; This function uses a non-reentrant model
  7135 ;;
  7136                           
  7137                           	psect	text22
  7138   00E194                     __ptext22:
  7139                           	callstack 0
  7140   00E194                     ___fldiv:
  7141                           	callstack 26
  7142   00E194  5018               	movf	(___fldiv@b+3)^0,w,c
  7143   00E196  0B80               	andlw	128
  7144   00E198  6E25               	movwf	___fldiv@sign^0,c
  7145   00E19A  5018               	movf	(___fldiv@b+3)^0,w,c
  7146   00E19C  2418               	addwf	(___fldiv@b+3)^0,w,c
  7147   00E19E  6E2C               	movwf	___fldiv@bexp^0,c
  7148   00E1A0  AE17               	btfss	(___fldiv@b+2)^0,7,c
  7149   00E1A2  EFD5  F070         	goto	u3021
  7150   00E1A6  EFD7  F070         	goto	u3020
  7151   00E1AA                     u3021:
  7152   00E1AA  EFD8  F070         	goto	l3323
  7153   00E1AE                     u3020:
  7154   00E1AE  802C               	bsf	___fldiv@bexp^0,0,c
  7155   00E1B0                     l3323:
  7156   00E1B0  502C               	movf	___fldiv@bexp^0,w,c
  7157   00E1B2  B4D8               	btfsc	status,2,c
  7158   00E1B4  EFDE  F070         	goto	u3031
  7159   00E1B8  EFE0  F070         	goto	u3030
  7160   00E1BC                     u3031:
  7161   00E1BC  EFF5  F070         	goto	l3333
  7162   00E1C0                     u3030:
  7163   00E1C0  282C               	incf	___fldiv@bexp^0,w,c
  7164   00E1C2  A4D8               	btfss	status,2,c
  7165   00E1C4  EFE6  F070         	goto	u3041
  7166   00E1C8  EFE8  F070         	goto	u3040
  7167   00E1CC                     u3041:
  7168   00E1CC  EFF0  F070         	goto	l3329
  7169   00E1D0                     u3040:
  7170   00E1D0  0E00               	movlw	0
  7171   00E1D2  6E15               	movwf	___fldiv@b^0,c
  7172   00E1D4  0E00               	movlw	0
  7173   00E1D6  6E16               	movwf	(___fldiv@b+1)^0,c
  7174   00E1D8  0E00               	movlw	0
  7175   00E1DA  6E17               	movwf	(___fldiv@b+2)^0,c
  7176   00E1DC  0E00               	movlw	0
  7177   00E1DE  6E18               	movwf	(___fldiv@b+3)^0,c
  7178   00E1E0                     l3329:
  7179   00E1E0  8E17               	bsf	(___fldiv@b+2)^0,7,c
  7180   00E1E2  0E00               	movlw	0
  7181   00E1E4  6E18               	movwf	(___fldiv@b+3)^0,c
  7182   00E1E6  EFFD  F070         	goto	l3335
  7183   00E1EA                     l3333:
  7184   00E1EA  0E00               	movlw	0
  7185   00E1EC  6E15               	movwf	___fldiv@b^0,c
  7186   00E1EE  0E00               	movlw	0
  7187   00E1F0  6E16               	movwf	(___fldiv@b+1)^0,c
  7188   00E1F2  0E00               	movlw	0
  7189   00E1F4  6E17               	movwf	(___fldiv@b+2)^0,c
  7190   00E1F6  0E00               	movlw	0
  7191   00E1F8  6E18               	movwf	(___fldiv@b+3)^0,c
  7192   00E1FA                     l3335:
  7193   00E1FA  501C               	movf	(___fldiv@a+3)^0,w,c
  7194   00E1FC  0B80               	andlw	128
  7195   00E1FE  1A25               	xorwf	___fldiv@sign^0,f,c
  7196   00E200  501C               	movf	(___fldiv@a+3)^0,w,c
  7197   00E202  241C               	addwf	(___fldiv@a+3)^0,w,c
  7198   00E204  6E2D               	movwf	___fldiv@aexp^0,c
  7199   00E206  AE1B               	btfss	(___fldiv@a+2)^0,7,c
  7200   00E208  EF08  F071         	goto	u3051
  7201   00E20C  EF0A  F071         	goto	u3050
  7202   00E210                     u3051:
  7203   00E210  EF0B  F071         	goto	l3343
  7204   00E214                     u3050:
  7205   00E214  802D               	bsf	___fldiv@aexp^0,0,c
  7206   00E216                     l3343:
  7207   00E216  502D               	movf	___fldiv@aexp^0,w,c
  7208   00E218  B4D8               	btfsc	status,2,c
  7209   00E21A  EF11  F071         	goto	u3061
  7210   00E21E  EF13  F071         	goto	u3060
  7211   00E222                     u3061:
  7212   00E222  EF28  F071         	goto	l3353
  7213   00E226                     u3060:
  7214   00E226  282D               	incf	___fldiv@aexp^0,w,c
  7215   00E228  A4D8               	btfss	status,2,c
  7216   00E22A  EF19  F071         	goto	u3071
  7217   00E22E  EF1B  F071         	goto	u3070
  7218   00E232                     u3071:
  7219   00E232  EF23  F071         	goto	l3349
  7220   00E236                     u3070:
  7221   00E236  0E00               	movlw	0
  7222   00E238  6E19               	movwf	___fldiv@a^0,c
  7223   00E23A  0E00               	movlw	0
  7224   00E23C  6E1A               	movwf	(___fldiv@a+1)^0,c
  7225   00E23E  0E00               	movlw	0
  7226   00E240  6E1B               	movwf	(___fldiv@a+2)^0,c
  7227   00E242  0E00               	movlw	0
  7228   00E244  6E1C               	movwf	(___fldiv@a+3)^0,c
  7229   00E246                     l3349:
  7230   00E246  8E1B               	bsf	(___fldiv@a+2)^0,7,c
  7231   00E248  0E00               	movlw	0
  7232   00E24A  6E1C               	movwf	(___fldiv@a+3)^0,c
  7233   00E24C  EF30  F071         	goto	l3355
  7234   00E250                     l3353:
  7235   00E250  0E00               	movlw	0
  7236   00E252  6E19               	movwf	___fldiv@a^0,c
  7237   00E254  0E00               	movlw	0
  7238   00E256  6E1A               	movwf	(___fldiv@a+1)^0,c
  7239   00E258  0E00               	movlw	0
  7240   00E25A  6E1B               	movwf	(___fldiv@a+2)^0,c
  7241   00E25C  0E00               	movlw	0
  7242   00E25E  6E1C               	movwf	(___fldiv@a+3)^0,c
  7243   00E260                     l3355:
  7244   00E260  5019               	movf	___fldiv@a^0,w,c
  7245   00E262  101A               	iorwf	(___fldiv@a+1)^0,w,c
  7246   00E264  101B               	iorwf	(___fldiv@a+2)^0,w,c
  7247   00E266  101C               	iorwf	(___fldiv@a+3)^0,w,c
  7248   00E268  A4D8               	btfss	status,2,c
  7249   00E26A  EF39  F071         	goto	u3081
  7250   00E26E  EF3B  F071         	goto	u3080
  7251   00E272                     u3081:
  7252   00E272  EF53  F071         	goto	l3367
  7253   00E276                     u3080:
  7254   00E276  0E00               	movlw	0
  7255   00E278  6E15               	movwf	___fldiv@b^0,c
  7256   00E27A  0E00               	movlw	0
  7257   00E27C  6E16               	movwf	(___fldiv@b+1)^0,c
  7258   00E27E  0E00               	movlw	0
  7259   00E280  6E17               	movwf	(___fldiv@b+2)^0,c
  7260   00E282  0E00               	movlw	0
  7261   00E284  6E18               	movwf	(___fldiv@b+3)^0,c
  7262   00E286  0E80               	movlw	128
  7263   00E288  1217               	iorwf	(___fldiv@b+2)^0,f,c
  7264   00E28A  0E7F               	movlw	127
  7265   00E28C  1218               	iorwf	(___fldiv@b+3)^0,f,c
  7266   00E28E                     l3361:
  7267   00E28E  5025               	movf	___fldiv@sign^0,w,c
  7268   00E290  1218               	iorwf	(___fldiv@b+3)^0,f,c
  7269   00E292  C015  F015         	movff	___fldiv@b,?___fldiv
  7270   00E296  C016  F016         	movff	___fldiv@b+1,?___fldiv+1
  7271   00E29A  C017  F017         	movff	___fldiv@b+2,?___fldiv+2
  7272   00E29E  C018  F018         	movff	___fldiv@b+3,?___fldiv+3
  7273   00E2A2  EF96  F072         	goto	l932
  7274   00E2A6                     l3367:
  7275   00E2A6  502C               	movf	___fldiv@bexp^0,w,c
  7276   00E2A8  A4D8               	btfss	status,2,c
  7277   00E2AA  EF59  F071         	goto	u3091
  7278   00E2AE  EF5B  F071         	goto	u3090
  7279   00E2B2                     u3091:
  7280   00E2B2  EF65  F071         	goto	l3375
  7281   00E2B6                     u3090:
  7282   00E2B6  0E00               	movlw	0
  7283   00E2B8  6E15               	movwf	?___fldiv^0,c
  7284   00E2BA  0E00               	movlw	0
  7285   00E2BC  6E16               	movwf	(?___fldiv+1)^0,c
  7286   00E2BE  0E00               	movlw	0
  7287   00E2C0  6E17               	movwf	(?___fldiv+2)^0,c
  7288   00E2C2  0E00               	movlw	0
  7289   00E2C4  6E18               	movwf	(?___fldiv+3)^0,c
  7290   00E2C6  EF96  F072         	goto	l932
  7291   00E2CA                     l3375:
  7292   00E2CA  502D               	movf	___fldiv@aexp^0,w,c
  7293   00E2CC  C02C  F01D         	movff	___fldiv@bexp,??___fldiv
  7294   00E2D0  6A1E               	clrf	(??___fldiv+1)^0,c
  7295   00E2D2  5E1D               	subwf	??___fldiv^0,f,c
  7296   00E2D4  0E00               	movlw	0
  7297   00E2D6  5A1E               	subwfb	(??___fldiv+1)^0,f,c
  7298   00E2D8  0E7F               	movlw	127
  7299   00E2DA  241D               	addwf	??___fldiv^0,w,c
  7300   00E2DC  6E26               	movwf	___fldiv@new_exp^0,c
  7301   00E2DE  0E00               	movlw	0
  7302   00E2E0  201E               	addwfc	(??___fldiv+1)^0,w,c
  7303   00E2E2  6E27               	movwf	(___fldiv@new_exp+1)^0,c
  7304   00E2E4  C015  F021         	movff	___fldiv@b,___fldiv@rem
  7305   00E2E8  C016  F022         	movff	___fldiv@b+1,___fldiv@rem+1
  7306   00E2EC  C017  F023         	movff	___fldiv@b+2,___fldiv@rem+2
  7307   00E2F0  C018  F024         	movff	___fldiv@b+3,___fldiv@rem+3
  7308   00E2F4  0E00               	movlw	0
  7309   00E2F6  6E15               	movwf	___fldiv@b^0,c
  7310   00E2F8  0E00               	movlw	0
  7311   00E2FA  6E16               	movwf	(___fldiv@b+1)^0,c
  7312   00E2FC  0E00               	movlw	0
  7313   00E2FE  6E17               	movwf	(___fldiv@b+2)^0,c
  7314   00E300  0E00               	movlw	0
  7315   00E302  6E18               	movwf	(___fldiv@b+3)^0,c
  7316   00E304  0E00               	movlw	0
  7317   00E306  6E28               	movwf	___fldiv@grs^0,c
  7318   00E308  0E00               	movlw	0
  7319   00E30A  6E29               	movwf	(___fldiv@grs+1)^0,c
  7320   00E30C  0E00               	movlw	0
  7321   00E30E  6E2A               	movwf	(___fldiv@grs+2)^0,c
  7322   00E310  0E00               	movlw	0
  7323   00E312  6E2B               	movwf	(___fldiv@grs+3)^0,c
  7324   00E314  0E00               	movlw	0
  7325   00E316  6E2D               	movwf	___fldiv@aexp^0,c
  7326   00E318  EFC6  F071         	goto	l934
  7327   00E31C                     l3385:
  7328   00E31C  502D               	movf	___fldiv@aexp^0,w,c
  7329   00E31E  B4D8               	btfsc	status,2,c
  7330   00E320  EF94  F071         	goto	u3101
  7331   00E324  EF96  F071         	goto	u3100
  7332   00E328                     u3101:
  7333   00E328  EFAD  F071         	goto	l3393
  7334   00E32C                     u3100:
  7335   00E32C  90D8               	bcf	status,0,c
  7336   00E32E  3621               	rlcf	___fldiv@rem^0,f,c
  7337   00E330  3622               	rlcf	(___fldiv@rem+1)^0,f,c
  7338   00E332  3623               	rlcf	(___fldiv@rem+2)^0,f,c
  7339   00E334  3624               	rlcf	(___fldiv@rem+3)^0,f,c
  7340   00E336  90D8               	bcf	status,0,c
  7341   00E338  3615               	rlcf	___fldiv@b^0,f,c
  7342   00E33A  3616               	rlcf	(___fldiv@b+1)^0,f,c
  7343   00E33C  3617               	rlcf	(___fldiv@b+2)^0,f,c
  7344   00E33E  3618               	rlcf	(___fldiv@b+3)^0,f,c
  7345   00E340  AE2B               	btfss	(___fldiv@grs+3)^0,7,c
  7346   00E342  EFA5  F071         	goto	u3111
  7347   00E346  EFA7  F071         	goto	u3110
  7348   00E34A                     u3111:
  7349   00E34A  EFA8  F071         	goto	l937
  7350   00E34E                     u3110:
  7351   00E34E  8015               	bsf	___fldiv@b^0,0,c
  7352   00E350                     l937:
  7353   00E350  90D8               	bcf	status,0,c
  7354   00E352  3628               	rlcf	___fldiv@grs^0,f,c
  7355   00E354  3629               	rlcf	(___fldiv@grs+1)^0,f,c
  7356   00E356  362A               	rlcf	(___fldiv@grs+2)^0,f,c
  7357   00E358  362B               	rlcf	(___fldiv@grs+3)^0,f,c
  7358   00E35A                     l3393:
  7359   00E35A  5019               	movf	___fldiv@a^0,w,c
  7360   00E35C  5C21               	subwf	___fldiv@rem^0,w,c
  7361   00E35E  501A               	movf	(___fldiv@a+1)^0,w,c
  7362   00E360  5822               	subwfb	(___fldiv@rem+1)^0,w,c
  7363   00E362  501B               	movf	(___fldiv@a+2)^0,w,c
  7364   00E364  5823               	subwfb	(___fldiv@rem+2)^0,w,c
  7365   00E366  501C               	movf	(___fldiv@a+3)^0,w,c
  7366   00E368  5824               	subwfb	(___fldiv@rem+3)^0,w,c
  7367   00E36A  A0D8               	btfss	status,0,c
  7368   00E36C  EFBA  F071         	goto	u3121
  7369   00E370  EFBC  F071         	goto	u3120
  7370   00E374                     u3121:
  7371   00E374  EFC5  F071         	goto	l3399
  7372   00E378                     u3120:
  7373   00E378  8C2B               	bsf	(___fldiv@grs+3)^0,6,c
  7374   00E37A  5019               	movf	___fldiv@a^0,w,c
  7375   00E37C  5E21               	subwf	___fldiv@rem^0,f,c
  7376   00E37E  501A               	movf	(___fldiv@a+1)^0,w,c
  7377   00E380  5A22               	subwfb	(___fldiv@rem+1)^0,f,c
  7378   00E382  501B               	movf	(___fldiv@a+2)^0,w,c
  7379   00E384  5A23               	subwfb	(___fldiv@rem+2)^0,f,c
  7380   00E386  501C               	movf	(___fldiv@a+3)^0,w,c
  7381   00E388  5A24               	subwfb	(___fldiv@rem+3)^0,f,c
  7382   00E38A                     l3399:
  7383   00E38A  2A2D               	incf	___fldiv@aexp^0,f,c
  7384   00E38C                     l934:
  7385   00E38C  0E19               	movlw	25
  7386   00E38E  642D               	cpfsgt	___fldiv@aexp^0,c
  7387   00E390  EFCC  F071         	goto	u3131
  7388   00E394  EFCE  F071         	goto	u3130
  7389   00E398                     u3131:
  7390   00E398  EF8E  F071         	goto	l3385
  7391   00E39C                     u3130:
  7392   00E39C  5021               	movf	___fldiv@rem^0,w,c
  7393   00E39E  1022               	iorwf	(___fldiv@rem+1)^0,w,c
  7394   00E3A0  1023               	iorwf	(___fldiv@rem+2)^0,w,c
  7395   00E3A2  1024               	iorwf	(___fldiv@rem+3)^0,w,c
  7396   00E3A4  B4D8               	btfsc	status,2,c
  7397   00E3A6  EFD7  F071         	goto	u3141
  7398   00E3AA  EFD9  F071         	goto	u3140
  7399   00E3AE                     u3141:
  7400   00E3AE  EFF1  F071         	goto	l3411
  7401   00E3B2                     u3140:
  7402   00E3B2  8028               	bsf	___fldiv@grs^0,0,c
  7403   00E3B4  EFF1  F071         	goto	l3411
  7404   00E3B8                     l3405:
  7405   00E3B8  90D8               	bcf	status,0,c
  7406   00E3BA  3615               	rlcf	___fldiv@b^0,f,c
  7407   00E3BC  3616               	rlcf	(___fldiv@b+1)^0,f,c
  7408   00E3BE  3617               	rlcf	(___fldiv@b+2)^0,f,c
  7409   00E3C0  3618               	rlcf	(___fldiv@b+3)^0,f,c
  7410   00E3C2  AE2B               	btfss	(___fldiv@grs+3)^0,7,c
  7411   00E3C4  EFE6  F071         	goto	u3151
  7412   00E3C8  EFE8  F071         	goto	u3150
  7413   00E3CC                     u3151:
  7414   00E3CC  EFE9  F071         	goto	l943
  7415   00E3D0                     u3150:
  7416   00E3D0  8015               	bsf	___fldiv@b^0,0,c
  7417   00E3D2                     l943:
  7418   00E3D2  90D8               	bcf	status,0,c
  7419   00E3D4  3628               	rlcf	___fldiv@grs^0,f,c
  7420   00E3D6  3629               	rlcf	(___fldiv@grs+1)^0,f,c
  7421   00E3D8  362A               	rlcf	(___fldiv@grs+2)^0,f,c
  7422   00E3DA  362B               	rlcf	(___fldiv@grs+3)^0,f,c
  7423   00E3DC  0626               	decf	___fldiv@new_exp^0,f,c
  7424   00E3DE  A0D8               	btfss	status,0,c
  7425   00E3E0  0627               	decf	(___fldiv@new_exp+1)^0,f,c
  7426   00E3E2                     l3411:
  7427   00E3E2  AE17               	btfss	(___fldiv@b+2)^0,7,c
  7428   00E3E4  EFF6  F071         	goto	u3161
  7429   00E3E8  EFF8  F071         	goto	u3160
  7430   00E3EC                     u3161:
  7431   00E3EC  EFDC  F071         	goto	l3405
  7432   00E3F0                     u3160:
  7433   00E3F0  0E00               	movlw	0
  7434   00E3F2  6E2D               	movwf	___fldiv@aexp^0,c
  7435   00E3F4  AE2B               	btfss	(___fldiv@grs+3)^0,7,c
  7436   00E3F6  EFFF  F071         	goto	u3171
  7437   00E3FA  EF01  F072         	goto	u3170
  7438   00E3FE                     u3171:
  7439   00E3FE  EF25  F072         	goto	l945
  7440   00E402                     u3170:
  7441   00E402  0EFF               	movlw	255
  7442   00E404  1428               	andwf	___fldiv@grs^0,w,c
  7443   00E406  6E1D               	movwf	??___fldiv^0,c
  7444   00E408  0EFF               	movlw	255
  7445   00E40A  1429               	andwf	(___fldiv@grs+1)^0,w,c
  7446   00E40C  6E1E               	movwf	(??___fldiv+1)^0,c
  7447   00E40E  0EFF               	movlw	255
  7448   00E410  142A               	andwf	(___fldiv@grs+2)^0,w,c
  7449   00E412  6E1F               	movwf	(??___fldiv+2)^0,c
  7450   00E414  0E7F               	movlw	127
  7451   00E416  142B               	andwf	(___fldiv@grs+3)^0,w,c
  7452   00E418  6E20               	movwf	(??___fldiv+3)^0,c
  7453   00E41A  501D               	movf	??___fldiv^0,w,c
  7454   00E41C  101E               	iorwf	(??___fldiv+1)^0,w,c
  7455   00E41E  101F               	iorwf	(??___fldiv+2)^0,w,c
  7456   00E420  1020               	iorwf	(??___fldiv+3)^0,w,c
  7457   00E422  B4D8               	btfsc	status,2,c
  7458   00E424  EF16  F072         	goto	u3181
  7459   00E428  EF18  F072         	goto	u3180
  7460   00E42C                     u3181:
  7461   00E42C  EF1C  F072         	goto	l946
  7462   00E430                     u3180:
  7463   00E430                     l3419:
  7464   00E430  0E01               	movlw	1
  7465   00E432  6E2D               	movwf	___fldiv@aexp^0,c
  7466   00E434  EF25  F072         	goto	l945
  7467   00E438                     l946:
  7468   00E438  A015               	btfss	___fldiv@b^0,0,c
  7469   00E43A  EF21  F072         	goto	u3191
  7470   00E43E  EF23  F072         	goto	u3190
  7471   00E442                     u3191:
  7472   00E442  EF25  F072         	goto	l945
  7473   00E446                     u3190:
  7474   00E446  EF18  F072         	goto	l3419
  7475   00E44A                     l945:
  7476   00E44A  502D               	movf	___fldiv@aexp^0,w,c
  7477   00E44C  B4D8               	btfsc	status,2,c
  7478   00E44E  EF2B  F072         	goto	u3201
  7479   00E452  EF2D  F072         	goto	u3200
  7480   00E456                     u3201:
  7481   00E456  EF51  F072         	goto	l3431
  7482   00E45A                     u3200:
  7483   00E45A  0E01               	movlw	1
  7484   00E45C  2615               	addwf	___fldiv@b^0,f,c
  7485   00E45E  0E00               	movlw	0
  7486   00E460  2216               	addwfc	(___fldiv@b+1)^0,f,c
  7487   00E462  2217               	addwfc	(___fldiv@b+2)^0,f,c
  7488   00E464  2218               	addwfc	(___fldiv@b+3)^0,f,c
  7489   00E466  A018               	btfss	(___fldiv@b+3)^0,0,c
  7490   00E468  EF38  F072         	goto	u3211
  7491   00E46C  EF3A  F072         	goto	u3210
  7492   00E470                     u3211:
  7493   00E470  EF51  F072         	goto	l3431
  7494   00E474                     u3210:
  7495   00E474  C015  F01D         	movff	___fldiv@b,??___fldiv
  7496   00E478  C016  F01E         	movff	___fldiv@b+1,??___fldiv+1
  7497   00E47C  C017  F01F         	movff	___fldiv@b+2,??___fldiv+2
  7498   00E480  C018  F020         	movff	___fldiv@b+3,??___fldiv+3
  7499   00E484  3420               	rlcf	(??___fldiv+3)^0,w,c
  7500   00E486  3220               	rrcf	(??___fldiv+3)^0,f,c
  7501   00E488  321F               	rrcf	(??___fldiv+2)^0,f,c
  7502   00E48A  321E               	rrcf	(??___fldiv+1)^0,f,c
  7503   00E48C  321D               	rrcf	??___fldiv^0,f,c
  7504   00E48E  C01D  F015         	movff	??___fldiv,___fldiv@b
  7505   00E492  C01E  F016         	movff	??___fldiv+1,___fldiv@b+1
  7506   00E496  C01F  F017         	movff	??___fldiv+2,___fldiv@b+2
  7507   00E49A  C020  F018         	movff	??___fldiv+3,___fldiv@b+3
  7508   00E49E  4A26               	infsnz	___fldiv@new_exp^0,f,c
  7509   00E4A0  2A27               	incf	(___fldiv@new_exp+1)^0,f,c
  7510   00E4A2                     l3431:
  7511   00E4A2  BE27               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7512   00E4A4  EF5C  F072         	goto	u3221
  7513   00E4A8  5027               	movf	(___fldiv@new_exp+1)^0,w,c
  7514   00E4AA  E108               	bnz	u3220
  7515   00E4AC  2826               	incf	___fldiv@new_exp^0,w,c
  7516   00E4AE  A0D8               	btfss	status,0,c
  7517   00E4B0  EF5C  F072         	goto	u3221
  7518   00E4B4  EF5E  F072         	goto	u3220
  7519   00E4B8                     u3221:
  7520   00E4B8  EF69  F072         	goto	l3435
  7521   00E4BC                     u3220:
  7522   00E4BC  0E00               	movlw	0
  7523   00E4BE  6E27               	movwf	(___fldiv@new_exp+1)^0,c
  7524   00E4C0  6826               	setf	___fldiv@new_exp^0,c
  7525   00E4C2  0E00               	movlw	0
  7526   00E4C4  6E15               	movwf	___fldiv@b^0,c
  7527   00E4C6  0E00               	movlw	0
  7528   00E4C8  6E16               	movwf	(___fldiv@b+1)^0,c
  7529   00E4CA  0E00               	movlw	0
  7530   00E4CC  6E17               	movwf	(___fldiv@b+2)^0,c
  7531   00E4CE  0E00               	movlw	0
  7532   00E4D0  6E18               	movwf	(___fldiv@b+3)^0,c
  7533   00E4D2                     l3435:
  7534   00E4D2  BE27               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7535   00E4D4  EF76  F072         	goto	u3230
  7536   00E4D8  5027               	movf	(___fldiv@new_exp+1)^0,w,c
  7537   00E4DA  E106               	bnz	u3231
  7538   00E4DC  0426               	decf	___fldiv@new_exp^0,w,c
  7539   00E4DE  B0D8               	btfsc	status,0,c
  7540   00E4E0  EF74  F072         	goto	u3231
  7541   00E4E4  EF76  F072         	goto	u3230
  7542   00E4E8                     u3231:
  7543   00E4E8  EF84  F072         	goto	l3439
  7544   00E4EC                     u3230:
  7545   00E4EC  0E00               	movlw	0
  7546   00E4EE  6E27               	movwf	(___fldiv@new_exp+1)^0,c
  7547   00E4F0  0E00               	movlw	0
  7548   00E4F2  6E26               	movwf	___fldiv@new_exp^0,c
  7549   00E4F4  0E00               	movlw	0
  7550   00E4F6  6E15               	movwf	___fldiv@b^0,c
  7551   00E4F8  0E00               	movlw	0
  7552   00E4FA  6E16               	movwf	(___fldiv@b+1)^0,c
  7553   00E4FC  0E00               	movlw	0
  7554   00E4FE  6E17               	movwf	(___fldiv@b+2)^0,c
  7555   00E500  0E00               	movlw	0
  7556   00E502  6E18               	movwf	(___fldiv@b+3)^0,c
  7557   00E504  0E00               	movlw	0
  7558   00E506  6E25               	movwf	___fldiv@sign^0,c
  7559   00E508                     l3439:
  7560   00E508  C026  F02C         	movff	___fldiv@new_exp,___fldiv@bexp
  7561   00E50C  A02C               	btfss	___fldiv@bexp^0,0,c
  7562   00E50E  EF8B  F072         	goto	u3241
  7563   00E512  EF8D  F072         	goto	u3240
  7564   00E516                     u3241:
  7565   00E516  EF90  F072         	goto	l3445
  7566   00E51A                     u3240:
  7567   00E51A  8E17               	bsf	(___fldiv@b+2)^0,7,c
  7568   00E51C  EF91  F072         	goto	l3447
  7569   00E520                     l3445:
  7570   00E520  9E17               	bcf	(___fldiv@b+2)^0,7,c
  7571   00E522                     l3447:
  7572   00E522  90D8               	bcf	status,0,c
  7573   00E524  302C               	rrcf	___fldiv@bexp^0,w,c
  7574   00E526  6E18               	movwf	(___fldiv@b+3)^0,c
  7575   00E528  EF47  F071         	goto	l3361
  7576   00E52C                     l932:
  7577   00E52C  0012               	return		;funcret
  7578   00E52E                     __end_of___fldiv:
  7579                           	callstack 0
  7580                           
  7581 ;; *************** function ___awmod *****************
  7582 ;; Defined at:
  7583 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awmod.c"
  7584 ;; Parameters:    Size  Location     Type
  7585 ;;  dividend        2    0[COMRAM] int 
  7586 ;;  divisor         2    2[COMRAM] int 
  7587 ;; Auto vars:     Size  Location     Type
  7588 ;;  sign            1    5[COMRAM] unsigned char 
  7589 ;;  counter         1    4[COMRAM] unsigned char 
  7590 ;; Return value:  Size  Location     Type
  7591 ;;                  2    0[COMRAM] int 
  7592 ;; Registers used:
  7593 ;;		wreg, status,2, status,0
  7594 ;; Tracked objects:
  7595 ;;		On entry : 0/0
  7596 ;;		On exit  : 0/0
  7597 ;;		Unchanged: 0/0
  7598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7599 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7600 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7602 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7603 ;;Total ram usage:        6 bytes
  7604 ;; Hardware stack levels used: 1
  7605 ;; This function calls:
  7606 ;;		Nothing
  7607 ;; This function is called by:
  7608 ;;		_efgtoa
  7609 ;; This function uses a non-reentrant model
  7610 ;;
  7611                           
  7612                           	psect	text23
  7613   00D2BC                     __ptext23:
  7614                           	callstack 0
  7615   00D2BC                     ___awmod:
  7616                           	callstack 26
  7617   00D2BC  0E00               	movlw	0
  7618   00D2BE  6E06               	movwf	___awmod@sign^0,c
  7619   00D2C0  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  7620   00D2C2  EF67  F069         	goto	u3500
  7621   00D2C6  EF65  F069         	goto	u3501
  7622   00D2CA                     u3501:
  7623   00D2CA  EF6D  F069         	goto	l3643
  7624   00D2CE                     u3500:
  7625   00D2CE  6C01               	negf	___awmod@dividend^0,c
  7626   00D2D0  1E02               	comf	(___awmod@dividend+1)^0,f,c
  7627   00D2D2  B0D8               	btfsc	status,0,c
  7628   00D2D4  2A02               	incf	(___awmod@dividend+1)^0,f,c
  7629   00D2D6  0E01               	movlw	1
  7630   00D2D8  6E06               	movwf	___awmod@sign^0,c
  7631   00D2DA                     l3643:
  7632   00D2DA  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  7633   00D2DC  EF74  F069         	goto	u3510
  7634   00D2E0  EF72  F069         	goto	u3511
  7635   00D2E4                     u3511:
  7636   00D2E4  EF78  F069         	goto	l3647
  7637   00D2E8                     u3510:
  7638   00D2E8  6C03               	negf	___awmod@divisor^0,c
  7639   00D2EA  1E04               	comf	(___awmod@divisor+1)^0,f,c
  7640   00D2EC  B0D8               	btfsc	status,0,c
  7641   00D2EE  2A04               	incf	(___awmod@divisor+1)^0,f,c
  7642   00D2F0                     l3647:
  7643   00D2F0  5003               	movf	___awmod@divisor^0,w,c
  7644   00D2F2  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  7645   00D2F4  B4D8               	btfsc	status,2,c
  7646   00D2F6  EF7F  F069         	goto	u3521
  7647   00D2FA  EF81  F069         	goto	u3520
  7648   00D2FE                     u3521:
  7649   00D2FE  EFA5  F069         	goto	l3663
  7650   00D302                     u3520:
  7651   00D302  0E01               	movlw	1
  7652   00D304  6E05               	movwf	___awmod@counter^0,c
  7653   00D306  EF89  F069         	goto	l3653
  7654   00D30A                     l3651:
  7655   00D30A  90D8               	bcf	status,0,c
  7656   00D30C  3603               	rlcf	___awmod@divisor^0,f,c
  7657   00D30E  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  7658   00D310  2A05               	incf	___awmod@counter^0,f,c
  7659   00D312                     l3653:
  7660   00D312  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  7661   00D314  EF8E  F069         	goto	u3531
  7662   00D318  EF90  F069         	goto	u3530
  7663   00D31C                     u3531:
  7664   00D31C  EF85  F069         	goto	l3651
  7665   00D320                     u3530:
  7666   00D320                     l3655:
  7667   00D320  5003               	movf	___awmod@divisor^0,w,c
  7668   00D322  5C01               	subwf	___awmod@dividend^0,w,c
  7669   00D324  5004               	movf	(___awmod@divisor+1)^0,w,c
  7670   00D326  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  7671   00D328  A0D8               	btfss	status,0,c
  7672   00D32A  EF99  F069         	goto	u3541
  7673   00D32E  EF9B  F069         	goto	u3540
  7674   00D332                     u3541:
  7675   00D332  EF9F  F069         	goto	l3659
  7676   00D336                     u3540:
  7677   00D336  5003               	movf	___awmod@divisor^0,w,c
  7678   00D338  5E01               	subwf	___awmod@dividend^0,f,c
  7679   00D33A  5004               	movf	(___awmod@divisor+1)^0,w,c
  7680   00D33C  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  7681   00D33E                     l3659:
  7682   00D33E  90D8               	bcf	status,0,c
  7683   00D340  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  7684   00D342  3203               	rrcf	___awmod@divisor^0,f,c
  7685   00D344  2E05               	decfsz	___awmod@counter^0,f,c
  7686   00D346  EF90  F069         	goto	l3655
  7687   00D34A                     l3663:
  7688   00D34A  5006               	movf	___awmod@sign^0,w,c
  7689   00D34C  B4D8               	btfsc	status,2,c
  7690   00D34E  EFAB  F069         	goto	u3551
  7691   00D352  EFAD  F069         	goto	u3550
  7692   00D356                     u3551:
  7693   00D356  EFB1  F069         	goto	l3667
  7694   00D35A                     u3550:
  7695   00D35A  6C01               	negf	___awmod@dividend^0,c
  7696   00D35C  1E02               	comf	(___awmod@dividend+1)^0,f,c
  7697   00D35E  B0D8               	btfsc	status,0,c
  7698   00D360  2A02               	incf	(___awmod@dividend+1)^0,f,c
  7699   00D362                     l3667:
  7700   00D362  C001  F001         	movff	___awmod@dividend,?___awmod
  7701   00D366  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  7702   00D36A  0012               	return		;funcret
  7703   00D36C                     __end_of___awmod:
  7704                           	callstack 0
  7705                           
  7706 ;; *************** function ___awdiv *****************
  7707 ;; Defined at:
  7708 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awdiv.c"
  7709 ;; Parameters:    Size  Location     Type
  7710 ;;  dividend        2    0[COMRAM] int 
  7711 ;;  divisor         2    2[COMRAM] int 
  7712 ;; Auto vars:     Size  Location     Type
  7713 ;;  quotient        2    6[COMRAM] int 
  7714 ;;  sign            1    5[COMRAM] unsigned char 
  7715 ;;  counter         1    4[COMRAM] unsigned char 
  7716 ;; Return value:  Size  Location     Type
  7717 ;;                  2    0[COMRAM] int 
  7718 ;; Registers used:
  7719 ;;		wreg, status,2, status,0
  7720 ;; Tracked objects:
  7721 ;;		On entry : 0/0
  7722 ;;		On exit  : 0/0
  7723 ;;		Unchanged: 0/0
  7724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7725 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7726 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7728 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7729 ;;Total ram usage:        8 bytes
  7730 ;; Hardware stack levels used: 1
  7731 ;; This function calls:
  7732 ;;		Nothing
  7733 ;; This function is called by:
  7734 ;;		_efgtoa
  7735 ;; This function uses a non-reentrant model
  7736 ;;
  7737                           
  7738                           	psect	text24
  7739   00D36C                     __ptext24:
  7740                           	callstack 0
  7741   00D36C                     ___awdiv:
  7742                           	callstack 26
  7743   00D36C  0E00               	movlw	0
  7744   00D36E  6E06               	movwf	___awdiv@sign^0,c
  7745   00D370  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  7746   00D372  EFBF  F069         	goto	u3440
  7747   00D376  EFBD  F069         	goto	u3441
  7748   00D37A                     u3441:
  7749   00D37A  EFC5  F069         	goto	l3599
  7750   00D37E                     u3440:
  7751   00D37E  6C03               	negf	___awdiv@divisor^0,c
  7752   00D380  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  7753   00D382  B0D8               	btfsc	status,0,c
  7754   00D384  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  7755   00D386  0E01               	movlw	1
  7756   00D388  6E06               	movwf	___awdiv@sign^0,c
  7757   00D38A                     l3599:
  7758   00D38A  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  7759   00D38C  EFCC  F069         	goto	u3450
  7760   00D390  EFCA  F069         	goto	u3451
  7761   00D394                     u3451:
  7762   00D394  EFD2  F069         	goto	l3605
  7763   00D398                     u3450:
  7764   00D398  6C01               	negf	___awdiv@dividend^0,c
  7765   00D39A  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  7766   00D39C  B0D8               	btfsc	status,0,c
  7767   00D39E  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  7768   00D3A0  0E01               	movlw	1
  7769   00D3A2  1A06               	xorwf	___awdiv@sign^0,f,c
  7770   00D3A4                     l3605:
  7771   00D3A4  0E00               	movlw	0
  7772   00D3A6  6E08               	movwf	(___awdiv@quotient+1)^0,c
  7773   00D3A8  0E00               	movlw	0
  7774   00D3AA  6E07               	movwf	___awdiv@quotient^0,c
  7775   00D3AC  5003               	movf	___awdiv@divisor^0,w,c
  7776   00D3AE  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  7777   00D3B0  B4D8               	btfsc	status,2,c
  7778   00D3B2  EFDD  F069         	goto	u3461
  7779   00D3B6  EFDF  F069         	goto	u3460
  7780   00D3BA                     u3461:
  7781   00D3BA  EF07  F06A         	goto	l3627
  7782   00D3BE                     u3460:
  7783   00D3BE  0E01               	movlw	1
  7784   00D3C0  6E05               	movwf	___awdiv@counter^0,c
  7785   00D3C2  EFE7  F069         	goto	l3613
  7786   00D3C6                     l3611:
  7787   00D3C6  90D8               	bcf	status,0,c
  7788   00D3C8  3603               	rlcf	___awdiv@divisor^0,f,c
  7789   00D3CA  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  7790   00D3CC  2A05               	incf	___awdiv@counter^0,f,c
  7791   00D3CE                     l3613:
  7792   00D3CE  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  7793   00D3D0  EFEC  F069         	goto	u3471
  7794   00D3D4  EFEE  F069         	goto	u3470
  7795   00D3D8                     u3471:
  7796   00D3D8  EFE3  F069         	goto	l3611
  7797   00D3DC                     u3470:
  7798   00D3DC                     l3615:
  7799   00D3DC  90D8               	bcf	status,0,c
  7800   00D3DE  3607               	rlcf	___awdiv@quotient^0,f,c
  7801   00D3E0  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  7802   00D3E2  5003               	movf	___awdiv@divisor^0,w,c
  7803   00D3E4  5C01               	subwf	___awdiv@dividend^0,w,c
  7804   00D3E6  5004               	movf	(___awdiv@divisor+1)^0,w,c
  7805   00D3E8  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  7806   00D3EA  A0D8               	btfss	status,0,c
  7807   00D3EC  EFFA  F069         	goto	u3481
  7808   00D3F0  EFFC  F069         	goto	u3480
  7809   00D3F4                     u3481:
  7810   00D3F4  EF01  F06A         	goto	l3623
  7811   00D3F8                     u3480:
  7812   00D3F8  5003               	movf	___awdiv@divisor^0,w,c
  7813   00D3FA  5E01               	subwf	___awdiv@dividend^0,f,c
  7814   00D3FC  5004               	movf	(___awdiv@divisor+1)^0,w,c
  7815   00D3FE  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  7816   00D400  8007               	bsf	___awdiv@quotient^0,0,c
  7817   00D402                     l3623:
  7818   00D402  90D8               	bcf	status,0,c
  7819   00D404  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  7820   00D406  3203               	rrcf	___awdiv@divisor^0,f,c
  7821   00D408  2E05               	decfsz	___awdiv@counter^0,f,c
  7822   00D40A  EFEE  F069         	goto	l3615
  7823   00D40E                     l3627:
  7824   00D40E  5006               	movf	___awdiv@sign^0,w,c
  7825   00D410  B4D8               	btfsc	status,2,c
  7826   00D412  EF0D  F06A         	goto	u3491
  7827   00D416  EF0F  F06A         	goto	u3490
  7828   00D41A                     u3491:
  7829   00D41A  EF13  F06A         	goto	l3631
  7830   00D41E                     u3490:
  7831   00D41E  6C07               	negf	___awdiv@quotient^0,c
  7832   00D420  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  7833   00D422  B0D8               	btfsc	status,0,c
  7834   00D424  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  7835   00D426                     l3631:
  7836   00D426  C007  F001         	movff	___awdiv@quotient,?___awdiv
  7837   00D42A  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  7838   00D42E  0012               	return		;funcret
  7839   00D430                     __end_of___awdiv:
  7840                           	callstack 0
  7841                           
  7842 ;; *************** function _atoi *****************
  7843 ;; Defined at:
  7844 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\atoi.c"
  7845 ;; Parameters:    Size  Location     Type
  7846 ;;  s               2    6[COMRAM] PTR const unsigned char 
  7847 ;;		 -> STR_13(5), STR_10(3), STR_4(3), 
  7848 ;; Auto vars:     Size  Location     Type
  7849 ;;  n               2   13[COMRAM] int 
  7850 ;;  neg             2   11[COMRAM] int 
  7851 ;; Return value:  Size  Location     Type
  7852 ;;                  2    6[COMRAM] int 
  7853 ;; Registers used:
  7854 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7855 ;; Tracked objects:
  7856 ;;		On entry : 0/0
  7857 ;;		On exit  : 0/0
  7858 ;;		Unchanged: 0/0
  7859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7860 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7861 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7862 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7863 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7864 ;;Total ram usage:        9 bytes
  7865 ;; Hardware stack levels used: 1
  7866 ;; Hardware stack levels required when called: 1
  7867 ;; This function calls:
  7868 ;;		___wmul
  7869 ;;		_isdigit
  7870 ;;		_isspace
  7871 ;; This function is called by:
  7872 ;;		_vfpfcnvrt
  7873 ;; This function uses a non-reentrant model
  7874 ;;
  7875                           
  7876                           	psect	text25
  7877   00D8EC                     __ptext25:
  7878                           	callstack 0
  7879   00D8EC                     _atoi:
  7880                           	callstack 26
  7881   00D8EC  0E00               	movlw	0
  7882   00D8EE  6E0F               	movwf	(atoi@n+1)^0,c
  7883   00D8F0  0E00               	movlw	0
  7884   00D8F2  6E0E               	movwf	atoi@n^0,c
  7885   00D8F4  0E00               	movlw	0
  7886   00D8F6  6E0D               	movwf	(atoi@neg+1)^0,c
  7887   00D8F8  0E00               	movlw	0
  7888   00D8FA  6E0C               	movwf	atoi@neg^0,c
  7889   00D8FC  EF82  F06C         	goto	l4241
  7890   00D900                     l4237:
  7891   00D900  4A07               	infsnz	atoi@s^0,f,c
  7892   00D902  2A08               	incf	(atoi@s+1)^0,f,c
  7893   00D904                     l4241:
  7894   00D904  C007  FFF6         	movff	atoi@s,tblptrl
  7895   00D908  C008  FFF7         	movff	atoi@s+1,tblptrh
  7896   00D90C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7897   00D90C  6AF8               	clrf	tblptru,c
  7898   00D90E                     	endif
  7899   00D90E                     	if	0	;tblptru may be non-zero
  7900   00D90E                     	endif
  7901   00D90E  0008               	tblrd		*
  7902   00D910  50F5               	movf	tablat,w,c
  7903   00D912  0A20               	xorlw	32
  7904   00D914  B4D8               	btfsc	status,2,c
  7905   00D916  EF8F  F06C         	goto	u4611
  7906   00D91A  EF91  F06C         	goto	u4610
  7907   00D91E                     u4611:
  7908   00D91E  EF80  F06C         	goto	l4237
  7909   00D922                     u4610:
  7910   00D922  C007  FFF6         	movff	atoi@s,tblptrl
  7911   00D926  C008  FFF7         	movff	atoi@s+1,tblptrh
  7912   00D92A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7913   00D92A  6AF8               	clrf	tblptru,c
  7914   00D92C                     	endif
  7915   00D92C                     	if	0	;tblptru may be non-zero
  7916   00D92C                     	endif
  7917   00D92C  0008               	tblrd		*
  7918   00D92E  CFF5 F009          	movff	tablat,??_atoi
  7919   00D932  0EF7               	movlw	247
  7920   00D934  2409               	addwf	??_atoi^0,w,c
  7921   00D936  6E0A               	movwf	(??_atoi+1)^0,c
  7922   00D938  6A0B               	clrf	(??_atoi+2)^0,c
  7923   00D93A  0EFF               	movlw	255
  7924   00D93C  220B               	addwfc	(??_atoi+2)^0,f,c
  7925   00D93E  500B               	movf	(??_atoi+2)^0,w,c
  7926   00D940  E109               	bnz	u4620
  7927   00D942  0E05               	movlw	5
  7928   00D944  5C0A               	subwf	(??_atoi+1)^0,w,c
  7929   00D946  A0D8               	btfss	status,0,c
  7930   00D948  EFA8  F06C         	goto	u4621
  7931   00D94C  EFAA  F06C         	goto	u4620
  7932   00D950                     u4621:
  7933   00D950  EF80  F06C         	goto	l4237
  7934   00D954                     u4620:
  7935   00D954  EFB4  F06C         	goto	l4249
  7936   00D958                     l4245:
  7937   00D958  0E00               	movlw	0
  7938   00D95A  6E0D               	movwf	(atoi@neg+1)^0,c
  7939   00D95C  0E01               	movlw	1
  7940   00D95E  6E0C               	movwf	atoi@neg^0,c
  7941   00D960                     l4247:
  7942   00D960  4A07               	infsnz	atoi@s^0,f,c
  7943   00D962  2A08               	incf	(atoi@s+1)^0,f,c
  7944   00D964  EFEB  F06C         	goto	l4257
  7945   00D968                     l4249:
  7946   00D968  C007  FFF6         	movff	atoi@s,tblptrl
  7947   00D96C  C008  FFF7         	movff	atoi@s+1,tblptrh
  7948   00D970                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7949   00D970  6AF8               	clrf	tblptru,c
  7950   00D972                     	endif
  7951   00D972                     	if	0	;tblptru may be non-zero
  7952   00D972                     	endif
  7953   00D972  0008               	tblrd		*
  7954   00D974  50F5               	movf	tablat,w,c
  7955   00D976  6E09               	movwf	??_atoi^0,c
  7956   00D978  6A0A               	clrf	(??_atoi+1)^0,c
  7957                           
  7958                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7959                           ; Switch size 1, requested type "simple"
  7960                           ; Number of cases is 1, Range of values is 0 to 0
  7961                           ; switch strategies available:
  7962                           ; Name         Instructions Cycles
  7963                           ; simple_byte            4     3 (average)
  7964                           ;	Chosen strategy is simple_byte
  7965   00D97A  500A               	movf	(??_atoi+1)^0,w,c
  7966   00D97C  0A00               	xorlw	0	; case 0
  7967   00D97E  B4D8               	btfsc	status,2,c
  7968   00D980  EFC4  F06C         	goto	l4877
  7969   00D984  EFEB  F06C         	goto	l4257
  7970   00D988                     l4877:
  7971                           
  7972                           ; Switch size 1, requested type "simple"
  7973                           ; Number of cases is 2, Range of values is 43 to 45
  7974                           ; switch strategies available:
  7975                           ; Name         Instructions Cycles
  7976                           ; simple_byte            7     4 (average)
  7977                           ;	Chosen strategy is simple_byte
  7978   00D988  5009               	movf	??_atoi^0,w,c
  7979   00D98A  0A2B               	xorlw	43	; case 43
  7980   00D98C  B4D8               	btfsc	status,2,c
  7981   00D98E  EFB0  F06C         	goto	l4247
  7982   00D992  0A06               	xorlw	6	; case 45
  7983   00D994  B4D8               	btfsc	status,2,c
  7984   00D996  EFAC  F06C         	goto	l4245
  7985   00D99A  EFEB  F06C         	goto	l4257
  7986   00D99E                     l4251:
  7987   00D99E  C00E  F001         	movff	atoi@n,___wmul@multiplier
  7988   00D9A2  C00F  F002         	movff	atoi@n+1,___wmul@multiplier+1
  7989   00D9A6  0E00               	movlw	0
  7990   00D9A8  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  7991   00D9AA  0E0A               	movlw	10
  7992   00D9AC  6E03               	movwf	___wmul@multiplicand^0,c
  7993   00D9AE  EC64  F065         	call	___wmul	;wreg free
  7994   00D9B2  C007  FFF6         	movff	atoi@s,tblptrl
  7995   00D9B6  C008  FFF7         	movff	atoi@s+1,tblptrh
  7996   00D9BA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7997   00D9BA  6AF8               	clrf	tblptru,c
  7998   00D9BC                     	endif
  7999   00D9BC                     	if	0	;tblptru may be non-zero
  8000   00D9BC                     	endif
  8001   00D9BC  0008               	tblrd		*
  8002   00D9BE  50F5               	movf	tablat,w,c
  8003   00D9C0  5E01               	subwf	?___wmul^0,f,c
  8004   00D9C2  0E00               	movlw	0
  8005   00D9C4  5A02               	subwfb	(?___wmul+1)^0,f,c
  8006   00D9C6  0E30               	movlw	48
  8007   00D9C8  2401               	addwf	?___wmul^0,w,c
  8008   00D9CA  6E0E               	movwf	atoi@n^0,c
  8009   00D9CC  0E00               	movlw	0
  8010   00D9CE  2002               	addwfc	(?___wmul+1)^0,w,c
  8011   00D9D0  6E0F               	movwf	(atoi@n+1)^0,c
  8012   00D9D2  EFB0  F06C         	goto	l4247
  8013   00D9D6                     l4257:
  8014   00D9D6  C007  FFF6         	movff	atoi@s,tblptrl
  8015   00D9DA  C008  FFF7         	movff	atoi@s+1,tblptrh
  8016   00D9DE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8017   00D9DE  6AF8               	clrf	tblptru,c
  8018   00D9E0                     	endif
  8019   00D9E0                     	if	0	;tblptru may be non-zero
  8020   00D9E0                     	endif
  8021   00D9E0  0008               	tblrd		*
  8022   00D9E2  CFF5 F009          	movff	tablat,??_atoi
  8023   00D9E6  0ED0               	movlw	208
  8024   00D9E8  2409               	addwf	??_atoi^0,w,c
  8025   00D9EA  6E0A               	movwf	(??_atoi+1)^0,c
  8026   00D9EC  6A0B               	clrf	(??_atoi+2)^0,c
  8027   00D9EE  0EFF               	movlw	255
  8028   00D9F0  220B               	addwfc	(??_atoi+2)^0,f,c
  8029   00D9F2  500B               	movf	(??_atoi+2)^0,w,c
  8030   00D9F4  E109               	bnz	u4630
  8031   00D9F6  0E0A               	movlw	10
  8032   00D9F8  5C0A               	subwf	(??_atoi+1)^0,w,c
  8033   00D9FA  A0D8               	btfss	status,0,c
  8034   00D9FC  EF02  F06D         	goto	u4631
  8035   00DA00  EF04  F06D         	goto	u4630
  8036   00DA04                     u4631:
  8037   00DA04  EFCF  F06C         	goto	l4251
  8038   00DA08                     u4630:
  8039   00DA08  500C               	movf	atoi@neg^0,w,c
  8040   00DA0A  100D               	iorwf	(atoi@neg+1)^0,w,c
  8041   00DA0C  A4D8               	btfss	status,2,c
  8042   00DA0E  EF0B  F06D         	goto	u4641
  8043   00DA12  EF0D  F06D         	goto	u4640
  8044   00DA16                     u4641:
  8045   00DA16  EF1B  F06D         	goto	l1235
  8046   00DA1A                     u4640:
  8047   00DA1A  C00E  F009         	movff	atoi@n,??_atoi
  8048   00DA1E  C00F  F00A         	movff	atoi@n+1,??_atoi+1
  8049   00DA22  1E09               	comf	??_atoi^0,f,c
  8050   00DA24  1E0A               	comf	(??_atoi+1)^0,f,c
  8051   00DA26  4A09               	infsnz	??_atoi^0,f,c
  8052   00DA28  2A0A               	incf	(??_atoi+1)^0,f,c
  8053   00DA2A  C009  F007         	movff	??_atoi,?_atoi
  8054   00DA2E  C00A  F008         	movff	??_atoi+1,?_atoi+1
  8055   00DA32  EF1F  F06D         	goto	l1238
  8056   00DA36                     l1235:
  8057   00DA36  C00E  F007         	movff	atoi@n,?_atoi
  8058   00DA3A  C00F  F008         	movff	atoi@n+1,?_atoi+1
  8059   00DA3E                     l1238:
  8060   00DA3E  0012               	return		;funcret
  8061   00DA40                     __end_of_atoi:
  8062                           	callstack 0
  8063                           
  8064 ;; *************** function _isspace *****************
  8065 ;; Defined at:
  8066 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isspace.c"
  8067 ;; Parameters:    Size  Location     Type
  8068 ;;  c               2    0[COMRAM] int 
  8069 ;; Auto vars:     Size  Location     Type
  8070 ;;		None
  8071 ;; Return value:  Size  Location     Type
  8072 ;;                  2    0[COMRAM] int 
  8073 ;; Registers used:
  8074 ;;		wreg, status,2, status,0
  8075 ;; Tracked objects:
  8076 ;;		On entry : 0/0
  8077 ;;		On exit  : 0/0
  8078 ;;		Unchanged: 0/0
  8079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8080 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8081 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8082 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8083 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8084 ;;Total ram usage:        5 bytes
  8085 ;; Hardware stack levels used: 1
  8086 ;; This function calls:
  8087 ;;		Nothing
  8088 ;; This function is called by:
  8089 ;;		_atoi
  8090 ;; This function uses a non-reentrant model
  8091 ;;
  8092                           
  8093                           	psect	text26
  8094   00CD14                     __ptext26:
  8095                           	callstack 0
  8096   00CD14                     _isspace:
  8097                           	callstack 26
  8098   00CD14  0E01               	movlw	1
  8099   00CD16  6E05               	movwf	_isspace$1636^0,c
  8100   00CD18  0E20               	movlw	32
  8101   00CD1A  1801               	xorwf	isspace@c^0,w,c
  8102   00CD1C  1002               	iorwf	(isspace@c+1)^0,w,c
  8103   00CD1E  B4D8               	btfsc	status,2,c
  8104   00CD20  EF94  F066         	goto	u3961
  8105   00CD24  EF96  F066         	goto	u3960
  8106   00CD28                     u3961:
  8107   00CD28  EFA9  F066         	goto	l3857
  8108   00CD2C                     u3960:
  8109   00CD2C  0EF7               	movlw	247
  8110   00CD2E  2401               	addwf	isspace@c^0,w,c
  8111   00CD30  6E03               	movwf	??_isspace^0,c
  8112   00CD32  0EFF               	movlw	255
  8113   00CD34  2002               	addwfc	(isspace@c+1)^0,w,c
  8114   00CD36  6E04               	movwf	(??_isspace+1)^0,c
  8115   00CD38  5004               	movf	(??_isspace+1)^0,w,c
  8116   00CD3A  E109               	bnz	u3970
  8117   00CD3C  0E05               	movlw	5
  8118   00CD3E  5C03               	subwf	??_isspace^0,w,c
  8119   00CD40  A0D8               	btfss	status,0,c
  8120   00CD42  EFA5  F066         	goto	u3971
  8121   00CD46  EFA7  F066         	goto	u3970
  8122   00CD4A                     u3971:
  8123   00CD4A  EFA9  F066         	goto	l3857
  8124   00CD4E                     u3970:
  8125   00CD4E  0E00               	movlw	0
  8126   00CD50  6E05               	movwf	_isspace$1636^0,c
  8127   00CD52                     l3857:
  8128   00CD52  C005  F001         	movff	_isspace$1636,?_isspace
  8129   00CD56  6A02               	clrf	(?_isspace+1)^0,c
  8130   00CD58  0012               	return		;funcret
  8131   00CD5A                     __end_of_isspace:
  8132                           	callstack 0
  8133                           
  8134 ;; *************** function _isdigit *****************
  8135 ;; Defined at:
  8136 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isdigit.c"
  8137 ;; Parameters:    Size  Location     Type
  8138 ;;  c               2    0[COMRAM] int 
  8139 ;; Auto vars:     Size  Location     Type
  8140 ;;		None
  8141 ;; Return value:  Size  Location     Type
  8142 ;;                  2    0[COMRAM] int 
  8143 ;; Registers used:
  8144 ;;		wreg, status,2, status,0
  8145 ;; Tracked objects:
  8146 ;;		On entry : 0/0
  8147 ;;		On exit  : 0/0
  8148 ;;		Unchanged: 0/0
  8149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8150 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8152 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8153 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8154 ;;Total ram usage:        4 bytes
  8155 ;; Hardware stack levels used: 1
  8156 ;; This function calls:
  8157 ;;		Nothing
  8158 ;; This function is called by:
  8159 ;;		_vfpfcnvrt
  8160 ;;		_atoi
  8161 ;; This function uses a non-reentrant model
  8162 ;;
  8163                           
  8164                           	psect	text27
  8165   00CB3E                     __ptext27:
  8166                           	callstack 0
  8167   00CB3E                     _isdigit:
  8168                           	callstack 27
  8169   00CB3E  0ED0               	movlw	208
  8170   00CB40  2401               	addwf	isdigit@c^0,w,c
  8171   00CB42  6E03               	movwf	??_isdigit^0,c
  8172   00CB44  0EFF               	movlw	255
  8173   00CB46  2002               	addwfc	(isdigit@c+1)^0,w,c
  8174   00CB48  6E04               	movwf	(??_isdigit+1)^0,c
  8175   00CB4A  5004               	movf	(??_isdigit+1)^0,w,c
  8176   00CB4C  E10A               	bnz	u3940
  8177   00CB4E  0E0A               	movlw	10
  8178   00CB50  5C03               	subwf	??_isdigit^0,w,c
  8179   00CB52  A0D8               	btfss	status,0,c
  8180   00CB54  EFAE  F065         	goto	u3941
  8181   00CB58  EFB1  F065         	goto	u3940
  8182   00CB5C                     u3941:
  8183   00CB5C  0E01               	movlw	1
  8184   00CB5E  EFB2  F065         	goto	u3950
  8185   00CB62                     u3940:
  8186   00CB62  0E00               	movlw	0
  8187   00CB64                     u3950:
  8188   00CB64  6E01               	movwf	?_isdigit^0,c
  8189   00CB66  6A02               	clrf	(?_isdigit+1)^0,c
  8190   00CB68  0012               	return		;funcret
  8191   00CB6A                     __end_of_isdigit:
  8192                           	callstack 0
  8193                           
  8194 ;; *************** function ___wmul *****************
  8195 ;; Defined at:
  8196 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  8197 ;; Parameters:    Size  Location     Type
  8198 ;;  multiplier      2    0[COMRAM] unsigned int 
  8199 ;;  multiplicand    2    2[COMRAM] unsigned int 
  8200 ;; Auto vars:     Size  Location     Type
  8201 ;;  product         2    4[COMRAM] unsigned int 
  8202 ;; Return value:  Size  Location     Type
  8203 ;;                  2    0[COMRAM] unsigned int 
  8204 ;; Registers used:
  8205 ;;		wreg, status,2, status,0, prodl, prodh
  8206 ;; Tracked objects:
  8207 ;;		On entry : 0/0
  8208 ;;		On exit  : 0/0
  8209 ;;		Unchanged: 0/0
  8210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8211 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8212 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8214 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8215 ;;Total ram usage:        6 bytes
  8216 ;; Hardware stack levels used: 1
  8217 ;; This function calls:
  8218 ;;		Nothing
  8219 ;; This function is called by:
  8220 ;;		_main
  8221 ;;		_atoi
  8222 ;; This function uses a non-reentrant model
  8223 ;;
  8224                           
  8225                           	psect	text28
  8226   00CAC8                     __ptext28:
  8227                           	callstack 0
  8228   00CAC8                     ___wmul:
  8229                           	callstack 26
  8230   00CAC8  5001               	movf	___wmul@multiplier^0,w,c
  8231   00CACA  0203               	mulwf	___wmul@multiplicand^0,c
  8232   00CACC  CFF3 F005          	movff	prodl,___wmul@product
  8233   00CAD0  CFF4 F006          	movff	prodh,___wmul@product+1
  8234   00CAD4  5001               	movf	___wmul@multiplier^0,w,c
  8235   00CAD6  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  8236   00CAD8  50F3               	movf	243,w,c
  8237   00CADA  2606               	addwf	(___wmul@product+1)^0,f,c
  8238   00CADC  5002               	movf	(___wmul@multiplier+1)^0,w,c
  8239   00CADE  0203               	mulwf	___wmul@multiplicand^0,c
  8240   00CAE0  50F3               	movf	243,w,c
  8241   00CAE2  2606               	addwf	(___wmul@product+1)^0,f,c
  8242   00CAE4  C005  F001         	movff	___wmul@product,?___wmul
  8243   00CAE8  C006  F002         	movff	___wmul@product+1,?___wmul+1
  8244   00CAEC  0012               	return		;funcret
  8245   00CAEE                     __end_of___wmul:
  8246                           	callstack 0
  8247                           
  8248 ;; *************** function _i2c_driver_init *****************
  8249 ;; Defined at:
  8250 ;;		line 26 in file "i2c_driver.c"
  8251 ;; Parameters:    Size  Location     Type
  8252 ;;		None
  8253 ;; Auto vars:     Size  Location     Type
  8254 ;;		None
  8255 ;; Return value:  Size  Location     Type
  8256 ;;                  1    wreg      void 
  8257 ;; Registers used:
  8258 ;;		wreg, status,2
  8259 ;; Tracked objects:
  8260 ;;		On entry : 0/0
  8261 ;;		On exit  : 0/0
  8262 ;;		Unchanged: 0/0
  8263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8265 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8267 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8268 ;;Total ram usage:        0 bytes
  8269 ;; Hardware stack levels used: 1
  8270 ;; This function calls:
  8271 ;;		Nothing
  8272 ;; This function is called by:
  8273 ;;		_main
  8274 ;; This function uses a non-reentrant model
  8275 ;;
  8276                           
  8277                           	psect	text29
  8278   00CA68                     __ptext29:
  8279                           	callstack 0
  8280   00CA68                     _i2c_driver_init:
  8281                           	callstack 30
  8282   00CA68                     
  8283                           ;i2c_driver.c: 28:     SSP1STAT = 0x00;
  8284   00CA68  0E00               	movlw	0
  8285   00CA6A  6EC7               	movwf	199,c	;volatile
  8286                           
  8287                           ;i2c_driver.c: 29:     SSP1CON1 = 0x08;
  8288   00CA6C  0E08               	movlw	8
  8289   00CA6E  6EC6               	movwf	198,c	;volatile
  8290                           
  8291                           ;i2c_driver.c: 30:     SSP1CON2 = 0x00;
  8292   00CA70  0E00               	movlw	0
  8293   00CA72  6EC5               	movwf	197,c	;volatile
  8294                           
  8295                           ;i2c_driver.c: 31:     SSP1ADD = 0x27;
  8296   00CA74  0E27               	movlw	39
  8297   00CA76  6EC8               	movwf	200,c	;volatile
  8298   00CA78                     
  8299                           ;i2c_driver.c: 32:     SSP1CON1bits.SSPEN = 1;
  8300   00CA78  8AC6               	bsf	198,5,c	;volatile
  8301   00CA7A  0012               	return		;funcret
  8302   00CA7C                     __end_of_i2c_driver_init:
  8303                           	callstack 0
  8304                           
  8305 ;; *************** function ___xxtofl *****************
  8306 ;; Defined at:
  8307 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
  8308 ;; Parameters:    Size  Location     Type
  8309 ;;  sign            1    wreg     unsigned char 
  8310 ;;  val             4    6[COMRAM] long 
  8311 ;; Auto vars:     Size  Location     Type
  8312 ;;  sign            1   14[COMRAM] unsigned char 
  8313 ;;  arg             4   16[COMRAM] unsigned long 
  8314 ;;  exp             1   15[COMRAM] unsigned char 
  8315 ;; Return value:  Size  Location     Type
  8316 ;;                  4    6[COMRAM] unsigned char 
  8317 ;; Registers used:
  8318 ;;		wreg, status,2, status,0
  8319 ;; Tracked objects:
  8320 ;;		On entry : 0/0
  8321 ;;		On exit  : 0/0
  8322 ;;		Unchanged: 0/0
  8323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8324 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8325 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8326 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8327 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8328 ;;Total ram usage:       14 bytes
  8329 ;; Hardware stack levels used: 1
  8330 ;; This function calls:
  8331 ;;		Nothing
  8332 ;; This function is called by:
  8333 ;;		_main
  8334 ;; This function uses a non-reentrant model
  8335 ;;
  8336                           
  8337                           	psect	text30
  8338   00DBD6                     __ptext30:
  8339                           	callstack 0
  8340   00DBD6                     ___xxtofl:
  8341                           	callstack 30
  8342                           
  8343                           ;incstack = 0
  8344                           ;___xxtofl@sign stored from wreg
  8345   00DBD6  6E0F               	movwf	___xxtofl@sign^0,c
  8346   00DBD8  500F               	movf	___xxtofl@sign^0,w,c
  8347   00DBDA  B4D8               	btfsc	status,2,c
  8348   00DBDC  EFF2  F06D         	goto	u4871
  8349   00DBE0  EFF4  F06D         	goto	u4870
  8350   00DBE4                     u4871:
  8351   00DBE4  EF16  F06E         	goto	l1005
  8352   00DBE8                     u4870:
  8353   00DBE8  BE0A               	btfsc	(___xxtofl@val+3)^0,7,c
  8354   00DBEA  EFFB  F06D         	goto	u4880
  8355   00DBEE  EFF9  F06D         	goto	u4881
  8356   00DBF2                     u4881:
  8357   00DBF2  EF16  F06E         	goto	l1005
  8358   00DBF6                     u4880:
  8359   00DBF6  C007  F00B         	movff	___xxtofl@val,??___xxtofl
  8360   00DBFA  C008  F00C         	movff	___xxtofl@val+1,??___xxtofl+1
  8361   00DBFE  C009  F00D         	movff	___xxtofl@val+2,??___xxtofl+2
  8362   00DC02  C00A  F00E         	movff	___xxtofl@val+3,??___xxtofl+3
  8363   00DC06  1E0B               	comf	??___xxtofl^0,f,c
  8364   00DC08  1E0C               	comf	(??___xxtofl+1)^0,f,c
  8365   00DC0A  1E0D               	comf	(??___xxtofl+2)^0,f,c
  8366   00DC0C  1E0E               	comf	(??___xxtofl+3)^0,f,c
  8367   00DC0E  2A0B               	incf	??___xxtofl^0,f,c
  8368   00DC10  0E00               	movlw	0
  8369   00DC12  220C               	addwfc	(??___xxtofl+1)^0,f,c
  8370   00DC14  220D               	addwfc	(??___xxtofl+2)^0,f,c
  8371   00DC16  220E               	addwfc	(??___xxtofl+3)^0,f,c
  8372   00DC18  C00B  F011         	movff	??___xxtofl,___xxtofl@arg
  8373   00DC1C  C00C  F012         	movff	??___xxtofl+1,___xxtofl@arg+1
  8374   00DC20  C00D  F013         	movff	??___xxtofl+2,___xxtofl@arg+2
  8375   00DC24  C00E  F014         	movff	??___xxtofl+3,___xxtofl@arg+3
  8376   00DC28  EF1E  F06E         	goto	l4591
  8377   00DC2C                     l1005:
  8378   00DC2C  C007  F011         	movff	___xxtofl@val,___xxtofl@arg
  8379   00DC30  C008  F012         	movff	___xxtofl@val+1,___xxtofl@arg+1
  8380   00DC34  C009  F013         	movff	___xxtofl@val+2,___xxtofl@arg+2
  8381   00DC38  C00A  F014         	movff	___xxtofl@val+3,___xxtofl@arg+3
  8382   00DC3C                     l4591:
  8383   00DC3C  5007               	movf	___xxtofl@val^0,w,c
  8384   00DC3E  1008               	iorwf	(___xxtofl@val+1)^0,w,c
  8385   00DC40  1009               	iorwf	(___xxtofl@val+2)^0,w,c
  8386   00DC42  100A               	iorwf	(___xxtofl@val+3)^0,w,c
  8387   00DC44  A4D8               	btfss	status,2,c
  8388   00DC46  EF27  F06E         	goto	u4891
  8389   00DC4A  EF29  F06E         	goto	u4890
  8390   00DC4E                     u4891:
  8391   00DC4E  EF33  F06E         	goto	l4597
  8392   00DC52                     u4890:
  8393   00DC52  0E00               	movlw	0
  8394   00DC54  6E07               	movwf	?___xxtofl^0,c
  8395   00DC56  0E00               	movlw	0
  8396   00DC58  6E08               	movwf	(?___xxtofl+1)^0,c
  8397   00DC5A  0E00               	movlw	0
  8398   00DC5C  6E09               	movwf	(?___xxtofl+2)^0,c
  8399   00DC5E  0E00               	movlw	0
  8400   00DC60  6E0A               	movwf	(?___xxtofl+3)^0,c
  8401   00DC62  EFC4  F06E         	goto	l1008
  8402   00DC66                     l4597:
  8403   00DC66  0E96               	movlw	150
  8404   00DC68  6E10               	movwf	___xxtofl@exp^0,c
  8405   00DC6A  EF3D  F06E         	goto	l4601
  8406   00DC6E                     l4599:
  8407   00DC6E  2A10               	incf	___xxtofl@exp^0,f,c
  8408   00DC70  90D8               	bcf	status,0,c
  8409   00DC72  3214               	rrcf	(___xxtofl@arg+3)^0,f,c
  8410   00DC74  3213               	rrcf	(___xxtofl@arg+2)^0,f,c
  8411   00DC76  3212               	rrcf	(___xxtofl@arg+1)^0,f,c
  8412   00DC78  3211               	rrcf	___xxtofl@arg^0,f,c
  8413   00DC7A                     l4601:
  8414   00DC7A  0E00               	movlw	0
  8415   00DC7C  1411               	andwf	___xxtofl@arg^0,w,c
  8416   00DC7E  6E0B               	movwf	??___xxtofl^0,c
  8417   00DC80  0E00               	movlw	0
  8418   00DC82  1412               	andwf	(___xxtofl@arg+1)^0,w,c
  8419   00DC84  6E0C               	movwf	(??___xxtofl+1)^0,c
  8420   00DC86  0E00               	movlw	0
  8421   00DC88  1413               	andwf	(___xxtofl@arg+2)^0,w,c
  8422   00DC8A  6E0D               	movwf	(??___xxtofl+2)^0,c
  8423   00DC8C  0EFE               	movlw	254
  8424   00DC8E  1414               	andwf	(___xxtofl@arg+3)^0,w,c
  8425   00DC90  6E0E               	movwf	(??___xxtofl+3)^0,c
  8426   00DC92  500B               	movf	??___xxtofl^0,w,c
  8427   00DC94  100C               	iorwf	(??___xxtofl+1)^0,w,c
  8428   00DC96  100D               	iorwf	(??___xxtofl+2)^0,w,c
  8429   00DC98  100E               	iorwf	(??___xxtofl+3)^0,w,c
  8430   00DC9A  A4D8               	btfss	status,2,c
  8431   00DC9C  EF52  F06E         	goto	u4901
  8432   00DCA0  EF54  F06E         	goto	u4900
  8433   00DCA4                     u4901:
  8434   00DCA4  EF37  F06E         	goto	l4599
  8435   00DCA8                     u4900:
  8436   00DCA8  EF62  F06E         	goto	l1012
  8437   00DCAC                     l4603:
  8438   00DCAC  2A10               	incf	___xxtofl@exp^0,f,c
  8439   00DCAE  0E01               	movlw	1
  8440   00DCB0  2611               	addwf	___xxtofl@arg^0,f,c
  8441   00DCB2  0E00               	movlw	0
  8442   00DCB4  2212               	addwfc	(___xxtofl@arg+1)^0,f,c
  8443   00DCB6  2213               	addwfc	(___xxtofl@arg+2)^0,f,c
  8444   00DCB8  2214               	addwfc	(___xxtofl@arg+3)^0,f,c
  8445   00DCBA  90D8               	bcf	status,0,c
  8446   00DCBC  3214               	rrcf	(___xxtofl@arg+3)^0,f,c
  8447   00DCBE  3213               	rrcf	(___xxtofl@arg+2)^0,f,c
  8448   00DCC0  3212               	rrcf	(___xxtofl@arg+1)^0,f,c
  8449   00DCC2  3211               	rrcf	___xxtofl@arg^0,f,c
  8450   00DCC4                     l1012:
  8451   00DCC4  0E00               	movlw	0
  8452   00DCC6  1411               	andwf	___xxtofl@arg^0,w,c
  8453   00DCC8  6E0B               	movwf	??___xxtofl^0,c
  8454   00DCCA  0E00               	movlw	0
  8455   00DCCC  1412               	andwf	(___xxtofl@arg+1)^0,w,c
  8456   00DCCE  6E0C               	movwf	(??___xxtofl+1)^0,c
  8457   00DCD0  0E00               	movlw	0
  8458   00DCD2  1413               	andwf	(___xxtofl@arg+2)^0,w,c
  8459   00DCD4  6E0D               	movwf	(??___xxtofl+2)^0,c
  8460   00DCD6  0EFF               	movlw	255
  8461   00DCD8  1414               	andwf	(___xxtofl@arg+3)^0,w,c
  8462   00DCDA  6E0E               	movwf	(??___xxtofl+3)^0,c
  8463   00DCDC  500B               	movf	??___xxtofl^0,w,c
  8464   00DCDE  100C               	iorwf	(??___xxtofl+1)^0,w,c
  8465   00DCE0  100D               	iorwf	(??___xxtofl+2)^0,w,c
  8466   00DCE2  100E               	iorwf	(??___xxtofl+3)^0,w,c
  8467   00DCE4  A4D8               	btfss	status,2,c
  8468   00DCE6  EF77  F06E         	goto	u4911
  8469   00DCEA  EF79  F06E         	goto	u4910
  8470   00DCEE                     u4911:
  8471   00DCEE  EF56  F06E         	goto	l4603
  8472   00DCF2                     u4910:
  8473   00DCF2  EF81  F06E         	goto	l4611
  8474   00DCF6                     l4609:
  8475   00DCF6  0610               	decf	___xxtofl@exp^0,f,c
  8476   00DCF8  90D8               	bcf	status,0,c
  8477   00DCFA  3611               	rlcf	___xxtofl@arg^0,f,c
  8478   00DCFC  3612               	rlcf	(___xxtofl@arg+1)^0,f,c
  8479   00DCFE  3613               	rlcf	(___xxtofl@arg+2)^0,f,c
  8480   00DD00  3614               	rlcf	(___xxtofl@arg+3)^0,f,c
  8481   00DD02                     l4611:
  8482   00DD02  BE13               	btfsc	(___xxtofl@arg+2)^0,7,c
  8483   00DD04  EF86  F06E         	goto	u4921
  8484   00DD08  EF88  F06E         	goto	u4920
  8485   00DD0C                     u4921:
  8486   00DD0C  EF90  F06E         	goto	l1019
  8487   00DD10                     u4920:
  8488   00DD10  0E02               	movlw	2
  8489   00DD12  6010               	cpfslt	___xxtofl@exp^0,c
  8490   00DD14  EF8E  F06E         	goto	u4931
  8491   00DD18  EF90  F06E         	goto	u4930
  8492   00DD1C                     u4931:
  8493   00DD1C  EF7B  F06E         	goto	l4609
  8494   00DD20                     u4930:
  8495   00DD20                     l1019:
  8496   00DD20  B010               	btfsc	___xxtofl@exp^0,0,c
  8497   00DD22  EF95  F06E         	goto	u4941
  8498   00DD26  EF97  F06E         	goto	u4940
  8499   00DD2A                     u4941:
  8500   00DD2A  EF98  F06E         	goto	l4617
  8501   00DD2E                     u4940:
  8502   00DD2E  9E13               	bcf	(___xxtofl@arg+2)^0,7,c
  8503   00DD30                     l4617:
  8504   00DD30  90D8               	bcf	status,0,c
  8505   00DD32  3210               	rrcf	___xxtofl@exp^0,f,c
  8506   00DD34  C010  F00B         	movff	___xxtofl@exp,??___xxtofl
  8507   00DD38  6A0C               	clrf	(??___xxtofl+1)^0,c
  8508   00DD3A  6A0D               	clrf	(??___xxtofl+2)^0,c
  8509   00DD3C  6A0E               	clrf	(??___xxtofl+3)^0,c
  8510   00DD3E  C00B  F00E         	movff	??___xxtofl,??___xxtofl+3
  8511   00DD42  6A0D               	clrf	(??___xxtofl+2)^0,c
  8512   00DD44  6A0C               	clrf	(??___xxtofl+1)^0,c
  8513   00DD46  6A0B               	clrf	??___xxtofl^0,c
  8514   00DD48  500B               	movf	??___xxtofl^0,w,c
  8515   00DD4A  1211               	iorwf	___xxtofl@arg^0,f,c
  8516   00DD4C  500C               	movf	(??___xxtofl+1)^0,w,c
  8517   00DD4E  1212               	iorwf	(___xxtofl@arg+1)^0,f,c
  8518   00DD50  500D               	movf	(??___xxtofl+2)^0,w,c
  8519   00DD52  1213               	iorwf	(___xxtofl@arg+2)^0,f,c
  8520   00DD54  500E               	movf	(??___xxtofl+3)^0,w,c
  8521   00DD56  1214               	iorwf	(___xxtofl@arg+3)^0,f,c
  8522   00DD58  500F               	movf	___xxtofl@sign^0,w,c
  8523   00DD5A  B4D8               	btfsc	status,2,c
  8524   00DD5C  EFB2  F06E         	goto	u4951
  8525   00DD60  EFB4  F06E         	goto	u4950
  8526   00DD64                     u4951:
  8527   00DD64  EFBC  F06E         	goto	l4627
  8528   00DD68                     u4950:
  8529   00DD68  BE0A               	btfsc	(___xxtofl@val+3)^0,7,c
  8530   00DD6A  EFBB  F06E         	goto	u4960
  8531   00DD6E  EFB9  F06E         	goto	u4961
  8532   00DD72                     u4961:
  8533   00DD72  EFBC  F06E         	goto	l4627
  8534   00DD76                     u4960:
  8535   00DD76  8E14               	bsf	(___xxtofl@arg+3)^0,7,c
  8536   00DD78                     l4627:
  8537   00DD78  C011  F007         	movff	___xxtofl@arg,?___xxtofl
  8538   00DD7C  C012  F008         	movff	___xxtofl@arg+1,?___xxtofl+1
  8539   00DD80  C013  F009         	movff	___xxtofl@arg+2,?___xxtofl+2
  8540   00DD84  C014  F00A         	movff	___xxtofl@arg+3,?___xxtofl+3
  8541   00DD88                     l1008:
  8542   00DD88  0012               	return		;funcret
  8543   00DD8A                     __end_of___xxtofl:
  8544                           	callstack 0
  8545                           
  8546 ;; *************** function _SYSTEM_Initialize *****************
  8547 ;; Defined at:
  8548 ;;		line 50 in file "mcc_generated_files/mcc.c"
  8549 ;; Parameters:    Size  Location     Type
  8550 ;;		None
  8551 ;; Auto vars:     Size  Location     Type
  8552 ;;		None
  8553 ;; Return value:  Size  Location     Type
  8554 ;;                  1    wreg      void 
  8555 ;; Registers used:
  8556 ;;		wreg, status,2, status,0, cstack
  8557 ;; Tracked objects:
  8558 ;;		On entry : 0/0
  8559 ;;		On exit  : 0/0
  8560 ;;		Unchanged: 0/0
  8561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8565 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8566 ;;Total ram usage:        0 bytes
  8567 ;; Hardware stack levels used: 1
  8568 ;; Hardware stack levels required when called: 2
  8569 ;; This function calls:
  8570 ;;		_EUSART1_Initialize
  8571 ;;		_OSCILLATOR_Initialize
  8572 ;;		_PIN_MANAGER_Initialize
  8573 ;; This function is called by:
  8574 ;;		_main
  8575 ;; This function uses a non-reentrant model
  8576 ;;
  8577                           
  8578                           	psect	text31
  8579   00CA32                     __ptext31:
  8580                           	callstack 0
  8581   00CA32                     _SYSTEM_Initialize:
  8582                           	callstack 28
  8583   00CA32                     
  8584                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  8585   00CA32  ECE9  F065         	call	_PIN_MANAGER_Initialize	;wreg free
  8586                           
  8587                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  8588   00CA36  EC12  F065         	call	_OSCILLATOR_Initialize	;wreg free
  8589   00CA3A                     
  8590                           ;mcc_generated_files/mcc.c: 55:     EUSART1_Initialize();
  8591   00CA3A  EC27  F066         	call	_EUSART1_Initialize	;wreg free
  8592   00CA3E  0012               	return		;funcret
  8593   00CA40                     __end_of_SYSTEM_Initialize:
  8594                           	callstack 0
  8595                           
  8596 ;; *************** function _PIN_MANAGER_Initialize *****************
  8597 ;; Defined at:
  8598 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  8599 ;; Parameters:    Size  Location     Type
  8600 ;;		None
  8601 ;; Auto vars:     Size  Location     Type
  8602 ;;		None
  8603 ;; Return value:  Size  Location     Type
  8604 ;;                  1    wreg      void 
  8605 ;; Registers used:
  8606 ;;		wreg, status,2
  8607 ;; Tracked objects:
  8608 ;;		On entry : 0/0
  8609 ;;		On exit  : 0/0
  8610 ;;		Unchanged: 0/0
  8611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8615 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8616 ;;Total ram usage:        0 bytes
  8617 ;; Hardware stack levels used: 1
  8618 ;; This function calls:
  8619 ;;		Nothing
  8620 ;; This function is called by:
  8621 ;;		_SYSTEM_Initialize
  8622 ;; This function uses a non-reentrant model
  8623 ;;
  8624                           
  8625                           	psect	text32
  8626   00CBD2                     __ptext32:
  8627                           	callstack 0
  8628   00CBD2                     _PIN_MANAGER_Initialize:
  8629                           	callstack 29
  8630   00CBD2                     
  8631                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  8632   00CBD2  0E00               	movlw	0
  8633   00CBD4  6E8D               	movwf	141,c	;volatile
  8634                           
  8635                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  8636   00CBD6  0E00               	movlw	0
  8637   00CBD8  6E8C               	movwf	140,c	;volatile
  8638                           
  8639                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  8640   00CBDA  0E00               	movlw	0
  8641   00CBDC  6E89               	movwf	137,c	;volatile
  8642                           
  8643                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  8644   00CBDE  0E00               	movlw	0
  8645   00CBE0  6E8A               	movwf	138,c	;volatile
  8646                           
  8647                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  8648   00CBE2  0E00               	movlw	0
  8649   00CBE4  6E8B               	movwf	139,c	;volatile
  8650                           
  8651                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x06;
  8652   00CBE6  0E06               	movlw	6
  8653   00CBE8  6E96               	movwf	150,c	;volatile
  8654   00CBEA                     
  8655                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xFF;
  8656   00CBEA  6892               	setf	146,c	;volatile
  8657   00CBEC                     
  8658                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
  8659   00CBEC  6893               	setf	147,c	;volatile
  8660                           
  8661                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xBF;
  8662   00CBEE  0EBF               	movlw	191
  8663   00CBF0  6E94               	movwf	148,c	;volatile
  8664   00CBF2                     
  8665                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
  8666   00CBF2  6895               	setf	149,c	;volatile
  8667   00CBF4                     
  8668                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xFF;
  8669   00CBF4  010F               	movlb	15	; () banked
  8670   00CBF6  693B               	setf	59,b	;volatile
  8671                           
  8672                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0x24;
  8673   00CBF8  0E24               	movlw	36
  8674   00CBFA  6F3A               	movwf	58,b	;volatile
  8675                           
  8676                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0x3F;
  8677   00CBFC  0E3F               	movlw	63
  8678   00CBFE  6F39               	movwf	57,b	;volatile
  8679                           
  8680                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x06;
  8681   00CC00  0E06               	movlw	6
  8682   00CC02  6F3C               	movwf	60,b	;volatile
  8683                           
  8684                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0x2F;
  8685   00CC04  0E2F               	movlw	47
  8686   00CC06  6F38               	movwf	56,b	;volatile
  8687                           
  8688                           ;mcc_generated_files/pin_manager.c: 87:     WPUB = 0x00;
  8689   00CC08  0E00               	movlw	0
  8690   00CC0A  6E61               	movwf	97,c	;volatile
  8691   00CC0C                     
  8692                           ; BSR set to: 15
  8693                           ;mcc_generated_files/pin_manager.c: 88:     INTCON2bits.nRBPU = 1;
  8694   00CC0C  8EF1               	bsf	241,7,c	;volatile
  8695   00CC0E                     
  8696                           ; BSR set to: 15
  8697   00CC0E  0012               	return		;funcret
  8698   00CC10                     __end_of_PIN_MANAGER_Initialize:
  8699                           	callstack 0
  8700                           
  8701 ;; *************** function _OSCILLATOR_Initialize *****************
  8702 ;; Defined at:
  8703 ;;		line 58 in file "mcc_generated_files/mcc.c"
  8704 ;; Parameters:    Size  Location     Type
  8705 ;;		None
  8706 ;; Auto vars:     Size  Location     Type
  8707 ;;		None
  8708 ;; Return value:  Size  Location     Type
  8709 ;;                  1    wreg      void 
  8710 ;; Registers used:
  8711 ;;		wreg, status,2
  8712 ;; Tracked objects:
  8713 ;;		On entry : 0/0
  8714 ;;		On exit  : 0/0
  8715 ;;		Unchanged: 0/0
  8716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8717 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8718 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8720 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8721 ;;Total ram usage:        0 bytes
  8722 ;; Hardware stack levels used: 1
  8723 ;; This function calls:
  8724 ;;		Nothing
  8725 ;; This function is called by:
  8726 ;;		_SYSTEM_Initialize
  8727 ;; This function uses a non-reentrant model
  8728 ;;
  8729                           
  8730                           	psect	text33
  8731   00CA24                     __ptext33:
  8732                           	callstack 0
  8733   00CA24                     _OSCILLATOR_Initialize:
  8734                           	callstack 29
  8735   00CA24                     
  8736                           ;mcc_generated_files/mcc.c: 61:     OSCCON = 0x70;
  8737   00CA24  0E70               	movlw	112
  8738   00CA26  6ED3               	movwf	211,c	;volatile
  8739                           
  8740                           ;mcc_generated_files/mcc.c: 63:     OSCCON2 = 0x04;
  8741   00CA28  0E04               	movlw	4
  8742   00CA2A  6ED2               	movwf	210,c	;volatile
  8743                           
  8744                           ;mcc_generated_files/mcc.c: 65:     OSCTUNE = 0x00;
  8745   00CA2C  0E00               	movlw	0
  8746   00CA2E  6E9B               	movwf	155,c	;volatile
  8747   00CA30  0012               	return		;funcret
  8748   00CA32                     __end_of_OSCILLATOR_Initialize:
  8749                           	callstack 0
  8750                           
  8751 ;; *************** function _EUSART1_Initialize *****************
  8752 ;; Defined at:
  8753 ;;		line 66 in file "mcc_generated_files/eusart1.c"
  8754 ;; Parameters:    Size  Location     Type
  8755 ;;		None
  8756 ;; Auto vars:     Size  Location     Type
  8757 ;;		None
  8758 ;; Return value:  Size  Location     Type
  8759 ;;                  1    wreg      void 
  8760 ;; Registers used:
  8761 ;;		wreg, status,2, status,0, cstack
  8762 ;; Tracked objects:
  8763 ;;		On entry : 0/0
  8764 ;;		On exit  : 0/0
  8765 ;;		Unchanged: 0/0
  8766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8768 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8770 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8771 ;;Total ram usage:        0 bytes
  8772 ;; Hardware stack levels used: 1
  8773 ;; Hardware stack levels required when called: 1
  8774 ;; This function calls:
  8775 ;;		_EUSART1_SetErrorHandler
  8776 ;;		_EUSART1_SetFramingErrorHandler
  8777 ;;		_EUSART1_SetOverrunErrorHandler
  8778 ;; This function is called by:
  8779 ;;		_SYSTEM_Initialize
  8780 ;; This function uses a non-reentrant model
  8781 ;;
  8782                           
  8783                           	psect	text34
  8784   00CC4E                     __ptext34:
  8785                           	callstack 0
  8786   00CC4E                     _EUSART1_Initialize:
  8787                           	callstack 28
  8788   00CC4E                     
  8789                           ;mcc_generated_files/eusart1.c: 71:     BAUDCON1 = 0x08;
  8790   00CC4E  0E08               	movlw	8
  8791   00CC50  6EB8               	movwf	184,c	;volatile
  8792                           
  8793                           ;mcc_generated_files/eusart1.c: 74:     RCSTA1 = 0x90;
  8794   00CC52  0E90               	movlw	144
  8795   00CC54  6EAB               	movwf	171,c	;volatile
  8796                           
  8797                           ;mcc_generated_files/eusart1.c: 77:     TXSTA1 = 0x24;
  8798   00CC56  0E24               	movlw	36
  8799   00CC58  6EAC               	movwf	172,c	;volatile
  8800                           
  8801                           ;mcc_generated_files/eusart1.c: 80:     SPBRG1 = 0xCF;
  8802   00CC5A  0ECF               	movlw	207
  8803   00CC5C  6EAF               	movwf	175,c	;volatile
  8804                           
  8805                           ;mcc_generated_files/eusart1.c: 83:     SPBRGH1 = 0x00;
  8806   00CC5E  0E00               	movlw	0
  8807   00CC60  6EB0               	movwf	176,c	;volatile
  8808   00CC62                     
  8809                           ;mcc_generated_files/eusart1.c: 86:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultFr
      +                          amingErrorHandler);
  8810   00CC62  0E00               	movlw	0
  8811   00CC64  6E01               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  8812   00CC66  0E00               	movlw	0
  8813   00CC68  6E02               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  8814   00CC6A  ECFC  F064         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  8815   00CC6E                     
  8816                           ;mcc_generated_files/eusart1.c: 87:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOv
      +                          errunErrorHandler);
  8817   00CC6E  0E00               	movlw	0
  8818   00CC70  6E01               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  8819   00CC72  0E00               	movlw	0
  8820   00CC74  6E02               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  8821   00CC76  EC01  F065         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  8822   00CC7A                     
  8823                           ;mcc_generated_files/eusart1.c: 88:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHand
      +                          ler);
  8824   00CC7A  0E00               	movlw	0
  8825   00CC7C  6E01               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  8826   00CC7E  0E00               	movlw	0
  8827   00CC80  6E02               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  8828   00CC82  ECF7  F064         	call	_EUSART1_SetErrorHandler	;wreg free
  8829   00CC86                     
  8830                           ;mcc_generated_files/eusart1.c: 90:     eusart1RxLastError.status = 0;
  8831   00CC86  0E00               	movlw	0
  8832   00CC88  0100               	movlb	0	; () banked
  8833   00CC8A  6FCA               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  8834   00CC8C                     
  8835                           ; BSR set to: 0
  8836   00CC8C  0012               	return		;funcret
  8837   00CC8E                     __end_of_EUSART1_Initialize:
  8838                           	callstack 0
  8839                           
  8840 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  8841 ;; Defined at:
  8842 ;;		line 161 in file "mcc_generated_files/eusart1.c"
  8843 ;; Parameters:    Size  Location     Type
  8844 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
  8845 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  8846 ;; Auto vars:     Size  Location     Type
  8847 ;;		None
  8848 ;; Return value:  Size  Location     Type
  8849 ;;                  1    wreg      void 
  8850 ;; Registers used:
  8851 ;;		wreg, status,2, status,0
  8852 ;; Tracked objects:
  8853 ;;		On entry : 0/0
  8854 ;;		On exit  : 0/0
  8855 ;;		Unchanged: 0/0
  8856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8857 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8860 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8861 ;;Total ram usage:        2 bytes
  8862 ;; Hardware stack levels used: 1
  8863 ;; This function calls:
  8864 ;;		Nothing
  8865 ;; This function is called by:
  8866 ;;		_EUSART1_Initialize
  8867 ;; This function uses a non-reentrant model
  8868 ;;
  8869                           
  8870                           	psect	text35
  8871   00CA02                     __ptext35:
  8872                           	callstack 0
  8873   00CA02                     _EUSART1_SetOverrunErrorHandler:
  8874                           	callstack 28
  8875   00CA02                     
  8876                           ;mcc_generated_files/eusart1.c: 162:     EUSART1_OverrunErrorHandler = interruptHandler;
  8877   00CA02  C001  F0FC         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  8878   00CA06  C002  F0FD         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  8879   00CA0A  0012               	return		;funcret
  8880   00CA0C                     __end_of_EUSART1_SetOverrunErrorHandler:
  8881                           	callstack 0
  8882                           
  8883 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  8884 ;; Defined at:
  8885 ;;		line 157 in file "mcc_generated_files/eusart1.c"
  8886 ;; Parameters:    Size  Location     Type
  8887 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
  8888 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  8889 ;; Auto vars:     Size  Location     Type
  8890 ;;		None
  8891 ;; Return value:  Size  Location     Type
  8892 ;;                  1    wreg      void 
  8893 ;; Registers used:
  8894 ;;		wreg, status,2, status,0
  8895 ;; Tracked objects:
  8896 ;;		On entry : 0/0
  8897 ;;		On exit  : 0/0
  8898 ;;		Unchanged: 0/0
  8899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8900 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8903 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8904 ;;Total ram usage:        2 bytes
  8905 ;; Hardware stack levels used: 1
  8906 ;; This function calls:
  8907 ;;		Nothing
  8908 ;; This function is called by:
  8909 ;;		_EUSART1_Initialize
  8910 ;; This function uses a non-reentrant model
  8911 ;;
  8912                           
  8913                           	psect	text36
  8914   00C9F8                     __ptext36:
  8915                           	callstack 0
  8916   00C9F8                     _EUSART1_SetFramingErrorHandler:
  8917                           	callstack 28
  8918   00C9F8                     
  8919                           ;mcc_generated_files/eusart1.c: 158:     EUSART1_FramingErrorHandler = interruptHandler;
  8920   00C9F8  C001  F0FE         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  8921   00C9FC  C002  F0FF         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  8922   00CA00  0012               	return		;funcret
  8923   00CA02                     __end_of_EUSART1_SetFramingErrorHandler:
  8924                           	callstack 0
  8925                           
  8926 ;; *************** function _EUSART1_SetErrorHandler *****************
  8927 ;; Defined at:
  8928 ;;		line 165 in file "mcc_generated_files/eusart1.c"
  8929 ;; Parameters:    Size  Location     Type
  8930 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
  8931 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  8932 ;; Auto vars:     Size  Location     Type
  8933 ;;		None
  8934 ;; Return value:  Size  Location     Type
  8935 ;;                  1    wreg      void 
  8936 ;; Registers used:
  8937 ;;		wreg, status,2, status,0
  8938 ;; Tracked objects:
  8939 ;;		On entry : 0/0
  8940 ;;		On exit  : 0/0
  8941 ;;		Unchanged: 0/0
  8942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8943 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8946 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8947 ;;Total ram usage:        2 bytes
  8948 ;; Hardware stack levels used: 1
  8949 ;; This function calls:
  8950 ;;		Nothing
  8951 ;; This function is called by:
  8952 ;;		_EUSART1_Initialize
  8953 ;; This function uses a non-reentrant model
  8954 ;;
  8955                           
  8956                           	psect	text37
  8957   00C9EE                     __ptext37:
  8958                           	callstack 0
  8959   00C9EE                     _EUSART1_SetErrorHandler:
  8960                           	callstack 28
  8961   00C9EE                     
  8962                           ;mcc_generated_files/eusart1.c: 166:     EUSART1_ErrorHandler = interruptHandler;
  8963   00C9EE  C001  F0FA         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  8964   00C9F2  C002  F0FB         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  8965   00C9F6  0012               	return		;funcret
  8966   00C9F8                     __end_of_EUSART1_SetErrorHandler:
  8967                           	callstack 0
  8968                           
  8969 ;; *************** function _ADC_reset *****************
  8970 ;; Defined at:
  8971 ;;		line 136 in file "main.c"
  8972 ;; Parameters:    Size  Location     Type
  8973 ;;		None
  8974 ;; Auto vars:     Size  Location     Type
  8975 ;;		None
  8976 ;; Return value:  Size  Location     Type
  8977 ;;                  1    wreg      void 
  8978 ;; Registers used:
  8979 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8980 ;; Tracked objects:
  8981 ;;		On entry : 0/0
  8982 ;;		On exit  : 0/0
  8983 ;;		Unchanged: 0/0
  8984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8988 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8989 ;;Total ram usage:        0 bytes
  8990 ;; Hardware stack levels used: 1
  8991 ;; Hardware stack levels required when called: 3
  8992 ;; This function calls:
  8993 ;;		_i2c_driver_write_byte
  8994 ;;		_send_string
  8995 ;; This function is called by:
  8996 ;;		_main
  8997 ;; This function uses a non-reentrant model
  8998 ;;
  8999                           
  9000                           	psect	text38
  9001   00CB16                     __ptext38:
  9002                           	callstack 0
  9003   00CB16                     _ADC_reset:
  9004                           	callstack 27
  9005   00CB16                     
  9006                           ;main.c: 137:     send_string("Start of reset \n");
  9007   00CB16  0E13               	movlw	low STR_20
  9008   00CB18  6E05               	movwf	send_string@message^0,c
  9009   00CB1A  0EFF               	movlw	high STR_20
  9010   00CB1C  6E06               	movwf	(send_string@message+1)^0,c
  9011   00CB1E  EC7D  F068         	call	_send_string	;wreg free
  9012   00CB22                     
  9013                           ;main.c: 138:     i2c_driver_write_byte(0x40,0x14,0x80);
  9014   00CB22  0E14               	movlw	20
  9015   00CB24  6E02               	movwf	i2c_driver_write_byte@reg^0,c
  9016   00CB26  0E80               	movlw	128
  9017   00CB28  6E03               	movwf	i2c_driver_write_byte@data^0,c
  9018   00CB2A  0E40               	movlw	64
  9019   00CB2C  EC9C  F067         	call	_i2c_driver_write_byte
  9020   00CB30                     
  9021                           ;main.c: 140:     send_string("End of reset \n");
  9022   00CB30  0E64               	movlw	low STR_21
  9023   00CB32  6E05               	movwf	send_string@message^0,c
  9024   00CB34  0EFF               	movlw	high STR_21
  9025   00CB36  6E06               	movwf	(send_string@message+1)^0,c
  9026   00CB38  EC7D  F068         	call	_send_string	;wreg free
  9027   00CB3C  0012               	return		;funcret
  9028   00CB3E                     __end_of_ADC_reset:
  9029                           	callstack 0
  9030                           
  9031 ;; *************** function _ADC_read *****************
  9032 ;; Defined at:
  9033 ;;		line 143 in file "main.c"
  9034 ;; Parameters:    Size  Location     Type
  9035 ;;		None
  9036 ;; Auto vars:     Size  Location     Type
  9037 ;;  ADC_data        2    0        unsigned char [2]
  9038 ;;  busy_status     1   17[COMRAM] unsigned char 
  9039 ;; Return value:  Size  Location     Type
  9040 ;;                  1    wreg      void 
  9041 ;; Registers used:
  9042 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9043 ;; Tracked objects:
  9044 ;;		On entry : 0/0
  9045 ;;		On exit  : 0/0
  9046 ;;		Unchanged: 0/0
  9047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9049 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9051 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9052 ;;Total ram usage:        1 bytes
  9053 ;; Hardware stack levels used: 1
  9054 ;; Hardware stack levels required when called: 4
  9055 ;; This function calls:
  9056 ;;		_i2c_driver_read_byte
  9057 ;;		_i2c_driver_read_twobytes
  9058 ;;		_i2c_driver_write_byte
  9059 ;;		_send_string
  9060 ;; This function is called by:
  9061 ;;		_main
  9062 ;; This function uses a non-reentrant model
  9063 ;;
  9064                           
  9065                           	psect	text39
  9066   00D178                     __ptext39:
  9067                           	callstack 0
  9068   00D178                     _ADC_read:
  9069                           	callstack 26
  9070   00D178                     
  9071                           ;main.c: 144:     send_string("before trigger\n");
  9072   00D178  0E54               	movlw	low STR_22
  9073   00D17A  6E05               	movwf	send_string@message^0,c
  9074   00D17C  0EFF               	movlw	high STR_22
  9075   00D17E  6E06               	movwf	(send_string@message+1)^0,c
  9076   00D180  EC7D  F068         	call	_send_string	;wreg free
  9077   00D184                     
  9078                           ;main.c: 145:     i2c_driver_write_byte(0x40, 0x14, 0x02);
  9079   00D184  0E14               	movlw	20
  9080   00D186  6E02               	movwf	i2c_driver_write_byte@reg^0,c
  9081   00D188  0E02               	movlw	2
  9082   00D18A  6E03               	movwf	i2c_driver_write_byte@data^0,c
  9083   00D18C  0E40               	movlw	64
  9084   00D18E  EC9C  F067         	call	_i2c_driver_write_byte
  9085   00D192                     
  9086                           ;main.c: 146:     i2c_driver_write_byte(0x40,0x1C, 0x00);
  9087   00D192  0E1C               	movlw	28
  9088   00D194  6E02               	movwf	i2c_driver_write_byte@reg^0,c
  9089   00D196  0E00               	movlw	0
  9090   00D198  6E03               	movwf	i2c_driver_write_byte@data^0,c
  9091   00D19A  0E40               	movlw	64
  9092   00D19C  EC9C  F067         	call	_i2c_driver_write_byte
  9093                           
  9094                           ;main.c: 147:     uint8_t ADC_data[2];;main.c: 148:     send_string("after trigger\n");
  9095   00D1A0  0E82               	movlw	low STR_23
  9096   00D1A2  6E05               	movwf	send_string@message^0,c
  9097   00D1A4  0EFF               	movlw	high STR_23
  9098   00D1A6  6E06               	movwf	(send_string@message+1)^0,c
  9099   00D1A8  EC7D  F068         	call	_send_string	;wreg free
  9100   00D1AC                     l228:
  9101                           
  9102                           ;main.c: 151:     send_string("before checking busy state\n");
  9103   00D1AC  0E7D               	movlw	low STR_24
  9104   00D1AE  6E05               	movwf	send_string@message^0,c
  9105   00D1B0  0EFE               	movlw	high STR_24
  9106   00D1B2  6E06               	movwf	(send_string@message+1)^0,c
  9107   00D1B4  EC7D  F068         	call	_send_string	;wreg free
  9108   00D1B8                     
  9109                           ;main.c: 152:     i2c_driver_read_byte(0x40,0x10,&busy_status);}while(busy_status & (1<<
      +                          7) !=0);
  9110   00D1B8  0E10               	movlw	16
  9111   00D1BA  6E04               	movwf	i2c_driver_read_byte@reg^0,c
  9112   00D1BC  0E12               	movlw	low ADC_read@busy_status
  9113   00D1BE  6E05               	movwf	i2c_driver_read_byte@data^0,c
  9114   00D1C0  0E00               	movlw	high ADC_read@busy_status
  9115   00D1C2  6E06               	movwf	(i2c_driver_read_byte@data+1)^0,c
  9116   00D1C4  0E40               	movlw	64
  9117   00D1C6  EC3F  F068         	call	_i2c_driver_read_byte
  9118   00D1CA  B012               	btfsc	ADC_read@busy_status^0,0,c
  9119   00D1CC  EFEA  F068         	goto	u4861
  9120   00D1D0  EFEC  F068         	goto	u4860
  9121   00D1D4                     u4861:
  9122   00D1D4  EFD6  F068         	goto	l228
  9123   00D1D8                     u4860:
  9124   00D1D8                     
  9125                           ;main.c: 153:     send_string("after checking busy state\n");
  9126   00D1D8  0EB5               	movlw	low STR_25
  9127   00D1DA  6E05               	movwf	send_string@message^0,c
  9128   00D1DC  0EFE               	movlw	high STR_25
  9129   00D1DE  6E06               	movwf	(send_string@message+1)^0,c
  9130   00D1E0  EC7D  F068         	call	_send_string	;wreg free
  9131   00D1E4                     
  9132                           ;main.c: 154:     i2c_driver_write_byte(0x40, 0x14, 0x00);
  9133   00D1E4  0E14               	movlw	20
  9134   00D1E6  6E02               	movwf	i2c_driver_write_byte@reg^0,c
  9135   00D1E8  0E00               	movlw	0
  9136   00D1EA  6E03               	movwf	i2c_driver_write_byte@data^0,c
  9137   00D1EC  0E40               	movlw	64
  9138   00D1EE  EC9C  F067         	call	_i2c_driver_write_byte
  9139   00D1F2                     
  9140                           ;main.c: 158:     i2c_driver_read_twobytes(0x40, 0x20, &ADC_result0);
  9141   00D1F2  0E20               	movlw	32
  9142   00D1F4  6E0B               	movwf	i2c_driver_read_twobytes@reg^0,c
  9143   00D1F6  0EF8               	movlw	low _ADC_result0
  9144   00D1F8  6E0C               	movwf	i2c_driver_read_twobytes@data^0,c
  9145   00D1FA  0E00               	movlw	high _ADC_result0
  9146   00D1FC  6E0D               	movwf	(i2c_driver_read_twobytes@data+1)^0,c
  9147   00D1FE  0E40               	movlw	64
  9148   00D200  EC7D  F06A         	call	_i2c_driver_read_twobytes
  9149   00D204                     
  9150                           ;main.c: 160:     send_string("after reading\n");
  9151   00D204  0E73               	movlw	low STR_26
  9152   00D206  6E05               	movwf	send_string@message^0,c
  9153   00D208  0EFF               	movlw	high STR_26
  9154   00D20A  6E06               	movwf	(send_string@message+1)^0,c
  9155   00D20C  EC7D  F068         	call	_send_string	;wreg free
  9156   00D210  0012               	return		;funcret
  9157   00D212                     __end_of_ADC_read:
  9158                           	callstack 0
  9159                           
  9160 ;; *************** function _i2c_driver_read_twobytes *****************
  9161 ;; Defined at:
  9162 ;;		line 109 in file "i2c_driver.c"
  9163 ;; Parameters:    Size  Location     Type
  9164 ;;  devaddr         1    wreg     unsigned char 
  9165 ;;  reg             1   10[COMRAM] unsigned char 
  9166 ;;  data            2   11[COMRAM] PTR unsigned short 
  9167 ;;		 -> ADC_result0(2), 
  9168 ;; Auto vars:     Size  Location     Type
  9169 ;;  devaddr         1   16[COMRAM] unsigned char 
  9170 ;; Return value:  Size  Location     Type
  9171 ;;                  1    wreg      void 
  9172 ;; Registers used:
  9173 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9174 ;; Tracked objects:
  9175 ;;		On entry : 0/0
  9176 ;;		On exit  : 0/0
  9177 ;;		Unchanged: 0/0
  9178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9179 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9180 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9181 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9182 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9183 ;;Total ram usage:        7 bytes
  9184 ;; Hardware stack levels used: 1
  9185 ;; Hardware stack levels required when called: 3
  9186 ;; This function calls:
  9187 ;;		_I2C1_MasterEnableRestart
  9188 ;;		_I2C1_MasterGetRxData
  9189 ;;		_I2C1_MasterIsNack
  9190 ;;		_I2C1_MasterSendTxData
  9191 ;;		_I2C1_MasterStart
  9192 ;;		_I2C1_MasterStop
  9193 ;;		_send_string
  9194 ;; This function is called by:
  9195 ;;		_ADC_read
  9196 ;; This function uses a non-reentrant model
  9197 ;;
  9198                           
  9199                           	psect	text40
  9200   00D4FA                     __ptext40:
  9201                           	callstack 0
  9202   00D4FA                     _i2c_driver_read_twobytes:
  9203                           	callstack 26
  9204                           
  9205                           ;incstack = 0
  9206                           ;i2c_driver_read_twobytes@devaddr stored from wreg
  9207   00D4FA  6E11               	movwf	i2c_driver_read_twobytes@devaddr^0,c
  9208   00D4FC                     l302:
  9209   00D4FC                     
  9210                           ;i2c_driver.c: 112:   {;i2c_driver.c: 113:       send_string("inside while\n");
  9211   00D4FC  0E91               	movlw	low STR_27
  9212   00D4FE  6E05               	movwf	send_string@message^0,c
  9213   00D500  0EFF               	movlw	high STR_27
  9214   00D502  6E06               	movwf	(send_string@message+1)^0,c
  9215   00D504  EC7D  F068         	call	_send_string	;wreg free
  9216   00D508                     
  9217                           ;i2c_driver.c: 114:     I2C1_MasterStart();
  9218   00D508  ECEB  F064         	call	_I2C1_MasterStart	;wreg free
  9219   00D50C                     
  9220                           ;i2c_driver.c: 115:     I2C1_MasterSendTxData(devaddr);
  9221   00D50C  5011               	movf	i2c_driver_read_twobytes@devaddr^0,w,c
  9222   00D50E  EC06  F065         	call	_I2C1_MasterSendTxData
  9223   00D512                     
  9224                           ;i2c_driver.c: 116:     if (I2C1_MasterIsNack())
  9225   00D512  EC49  F065         	call	_I2C1_MasterIsNack	;wreg free
  9226   00D516  0900               	iorlw	0
  9227   00D518  B4D8               	btfsc	status,2,c
  9228   00D51A  EF91  F06A         	goto	u4821
  9229   00D51E  EF93  F06A         	goto	u4820
  9230   00D522                     u4821:
  9231   00D522  EF95  F06A         	goto	l4499
  9232   00D526                     u4820:
  9233   00D526  EF7E  F06A         	goto	l302
  9234   00D52A                     l4499:
  9235                           
  9236                           ;i2c_driver.c: 118:         send_string("after 1st nack\n");
  9237   00D52A  0E24               	movlw	low STR_28
  9238   00D52C  6E05               	movwf	send_string@message^0,c
  9239   00D52E  0EFF               	movlw	high STR_28
  9240   00D530  6E06               	movwf	(send_string@message+1)^0,c
  9241   00D532  EC7D  F068         	call	_send_string	;wreg free
  9242   00D536                     
  9243                           ;i2c_driver.c: 119:     I2C1_MasterSendTxData(reg);
  9244   00D536  500B               	movf	i2c_driver_read_twobytes@reg^0,w,c
  9245   00D538  EC06  F065         	call	_I2C1_MasterSendTxData
  9246   00D53C                     
  9247                           ;i2c_driver.c: 120:     if (I2C1_MasterIsNack())
  9248   00D53C  EC49  F065         	call	_I2C1_MasterIsNack	;wreg free
  9249   00D540  0900               	iorlw	0
  9250   00D542  B4D8               	btfsc	status,2,c
  9251   00D544  EFA6  F06A         	goto	u4831
  9252   00D548  EFA8  F06A         	goto	u4830
  9253   00D54C                     u4831:
  9254   00D54C  EFAA  F06A         	goto	l4507
  9255   00D550                     u4830:
  9256   00D550  EF7E  F06A         	goto	l302
  9257   00D554                     l4507:
  9258                           
  9259                           ;i2c_driver.c: 122:     send_string("after 2st nack\n");
  9260   00D554  0E34               	movlw	low STR_29
  9261   00D556  6E05               	movwf	send_string@message^0,c
  9262   00D558  0EFF               	movlw	high STR_29
  9263   00D55A  6E06               	movwf	(send_string@message+1)^0,c
  9264   00D55C  EC7D  F068         	call	_send_string	;wreg free
  9265   00D560                     
  9266                           ;i2c_driver.c: 123:     I2C1_MasterEnableRestart();
  9267   00D560  ECF3  F064         	call	_I2C1_MasterEnableRestart	;wreg free
  9268   00D564                     
  9269                           ;i2c_driver.c: 125:     I2C1_MasterSendTxData(devaddr | 0x1);
  9270   00D564  5011               	movf	i2c_driver_read_twobytes@devaddr^0,w,c
  9271   00D566  0901               	iorlw	1
  9272   00D568  EC06  F065         	call	_I2C1_MasterSendTxData
  9273   00D56C                     
  9274                           ;i2c_driver.c: 126:     if (I2C1_MasterIsNack())
  9275   00D56C  EC49  F065         	call	_I2C1_MasterIsNack	;wreg free
  9276   00D570  0900               	iorlw	0
  9277   00D572  B4D8               	btfsc	status,2,c
  9278   00D574  EFBE  F06A         	goto	u4841
  9279   00D578  EFC0  F06A         	goto	u4840
  9280   00D57C                     u4841:
  9281   00D57C  EFC2  F06A         	goto	l4517
  9282   00D580                     u4840:
  9283   00D580  EF7E  F06A         	goto	l302
  9284   00D584                     l4517:
  9285                           
  9286                           ;i2c_driver.c: 128:     send_string("after 3st nack\n");
  9287   00D584  0E44               	movlw	low STR_30
  9288   00D586  6E05               	movwf	send_string@message^0,c
  9289   00D588  0EFF               	movlw	high STR_30
  9290   00D58A  6E06               	movwf	(send_string@message+1)^0,c
  9291   00D58C  EC7D  F068         	call	_send_string	;wreg free
  9292   00D590                     
  9293                           ;i2c_driver.c: 129:     *data = (I2C1_MasterGetRxData(0) << 8);
  9294   00D590  0E00               	movlw	0
  9295   00D592  ECB5  F065         	call	_I2C1_MasterGetRxData
  9296   00D596  6E0E               	movwf	??_i2c_driver_read_twobytes^0,c
  9297   00D598  500E               	movf	??_i2c_driver_read_twobytes^0,w,c
  9298   00D59A  6E10               	movwf	(??_i2c_driver_read_twobytes+2)^0,c
  9299   00D59C  6A0F               	clrf	(??_i2c_driver_read_twobytes+1)^0,c
  9300   00D59E  C00C  FFD9         	movff	i2c_driver_read_twobytes@data,fsr2l
  9301   00D5A2  C00D  FFDA         	movff	i2c_driver_read_twobytes@data+1,fsr2h
  9302   00D5A6  C00F  FFDE         	movff	??_i2c_driver_read_twobytes+1,postinc2
  9303   00D5AA  C010  FFDD         	movff	??_i2c_driver_read_twobytes+2,postdec2
  9304   00D5AE                     
  9305                           ;i2c_driver.c: 130:     *data += I2C1_MasterGetRxData(1);
  9306   00D5AE  0E01               	movlw	1
  9307   00D5B0  ECB5  F065         	call	_I2C1_MasterGetRxData
  9308   00D5B4  6E0E               	movwf	??_i2c_driver_read_twobytes^0,c
  9309   00D5B6  500E               	movf	??_i2c_driver_read_twobytes^0,w,c
  9310   00D5B8  C00C  FFD9         	movff	i2c_driver_read_twobytes@data,fsr2l
  9311   00D5BC  C00D  FFDA         	movff	i2c_driver_read_twobytes@data+1,fsr2h
  9312   00D5C0  26DE               	addwf	postinc2,f,c
  9313   00D5C2  0E00               	movlw	0
  9314   00D5C4  22DD               	addwfc	postdec2,f,c
  9315   00D5C6                     
  9316                           ;i2c_driver.c: 134:   send_string("before stop\n");
  9317   00D5C6  0EAD               	movlw	low STR_31
  9318   00D5C8  6E05               	movwf	send_string@message^0,c
  9319   00D5CA  0EFF               	movlw	high STR_31
  9320   00D5CC  6E06               	movwf	(send_string@message+1)^0,c
  9321   00D5CE  EC7D  F068         	call	_send_string	;wreg free
  9322   00D5D2                     
  9323                           ;i2c_driver.c: 135:   I2C1_MasterStop();
  9324   00D5D2  ECEF  F064         	call	_I2C1_MasterStop	;wreg free
  9325   00D5D6                     
  9326                           ;i2c_driver.c: 136:   send_string("after stop\n");
  9327   00D5D6  0EBA               	movlw	low STR_32
  9328   00D5D8  6E05               	movwf	send_string@message^0,c
  9329   00D5DA  0EFF               	movlw	high STR_32
  9330   00D5DC  6E06               	movwf	(send_string@message+1)^0,c
  9331   00D5DE  EC7D  F068         	call	_send_string	;wreg free
  9332   00D5E2  0012               	return		;funcret
  9333   00D5E4                     __end_of_i2c_driver_read_twobytes:
  9334                           	callstack 0
  9335                           
  9336 ;; *************** function _send_string *****************
  9337 ;; Defined at:
  9338 ;;		line 169 in file "mcc_generated_files/eusart1.c"
  9339 ;; Parameters:    Size  Location     Type
  9340 ;;  message         2    4[COMRAM] PTR const unsigned char 
  9341 ;;		 -> STR_32(12), STR_31(13), STR_30(16), STR_29(16), 
  9342 ;;		 -> STR_28(16), STR_27(14), STR_26(15), STR_25(27), 
  9343 ;;		 -> STR_24(28), STR_23(15), STR_22(16), STR_21(15), 
  9344 ;;		 -> STR_20(17), STR_19(2), STR_18(2), STR_17(2), 
  9345 ;;		 -> ResultBuffer(15), STR_16(10), STR_15(2), STR_14(10), 
  9346 ;;		 -> SCBuffer(20), STR_12(2), STR_11(15), STR_9(21), 
  9347 ;;		 -> STR_8(28), STR_7(8), STR_6(2), STR_5(21), 
  9348 ;;		 -> DigitalBuffer(20), STR_3(12), STR_2(14), STR_1(25), 
  9349 ;; Auto vars:     Size  Location     Type
  9350 ;;  i               2    8[COMRAM] unsigned short 
  9351 ;; Return value:  Size  Location     Type
  9352 ;;                  1    wreg      void 
  9353 ;; Registers used:
  9354 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9355 ;; Tracked objects:
  9356 ;;		On entry : 0/0
  9357 ;;		On exit  : 0/0
  9358 ;;		Unchanged: 0/0
  9359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9360 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9361 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9362 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9363 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9364 ;;Total ram usage:        6 bytes
  9365 ;; Hardware stack levels used: 1
  9366 ;; Hardware stack levels required when called: 1
  9367 ;; This function calls:
  9368 ;;		_EUSART1_Write
  9369 ;;		_EUSART1_is_tx_ready
  9370 ;;		_strlen
  9371 ;; This function is called by:
  9372 ;;		_main
  9373 ;;		_ADC_reset
  9374 ;;		_ADC_read
  9375 ;;		_i2c_driver_read_twobytes
  9376 ;; This function uses a non-reentrant model
  9377 ;;
  9378                           
  9379                           	psect	text41
  9380   00D0FA                     __ptext41:
  9381                           	callstack 0
  9382   00D0FA                     _send_string:
  9383                           	callstack 29
  9384   00D0FA  808D               	bsf	141,0,c	;volatile
  9385   00D0FC                     
  9386                           ;mcc_generated_files/eusart1.c: 171:     uint16_t i;;mcc_generated_files/eusart1.c: 172:
      +                               for(i=0;i<strlen(message);i++){
  9387   00D0FC  0E00               	movlw	0
  9388   00D0FE  6E0A               	movwf	(send_string@i+1)^0,c
  9389   00D100  0E00               	movlw	0
  9390   00D102  6E09               	movwf	send_string@i^0,c
  9391   00D104  EFA9  F068         	goto	l4281
  9392   00D108                     l4275:
  9393   00D108  EC77  F065         	call	_EUSART1_is_tx_ready	;wreg free
  9394   00D10C  0900               	iorlw	0
  9395   00D10E  B4D8               	btfsc	status,2,c
  9396   00D110  EF8C  F068         	goto	u4651
  9397   00D114  EF8E  F068         	goto	u4650
  9398   00D118                     u4651:
  9399   00D118  EF84  F068         	goto	l4275
  9400   00D11C                     u4650:
  9401   00D11C                     
  9402                           ;mcc_generated_files/eusart1.c: 174:         EUSART1_Write(message[i]);
  9403   00D11C  5009               	movf	send_string@i^0,w,c
  9404   00D11E  2405               	addwf	send_string@message^0,w,c
  9405   00D120  6E07               	movwf	??_send_string^0,c
  9406   00D122  500A               	movf	(send_string@i+1)^0,w,c
  9407   00D124  2006               	addwfc	(send_string@message+1)^0,w,c
  9408   00D126  6E08               	movwf	(??_send_string+1)^0,c
  9409   00D128  C007  FFF6         	movff	??_send_string,tblptrl
  9410   00D12C  C008  FFF7         	movff	??_send_string+1,tblptrh
  9411   00D130  0E00               	movlw	low (__mediumconst shr (0+16))
  9412   00D132  6EF8               	movwf	tblptru,c
  9413   00D134  0E0F               	movlw	(high __ramtop+-1)
  9414   00D136  64F7               	cpfsgt	tblptrh,c
  9415   00D138  D003               	bra	u4667
  9416   00D13A  0008               	tblrd		*
  9417   00D13C  50F5               	movf	tablat,w,c
  9418   00D13E  D005               	bra	u4660
  9419   00D140                     u4667:
  9420   00D140  CFF6 FFE1          	movff	tblptrl,fsr1l
  9421   00D144  CFF7 FFE2          	movff	tblptrh,fsr1h
  9422   00D148  50E7               	movf	indf1,w,c
  9423   00D14A                     u4660:
  9424   00D14A  EC3E  F065         	call	_EUSART1_Write
  9425   00D14E                     
  9426                           ;mcc_generated_files/eusart1.c: 175:     }
  9427   00D14E  4A09               	infsnz	send_string@i^0,f,c
  9428   00D150  2A0A               	incf	(send_string@i+1)^0,f,c
  9429   00D152                     l4281:
  9430   00D152  C005  F001         	movff	send_string@message,strlen@s
  9431   00D156  C006  F002         	movff	send_string@message+1,strlen@s+1
  9432   00D15A  ECD0  F066         	call	_strlen	;wreg free
  9433   00D15E  5001               	movf	?_strlen^0,w,c
  9434   00D160  5C09               	subwf	send_string@i^0,w,c
  9435   00D162  5002               	movf	(?_strlen+1)^0,w,c
  9436   00D164  580A               	subwfb	(send_string@i+1)^0,w,c
  9437   00D166  A0D8               	btfss	status,0,c
  9438   00D168  EFB8  F068         	goto	u4671
  9439   00D16C  EFBA  F068         	goto	u4670
  9440   00D170                     u4671:
  9441   00D170  EF84  F068         	goto	l4275
  9442   00D174                     u4670:
  9443   00D174  908D               	bcf	141,0,c	;volatile
  9444   00D176  0012               	return		;funcret
  9445   00D178                     __end_of_send_string:
  9446                           	callstack 0
  9447                           
  9448 ;; *************** function _strlen *****************
  9449 ;; Defined at:
  9450 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strlen.c"
  9451 ;; Parameters:    Size  Location     Type
  9452 ;;  s               2    0[COMRAM] PTR const unsigned char 
  9453 ;;		 -> STR_32(12), STR_31(13), STR_30(16), STR_29(16), 
  9454 ;;		 -> STR_28(16), STR_27(14), STR_26(15), STR_25(27), 
  9455 ;;		 -> STR_24(28), STR_23(15), STR_22(16), STR_21(15), 
  9456 ;;		 -> STR_20(17), STR_19(2), STR_18(2), STR_17(2), 
  9457 ;;		 -> ResultBuffer(15), STR_16(10), STR_15(2), STR_14(10), 
  9458 ;;		 -> SCBuffer(20), STR_12(2), STR_11(15), STR_9(21), 
  9459 ;;		 -> STR_8(28), STR_7(8), STR_6(2), STR_5(21), 
  9460 ;;		 -> DigitalBuffer(20), STR_3(12), STR_2(14), STR_1(25), 
  9461 ;; Auto vars:     Size  Location     Type
  9462 ;;  a               2    2[COMRAM] PTR const unsigned char 
  9463 ;;		 -> STR_32(12), STR_31(13), STR_30(16), STR_29(16), 
  9464 ;;		 -> STR_28(16), STR_27(14), STR_26(15), STR_25(27), 
  9465 ;;		 -> STR_24(28), STR_23(15), STR_22(16), STR_21(15), 
  9466 ;;		 -> STR_20(17), STR_19(2), STR_18(2), STR_17(2), 
  9467 ;;		 -> ResultBuffer(15), STR_16(10), STR_15(2), STR_14(10), 
  9468 ;;		 -> SCBuffer(20), STR_12(2), STR_11(15), STR_9(21), 
  9469 ;;		 -> STR_8(28), STR_7(8), STR_6(2), STR_5(21), 
  9470 ;;		 -> DigitalBuffer(20), STR_3(12), STR_2(14), STR_1(25), 
  9471 ;; Return value:  Size  Location     Type
  9472 ;;                  2    0[COMRAM] unsigned int 
  9473 ;; Registers used:
  9474 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  9475 ;; Tracked objects:
  9476 ;;		On entry : 0/0
  9477 ;;		On exit  : 0/0
  9478 ;;		Unchanged: 0/0
  9479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9480 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9481 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9483 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9484 ;;Total ram usage:        4 bytes
  9485 ;; Hardware stack levels used: 1
  9486 ;; This function calls:
  9487 ;;		Nothing
  9488 ;; This function is called by:
  9489 ;;		_send_string
  9490 ;; This function uses a non-reentrant model
  9491 ;;
  9492                           
  9493                           	psect	text42
  9494   00CDA0                     __ptext42:
  9495                           	callstack 0
  9496   00CDA0                     _strlen:
  9497                           	callstack 29
  9498   00CDA0  C001  F003         	movff	strlen@s,strlen@a
  9499   00CDA4  C002  F004         	movff	strlen@s+1,strlen@a+1
  9500   00CDA8  EFD8  F066         	goto	l3877
  9501   00CDAC                     l3875:
  9502   00CDAC  4A01               	infsnz	strlen@s^0,f,c
  9503   00CDAE  2A02               	incf	(strlen@s+1)^0,f,c
  9504   00CDB0                     l3877:
  9505   00CDB0  C001  FFF6         	movff	strlen@s,tblptrl
  9506   00CDB4  C002  FFF7         	movff	strlen@s+1,tblptrh
  9507   00CDB8  0E00               	movlw	low (__mediumconst shr (0+16))
  9508   00CDBA  6EF8               	movwf	tblptru,c
  9509   00CDBC  0E0F               	movlw	(high __ramtop+-1)
  9510   00CDBE  64F7               	cpfsgt	tblptrh,c
  9511   00CDC0  D003               	bra	u4017
  9512   00CDC2  0008               	tblrd		*
  9513   00CDC4  50F5               	movf	tablat,w,c
  9514   00CDC6  D005               	bra	u4010
  9515   00CDC8                     u4017:
  9516   00CDC8  CFF6 FFE1          	movff	tblptrl,fsr1l
  9517   00CDCC  CFF7 FFE2          	movff	tblptrh,fsr1h
  9518   00CDD0  50E7               	movf	indf1,w,c
  9519   00CDD2                     u4010:
  9520   00CDD2  0900               	iorlw	0
  9521   00CDD4  A4D8               	btfss	status,2,c
  9522   00CDD6  EFEF  F066         	goto	u4021
  9523   00CDDA  EFF1  F066         	goto	u4020
  9524   00CDDE                     u4021:
  9525   00CDDE  EFD6  F066         	goto	l3875
  9526   00CDE2                     u4020:
  9527   00CDE2  5003               	movf	strlen@a^0,w,c
  9528   00CDE4  5C01               	subwf	strlen@s^0,w,c
  9529   00CDE6  6E01               	movwf	?_strlen^0,c
  9530   00CDE8  5004               	movf	(strlen@a+1)^0,w,c
  9531   00CDEA  5802               	subwfb	(strlen@s+1)^0,w,c
  9532   00CDEC  6E02               	movwf	(?_strlen+1)^0,c
  9533   00CDEE  0012               	return		;funcret
  9534   00CDF0                     __end_of_strlen:
  9535                           	callstack 0
  9536                           
  9537 ;; *************** function _EUSART1_is_tx_ready *****************
  9538 ;; Defined at:
  9539 ;;		line 94 in file "mcc_generated_files/eusart1.c"
  9540 ;; Parameters:    Size  Location     Type
  9541 ;;		None
  9542 ;; Auto vars:     Size  Location     Type
  9543 ;;		None
  9544 ;; Return value:  Size  Location     Type
  9545 ;;                  1    wreg      _Bool 
  9546 ;; Registers used:
  9547 ;;		wreg, status,2
  9548 ;; Tracked objects:
  9549 ;;		On entry : 0/0
  9550 ;;		On exit  : 0/0
  9551 ;;		Unchanged: 0/0
  9552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9554 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9556 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9557 ;;Total ram usage:        1 bytes
  9558 ;; Hardware stack levels used: 1
  9559 ;; This function calls:
  9560 ;;		Nothing
  9561 ;; This function is called by:
  9562 ;;		_send_string
  9563 ;; This function uses a non-reentrant model
  9564 ;;
  9565                           
  9566                           	psect	text43
  9567   00CAEE                     __ptext43:
  9568                           	callstack 0
  9569   00CAEE                     _EUSART1_is_tx_ready:
  9570                           	callstack 29
  9571   00CAEE                     
  9572                           ;mcc_generated_files/eusart1.c: 96:     return (_Bool)(PIR1bits.TX1IF && TXSTA1bits.TXEN
      +                          );
  9573   00CAEE  0E00               	movlw	0
  9574   00CAF0  6E01               	movwf	_EUSART1_is_tx_ready$414^0,c
  9575   00CAF2  A89E               	btfss	158,4,c	;volatile
  9576   00CAF4  EF7E  F065         	goto	u3981
  9577   00CAF8  EF80  F065         	goto	u3980
  9578   00CAFC                     u3981:
  9579   00CAFC  EF89  F065         	goto	l111
  9580   00CB00                     u3980:
  9581   00CB00  AAAC               	btfss	172,5,c	;volatile
  9582   00CB02  EF85  F065         	goto	u3991
  9583   00CB06  EF87  F065         	goto	u3990
  9584   00CB0A                     u3991:
  9585   00CB0A  EF89  F065         	goto	l111
  9586   00CB0E                     u3990:
  9587   00CB0E  0E01               	movlw	1
  9588   00CB10  6E01               	movwf	_EUSART1_is_tx_ready$414^0,c
  9589   00CB12                     l111:
  9590   00CB12  5001               	movf	_EUSART1_is_tx_ready$414^0,w,c
  9591   00CB14  0012               	return		;funcret
  9592   00CB16                     __end_of_EUSART1_is_tx_ready:
  9593                           	callstack 0
  9594                           
  9595 ;; *************** function _EUSART1_Write *****************
  9596 ;; Defined at:
  9597 ;;		line 132 in file "mcc_generated_files/eusart1.c"
  9598 ;; Parameters:    Size  Location     Type
  9599 ;;  txData          1    wreg     unsigned char 
  9600 ;; Auto vars:     Size  Location     Type
  9601 ;;  txData          1    0[COMRAM] unsigned char 
  9602 ;; Return value:  Size  Location     Type
  9603 ;;                  1    wreg      void 
  9604 ;; Registers used:
  9605 ;;		wreg
  9606 ;; Tracked objects:
  9607 ;;		On entry : 0/0
  9608 ;;		On exit  : 0/0
  9609 ;;		Unchanged: 0/0
  9610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9612 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9614 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9615 ;;Total ram usage:        1 bytes
  9616 ;; Hardware stack levels used: 1
  9617 ;; This function calls:
  9618 ;;		Nothing
  9619 ;; This function is called by:
  9620 ;;		_send_string
  9621 ;; This function uses a non-reentrant model
  9622 ;;
  9623                           
  9624                           	psect	text44
  9625   00CA7C                     __ptext44:
  9626                           	callstack 0
  9627   00CA7C                     _EUSART1_Write:
  9628                           	callstack 29
  9629                           
  9630                           ;incstack = 0
  9631                           ;EUSART1_Write@txData stored from wreg
  9632   00CA7C  6E01               	movwf	EUSART1_Write@txData^0,c
  9633   00CA7E                     
  9634                           ;mcc_generated_files/eusart1.c: 132: void EUSART1_Write(uint8_t txData);mcc_generated_fi
      +                          les/eusart1.c: 133: {;mcc_generated_files/eusart1.c: 134:     TXREG1 = txData;
  9635   00CA7E  C001  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  9636   00CA82                     l131:
  9637                           
  9638                           ;mcc_generated_files/eusart1.c: 135:     while(0 == TXSTA1bits.TRMT)
  9639   00CA82  A2AC               	btfss	172,1,c	;volatile
  9640   00CA84  EF46  F065         	goto	u4001
  9641   00CA88  EF48  F065         	goto	u4000
  9642   00CA8C                     u4001:
  9643   00CA8C  EF41  F065         	goto	l131
  9644   00CA90                     u4000:
  9645   00CA90  0012               	return		;funcret
  9646   00CA92                     __end_of_EUSART1_Write:
  9647                           	callstack 0
  9648                           
  9649 ;; *************** function _i2c_driver_read_byte *****************
  9650 ;; Defined at:
  9651 ;;		line 83 in file "i2c_driver.c"
  9652 ;; Parameters:    Size  Location     Type
  9653 ;;  devaddr         1    wreg     unsigned char 
  9654 ;;  reg             1    3[COMRAM] unsigned char 
  9655 ;;  data            2    4[COMRAM] PTR unsigned char 
  9656 ;;		 -> ADC_read@busy_status(1), 
  9657 ;; Auto vars:     Size  Location     Type
  9658 ;;  devaddr         1    6[COMRAM] unsigned char 
  9659 ;; Return value:  Size  Location     Type
  9660 ;;                  1    wreg      void 
  9661 ;; Registers used:
  9662 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9663 ;; Tracked objects:
  9664 ;;		On entry : 0/0
  9665 ;;		On exit  : 0/0
  9666 ;;		Unchanged: 0/0
  9667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9668 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9669 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9671 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9672 ;;Total ram usage:        4 bytes
  9673 ;; Hardware stack levels used: 1
  9674 ;; Hardware stack levels required when called: 3
  9675 ;; This function calls:
  9676 ;;		_I2C1_MasterEnableRestart
  9677 ;;		_I2C1_MasterGetRxData
  9678 ;;		_I2C1_MasterIsNack
  9679 ;;		_I2C1_MasterSendTxData
  9680 ;;		_I2C1_MasterStart
  9681 ;;		_I2C1_MasterStop
  9682 ;; This function is called by:
  9683 ;;		_ADC_read
  9684 ;; This function uses a non-reentrant model
  9685 ;;
  9686                           
  9687                           	psect	text45
  9688   00D07E                     __ptext45:
  9689                           	callstack 0
  9690   00D07E                     _i2c_driver_read_byte:
  9691                           	callstack 26
  9692                           
  9693                           ;incstack = 0
  9694                           ;i2c_driver_read_byte@devaddr stored from wreg
  9695   00D07E  6E07               	movwf	i2c_driver_read_byte@devaddr^0,c
  9696   00D080                     l293:
  9697   00D080                     
  9698                           ;i2c_driver.c: 86:   {;i2c_driver.c: 87:     I2C1_MasterStart();
  9699   00D080  ECEB  F064         	call	_I2C1_MasterStart	;wreg free
  9700   00D084                     
  9701                           ;i2c_driver.c: 88:     I2C1_MasterSendTxData(devaddr);
  9702   00D084  5007               	movf	i2c_driver_read_byte@devaddr^0,w,c
  9703   00D086  EC06  F065         	call	_I2C1_MasterSendTxData
  9704   00D08A                     
  9705                           ;i2c_driver.c: 89:     if (I2C1_MasterIsNack())
  9706   00D08A  EC49  F065         	call	_I2C1_MasterIsNack	;wreg free
  9707   00D08E  0900               	iorlw	0
  9708   00D090  B4D8               	btfsc	status,2,c
  9709   00D092  EF4D  F068         	goto	u4791
  9710   00D096  EF4F  F068         	goto	u4790
  9711   00D09A                     u4791:
  9712   00D09A  EF51  F068         	goto	l4473
  9713   00D09E                     u4790:
  9714   00D09E  EF40  F068         	goto	l293
  9715   00D0A2                     l4473:
  9716                           
  9717                           ;i2c_driver.c: 92:     I2C1_MasterSendTxData(reg);
  9718   00D0A2  5004               	movf	i2c_driver_read_byte@reg^0,w,c
  9719   00D0A4  EC06  F065         	call	_I2C1_MasterSendTxData
  9720                           
  9721                           ;i2c_driver.c: 93:     if (I2C1_MasterIsNack())
  9722   00D0A8  EC49  F065         	call	_I2C1_MasterIsNack	;wreg free
  9723   00D0AC  0900               	iorlw	0
  9724   00D0AE  B4D8               	btfsc	status,2,c
  9725   00D0B0  EF5C  F068         	goto	u4801
  9726   00D0B4  EF5E  F068         	goto	u4800
  9727   00D0B8                     u4801:
  9728   00D0B8  EF60  F068         	goto	l4477
  9729   00D0BC                     u4800:
  9730   00D0BC  EF40  F068         	goto	l293
  9731   00D0C0                     l4477:
  9732                           
  9733                           ;i2c_driver.c: 96:     I2C1_MasterEnableRestart();
  9734   00D0C0  ECF3  F064         	call	_I2C1_MasterEnableRestart	;wreg free
  9735   00D0C4                     
  9736                           ;i2c_driver.c: 98:     I2C1_MasterSendTxData(devaddr | 0x1);
  9737   00D0C4  5007               	movf	i2c_driver_read_byte@devaddr^0,w,c
  9738   00D0C6  0901               	iorlw	1
  9739   00D0C8  EC06  F065         	call	_I2C1_MasterSendTxData
  9740   00D0CC                     
  9741                           ;i2c_driver.c: 99:     if (I2C1_MasterIsNack())
  9742   00D0CC  EC49  F065         	call	_I2C1_MasterIsNack	;wreg free
  9743   00D0D0  0900               	iorlw	0
  9744   00D0D2  B4D8               	btfsc	status,2,c
  9745   00D0D4  EF6E  F068         	goto	u4811
  9746   00D0D8  EF70  F068         	goto	u4810
  9747   00D0DC                     u4811:
  9748   00D0DC  EF72  F068         	goto	l4485
  9749   00D0E0                     u4810:
  9750   00D0E0  EF40  F068         	goto	l293
  9751   00D0E4                     l4485:
  9752                           
  9753                           ;i2c_driver.c: 102:     *data = I2C1_MasterGetRxData(1);
  9754   00D0E4  0E01               	movlw	1
  9755   00D0E6  ECB5  F065         	call	_I2C1_MasterGetRxData
  9756   00D0EA  C005  FFD9         	movff	i2c_driver_read_byte@data,fsr2l
  9757   00D0EE  C006  FFDA         	movff	i2c_driver_read_byte@data+1,fsr2h
  9758   00D0F2  6EDF               	movwf	indf2,c
  9759   00D0F4                     
  9760                           ;i2c_driver.c: 106:   I2C1_MasterStop();
  9761   00D0F4  ECEF  F064         	call	_I2C1_MasterStop	;wreg free
  9762   00D0F8  0012               	return		;funcret
  9763   00D0FA                     __end_of_i2c_driver_read_byte:
  9764                           	callstack 0
  9765                           
  9766 ;; *************** function _I2C1_MasterGetRxData *****************
  9767 ;; Defined at:
  9768 ;;		line 171 in file "i2c_driver.c"
  9769 ;; Parameters:    Size  Location     Type
  9770 ;;  ack             1    wreg     unsigned char 
  9771 ;; Auto vars:     Size  Location     Type
  9772 ;;  ack             1    1[COMRAM] unsigned char 
  9773 ;;  b               1    2[COMRAM] unsigned char 
  9774 ;; Return value:  Size  Location     Type
  9775 ;;                  1    wreg      unsigned char 
  9776 ;; Registers used:
  9777 ;;		wreg, status,2, cstack
  9778 ;; Tracked objects:
  9779 ;;		On entry : 0/0
  9780 ;;		On exit  : 0/0
  9781 ;;		Unchanged: 0/0
  9782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9784 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9786 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9787 ;;Total ram usage:        2 bytes
  9788 ;; Hardware stack levels used: 1
  9789 ;; Hardware stack levels required when called: 2
  9790 ;; This function calls:
  9791 ;;		_I2C1_MasterIsRxBufFull
  9792 ;;		_I2C1_MasterSendNack
  9793 ;;		_I2C1_MasterStartRx
  9794 ;;		_I2C1_MasterStopRx
  9795 ;;		_I2C1_WaitIdle
  9796 ;; This function is called by:
  9797 ;;		_i2c_driver_read_byte
  9798 ;;		_i2c_driver_read_twobytes
  9799 ;; This function uses a non-reentrant model
  9800 ;;
  9801                           
  9802                           	psect	text46
  9803   00CB6A                     __ptext46:
  9804                           	callstack 0
  9805   00CB6A                     _I2C1_MasterGetRxData:
  9806                           	callstack 26
  9807                           
  9808                           ;incstack = 0
  9809                           ;I2C1_MasterGetRxData@ack stored from wreg
  9810   00CB6A  6E02               	movwf	I2C1_MasterGetRxData@ack^0,c
  9811   00CB6C                     
  9812                           ;i2c_driver.c: 171: static __attribute__((inline)) uint8_t I2C1_MasterGetRxData(uint8_t 
      +                          ack);i2c_driver.c: 172: {;i2c_driver.c: 173:     uint8_t b;;i2c_driver.c: 175:     I2C1_
      +                          WaitIdle();
  9813   00CB6C  EC71  F067         	call	_I2C1_WaitIdle	;wreg free
  9814                           
  9815                           ;i2c_driver.c: 176:     I2C1_MasterStartRx();
  9816   00CB70  ECE7  F064         	call	_I2C1_MasterStartRx	;wreg free
  9817   00CB74                     l4307:
  9818   00CB74  EC20  F065         	call	_I2C1_MasterIsRxBufFull	;wreg free
  9819   00CB78  0900               	iorlw	0
  9820   00CB7A  B4D8               	btfsc	status,2,c
  9821   00CB7C  EFC2  F065         	goto	u4691
  9822   00CB80  EFC4  F065         	goto	u4690
  9823   00CB84                     u4691:
  9824   00CB84  EFBA  F065         	goto	l4307
  9825   00CB88                     u4690:
  9826   00CB88                     
  9827                           ;i2c_driver.c: 179:     b = SSP1BUF;
  9828   00CB88  CFC9 F003          	movff	4041,I2C1_MasterGetRxData@b	;volatile
  9829   00CB8C                     
  9830                           ;i2c_driver.c: 180:     I2C1_MasterStopRx();
  9831   00CB8C  ECE9  F064         	call	_I2C1_MasterStopRx	;wreg free
  9832   00CB90                     
  9833                           ;i2c_driver.c: 181:     I2C1_MasterSendNack(ack);
  9834   00CB90  5002               	movf	I2C1_MasterGetRxData@ack^0,w,c
  9835   00CB92  EC2A  F065         	call	_I2C1_MasterSendNack
  9836                           
  9837                           ;i2c_driver.c: 182:     return b;
  9838   00CB96  5003               	movf	I2C1_MasterGetRxData@b^0,w,c
  9839   00CB98  0012               	return		;funcret
  9840   00CB9A                     __end_of_I2C1_MasterGetRxData:
  9841                           	callstack 0
  9842                           
  9843 ;; *************** function _I2C1_MasterStopRx *****************
  9844 ;; Defined at:
  9845 ;;		line 205 in file "i2c_driver.c"
  9846 ;; Parameters:    Size  Location     Type
  9847 ;;		None
  9848 ;; Auto vars:     Size  Location     Type
  9849 ;;		None
  9850 ;; Return value:  Size  Location     Type
  9851 ;;                  1    wreg      void 
  9852 ;; Registers used:
  9853 ;;		None
  9854 ;; Tracked objects:
  9855 ;;		On entry : 0/0
  9856 ;;		On exit  : 0/0
  9857 ;;		Unchanged: 0/0
  9858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9862 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9863 ;;Total ram usage:        0 bytes
  9864 ;; Hardware stack levels used: 1
  9865 ;; This function calls:
  9866 ;;		Nothing
  9867 ;; This function is called by:
  9868 ;;		_I2C1_MasterGetRxData
  9869 ;; This function uses a non-reentrant model
  9870 ;;
  9871                           
  9872                           	psect	text47
  9873   00C9D2                     __ptext47:
  9874                           	callstack 0
  9875   00C9D2                     _I2C1_MasterStopRx:
  9876                           	callstack 27
  9877   00C9D2                     
  9878                           ;i2c_driver.c: 207:     SSP1CON2bits.RCEN = 0;
  9879   00C9D2  96C5               	bcf	197,3,c	;volatile
  9880   00C9D4  0012               	return		;funcret
  9881   00C9D6                     __end_of_I2C1_MasterStopRx:
  9882                           	callstack 0
  9883                           
  9884 ;; *************** function _I2C1_MasterStartRx *****************
  9885 ;; Defined at:
  9886 ;;		line 200 in file "i2c_driver.c"
  9887 ;; Parameters:    Size  Location     Type
  9888 ;;		None
  9889 ;; Auto vars:     Size  Location     Type
  9890 ;;		None
  9891 ;; Return value:  Size  Location     Type
  9892 ;;                  1    wreg      void 
  9893 ;; Registers used:
  9894 ;;		None
  9895 ;; Tracked objects:
  9896 ;;		On entry : 0/0
  9897 ;;		On exit  : 0/0
  9898 ;;		Unchanged: 0/0
  9899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9903 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9904 ;;Total ram usage:        0 bytes
  9905 ;; Hardware stack levels used: 1
  9906 ;; This function calls:
  9907 ;;		Nothing
  9908 ;; This function is called by:
  9909 ;;		_I2C1_MasterGetRxData
  9910 ;; This function uses a non-reentrant model
  9911 ;;
  9912                           
  9913                           	psect	text48
  9914   00C9CE                     __ptext48:
  9915                           	callstack 0
  9916   00C9CE                     _I2C1_MasterStartRx:
  9917                           	callstack 27
  9918   00C9CE                     
  9919                           ;i2c_driver.c: 202:     SSP1CON2bits.RCEN = 1;
  9920   00C9CE  86C5               	bsf	197,3,c	;volatile
  9921   00C9D0  0012               	return		;funcret
  9922   00C9D2                     __end_of_I2C1_MasterStartRx:
  9923                           	callstack 0
  9924                           
  9925 ;; *************** function _I2C1_MasterSendNack *****************
  9926 ;; Defined at:
  9927 ;;		line 217 in file "i2c_driver.c"
  9928 ;; Parameters:    Size  Location     Type
  9929 ;;  ack             1    wreg     unsigned char 
  9930 ;; Auto vars:     Size  Location     Type
  9931 ;;  ack             1    0[COMRAM] unsigned char 
  9932 ;; Return value:  Size  Location     Type
  9933 ;;                  1    wreg      void 
  9934 ;; Registers used:
  9935 ;;		wreg, cstack
  9936 ;; Tracked objects:
  9937 ;;		On entry : 0/0
  9938 ;;		On exit  : 0/0
  9939 ;;		Unchanged: 0/0
  9940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9942 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9944 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9945 ;;Total ram usage:        1 bytes
  9946 ;; Hardware stack levels used: 1
  9947 ;; Hardware stack levels required when called: 1
  9948 ;; This function calls:
  9949 ;;		_I2C1_WaitIdle
  9950 ;; This function is called by:
  9951 ;;		_I2C1_MasterGetRxData
  9952 ;; This function uses a non-reentrant model
  9953 ;;
  9954                           
  9955                           	psect	text49
  9956   00CA54                     __ptext49:
  9957                           	callstack 0
  9958   00CA54                     _I2C1_MasterSendNack:
  9959                           	callstack 26
  9960                           
  9961                           ;incstack = 0
  9962                           ;I2C1_MasterSendNack@ack stored from wreg
  9963   00CA54  6E01               	movwf	I2C1_MasterSendNack@ack^0,c
  9964   00CA56                     
  9965                           ;i2c_driver.c: 217: static __attribute__((inline)) void I2C1_MasterSendNack(uint8_t ack)
      +                          ;i2c_driver.c: 218: {;i2c_driver.c: 219:     SSP1CON2bits.ACKDT = ack;
  9966   00CA56  B001               	btfsc	I2C1_MasterSendNack@ack^0,0,c
  9967   00CA58  D002               	bra	u4045
  9968   00CA5A  9AC5               	bcf	197,5,c	;volatile
  9969   00CA5C  D001               	bra	u4046
  9970   00CA5E                     u4045:
  9971   00CA5E  8AC5               	bsf	197,5,c	;volatile
  9972   00CA60                     u4046:
  9973   00CA60                     
  9974                           ;i2c_driver.c: 220:     I2C1_WaitIdle();
  9975   00CA60  EC71  F067         	call	_I2C1_WaitIdle	;wreg free
  9976   00CA64                     
  9977                           ;i2c_driver.c: 221:     SSP1CON2bits.ACKEN = 1;
  9978   00CA64  88C5               	bsf	197,4,c	;volatile
  9979   00CA66  0012               	return		;funcret
  9980   00CA68                     __end_of_I2C1_MasterSendNack:
  9981                           	callstack 0
  9982                           
  9983 ;; *************** function _I2C1_MasterIsRxBufFull *****************
  9984 ;; Defined at:
  9985 ;;		line 224 in file "i2c_driver.c"
  9986 ;; Parameters:    Size  Location     Type
  9987 ;;		None
  9988 ;; Auto vars:     Size  Location     Type
  9989 ;;		None
  9990 ;; Return value:  Size  Location     Type
  9991 ;;                  1    wreg      _Bool 
  9992 ;; Registers used:
  9993 ;;		wreg
  9994 ;; Tracked objects:
  9995 ;;		On entry : 0/0
  9996 ;;		On exit  : 0/0
  9997 ;;		Unchanged: 0/0
  9998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10002 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10003 ;;Total ram usage:        0 bytes
 10004 ;; Hardware stack levels used: 1
 10005 ;; This function calls:
 10006 ;;		Nothing
 10007 ;; This function is called by:
 10008 ;;		_I2C1_MasterGetRxData
 10009 ;; This function uses a non-reentrant model
 10010 ;;
 10011                           
 10012                           	psect	text50
 10013   00CA40                     __ptext50:
 10014                           	callstack 0
 10015   00CA40                     _I2C1_MasterIsRxBufFull:
 10016                           	callstack 27
 10017   00CA40                     
 10018                           ;i2c_driver.c: 226:     return SSP1STATbits.BF;
 10019   00CA40  B0C7               	btfsc	199,0,c	;volatile
 10020   00CA42  EF25  F065         	goto	u4031
 10021   00CA46  EF28  F065         	goto	u4030
 10022   00CA4A                     u4031:
 10023   00CA4A  0E01               	movlw	1
 10024   00CA4C  EF29  F065         	goto	u4036
 10025   00CA50                     u4030:
 10026   00CA50  0E00               	movlw	0
 10027   00CA52                     u4036:
 10028   00CA52  0012               	return		;funcret
 10029   00CA54                     __end_of_I2C1_MasterIsRxBufFull:
 10030                           	callstack 0
 10031                           
 10032 ;; *************** function _I2C1_MasterEnableRestart *****************
 10033 ;; Defined at:
 10034 ;;		line 154 in file "i2c_driver.c"
 10035 ;; Parameters:    Size  Location     Type
 10036 ;;		None
 10037 ;; Auto vars:     Size  Location     Type
 10038 ;;		None
 10039 ;; Return value:  Size  Location     Type
 10040 ;;                  1    wreg      void 
 10041 ;; Registers used:
 10042 ;;		cstack
 10043 ;; Tracked objects:
 10044 ;;		On entry : 0/0
 10045 ;;		On exit  : 0/0
 10046 ;;		Unchanged: 0/0
 10047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10051 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10052 ;;Total ram usage:        0 bytes
 10053 ;; Hardware stack levels used: 1
 10054 ;; Hardware stack levels required when called: 1
 10055 ;; This function calls:
 10056 ;;		_I2C1_WaitIdle
 10057 ;; This function is called by:
 10058 ;;		_i2c_driver_read_byte
 10059 ;;		_i2c_driver_read_twobytes
 10060 ;; This function uses a non-reentrant model
 10061 ;;
 10062                           
 10063                           	psect	text51
 10064   00C9E6                     __ptext51:
 10065                           	callstack 0
 10066   00C9E6                     _I2C1_MasterEnableRestart:
 10067                           	callstack 27
 10068   00C9E6                     
 10069                           ;i2c_driver.c: 156:     I2C1_WaitIdle();
 10070   00C9E6  EC71  F067         	call	_I2C1_WaitIdle	;wreg free
 10071   00C9EA                     
 10072                           ;i2c_driver.c: 157:     SSP1CON2bits.RSEN = 1;
 10073   00C9EA  82C5               	bsf	197,1,c	;volatile
 10074   00C9EC  0012               	return		;funcret
 10075   00C9EE                     __end_of_I2C1_MasterEnableRestart:
 10076                           	callstack 0
 10077                           
 10078 ;; *************** function _ADC_init *****************
 10079 ;; Defined at:
 10080 ;;		line 130 in file "main.c"
 10081 ;; Parameters:    Size  Location     Type
 10082 ;;		None
 10083 ;; Auto vars:     Size  Location     Type
 10084 ;;		None
 10085 ;; Return value:  Size  Location     Type
 10086 ;;                  1    wreg      void 
 10087 ;; Registers used:
 10088 ;;		wreg, status,2, cstack
 10089 ;; Tracked objects:
 10090 ;;		On entry : 0/0
 10091 ;;		On exit  : 0/0
 10092 ;;		Unchanged: 0/0
 10093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10097 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10098 ;;Total ram usage:        0 bytes
 10099 ;; Hardware stack levels used: 1
 10100 ;; Hardware stack levels required when called: 3
 10101 ;; This function calls:
 10102 ;;		_i2c_driver_write_byte
 10103 ;; This function is called by:
 10104 ;;		_main
 10105 ;; This function uses a non-reentrant model
 10106 ;;
 10107                           
 10108                           	psect	text52
 10109   00CAAA                     __ptext52:
 10110                           	callstack 0
 10111   00CAAA                     _ADC_init:
 10112                           	callstack 27
 10113   00CAAA                     
 10114                           ;main.c: 131:     i2c_driver_write_byte(0x40, 0x19, 0x0F);
 10115   00CAAA  0E19               	movlw	25
 10116   00CAAC  6E02               	movwf	i2c_driver_write_byte@reg^0,c
 10117   00CAAE  0E0F               	movlw	15
 10118   00CAB0  6E03               	movwf	i2c_driver_write_byte@data^0,c
 10119   00CAB2  0E40               	movlw	64
 10120   00CAB4  EC9C  F067         	call	_i2c_driver_write_byte
 10121                           
 10122                           ;main.c: 132:     i2c_driver_write_byte(0x40, 0x14, 0x02);
 10123   00CAB8  0E14               	movlw	20
 10124   00CABA  6E02               	movwf	i2c_driver_write_byte@reg^0,c
 10125   00CABC  0E02               	movlw	2
 10126   00CABE  6E03               	movwf	i2c_driver_write_byte@data^0,c
 10127   00CAC0  0E40               	movlw	64
 10128   00CAC2  EC9C  F067         	call	_i2c_driver_write_byte
 10129   00CAC6  0012               	return		;funcret
 10130   00CAC8                     __end_of_ADC_init:
 10131                           	callstack 0
 10132                           
 10133 ;; *************** function _i2c_driver_write_byte *****************
 10134 ;; Defined at:
 10135 ;;		line 35 in file "i2c_driver.c"
 10136 ;; Parameters:    Size  Location     Type
 10137 ;;  devaddr         1    wreg     unsigned char 
 10138 ;;  reg             1    1[COMRAM] unsigned char 
 10139 ;;  data            1    2[COMRAM] unsigned char 
 10140 ;; Auto vars:     Size  Location     Type
 10141 ;;  devaddr         1    3[COMRAM] unsigned char 
 10142 ;; Return value:  Size  Location     Type
 10143 ;;                  1    wreg      void 
 10144 ;; Registers used:
 10145 ;;		wreg, status,2, cstack
 10146 ;; Tracked objects:
 10147 ;;		On entry : 0/0
 10148 ;;		On exit  : 0/0
 10149 ;;		Unchanged: 0/0
 10150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10151 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10152 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10154 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10155 ;;Total ram usage:        3 bytes
 10156 ;; Hardware stack levels used: 1
 10157 ;; Hardware stack levels required when called: 2
 10158 ;; This function calls:
 10159 ;;		_I2C1_MasterIsNack
 10160 ;;		_I2C1_MasterSendTxData
 10161 ;;		_I2C1_MasterStart
 10162 ;;		_I2C1_MasterStop
 10163 ;; This function is called by:
 10164 ;;		_ADC_init
 10165 ;;		_ADC_reset
 10166 ;;		_ADC_read
 10167 ;; This function uses a non-reentrant model
 10168 ;;
 10169                           
 10170                           	psect	text53
 10171   00CF38                     __ptext53:
 10172                           	callstack 0
 10173   00CF38                     _i2c_driver_write_byte:
 10174                           	callstack 27
 10175                           
 10176                           ;incstack = 0
 10177                           ;i2c_driver_write_byte@devaddr stored from wreg
 10178   00CF38  6E04               	movwf	i2c_driver_write_byte@devaddr^0,c
 10179   00CF3A                     l274:
 10180   00CF3A                     
 10181                           ;i2c_driver.c: 38:   {;i2c_driver.c: 39:     I2C1_MasterStart();
 10182   00CF3A  ECEB  F064         	call	_I2C1_MasterStart	;wreg free
 10183   00CF3E                     
 10184                           ;i2c_driver.c: 40:     I2C1_MasterSendTxData(devaddr);
 10185   00CF3E  5004               	movf	i2c_driver_write_byte@devaddr^0,w,c
 10186   00CF40  EC06  F065         	call	_I2C1_MasterSendTxData
 10187   00CF44                     
 10188                           ;i2c_driver.c: 41:     if (I2C1_MasterIsNack())
 10189   00CF44  EC49  F065         	call	_I2C1_MasterIsNack	;wreg free
 10190   00CF48  0900               	iorlw	0
 10191   00CF4A  B4D8               	btfsc	status,2,c
 10192   00CF4C  EFAA  F067         	goto	u4761
 10193   00CF50  EFAC  F067         	goto	u4760
 10194   00CF54                     u4761:
 10195   00CF54  EFAE  F067         	goto	l4455
 10196   00CF58                     u4760:
 10197   00CF58  EF9D  F067         	goto	l274
 10198   00CF5C                     l4455:
 10199                           
 10200                           ;i2c_driver.c: 44:     I2C1_MasterSendTxData(reg);
 10201   00CF5C  5002               	movf	i2c_driver_write_byte@reg^0,w,c
 10202   00CF5E  EC06  F065         	call	_I2C1_MasterSendTxData
 10203                           
 10204                           ;i2c_driver.c: 45:     if (I2C1_MasterIsNack())
 10205   00CF62  EC49  F065         	call	_I2C1_MasterIsNack	;wreg free
 10206   00CF66  0900               	iorlw	0
 10207   00CF68  B4D8               	btfsc	status,2,c
 10208   00CF6A  EFB9  F067         	goto	u4771
 10209   00CF6E  EFBB  F067         	goto	u4770
 10210   00CF72                     u4771:
 10211   00CF72  EFBD  F067         	goto	l4459
 10212   00CF76                     u4770:
 10213   00CF76  EF9D  F067         	goto	l274
 10214   00CF7A                     l4459:
 10215                           
 10216                           ;i2c_driver.c: 48:     I2C1_MasterSendTxData(data);
 10217   00CF7A  5003               	movf	i2c_driver_write_byte@data^0,w,c
 10218   00CF7C  EC06  F065         	call	_I2C1_MasterSendTxData
 10219                           
 10220                           ;i2c_driver.c: 49:     if (I2C1_MasterIsNack())
 10221   00CF80  EC49  F065         	call	_I2C1_MasterIsNack	;wreg free
 10222   00CF84  0900               	iorlw	0
 10223   00CF86  B4D8               	btfsc	status,2,c
 10224   00CF88  EFC8  F067         	goto	u4781
 10225   00CF8C  EFCA  F067         	goto	u4780
 10226   00CF90                     u4781:
 10227   00CF90  EFCC  F067         	goto	l4463
 10228   00CF94                     u4780:
 10229   00CF94  EF9D  F067         	goto	l274
 10230   00CF98                     l4463:
 10231                           
 10232                           ;i2c_driver.c: 54:   I2C1_MasterStop();
 10233   00CF98  ECEF  F064         	call	_I2C1_MasterStop	;wreg free
 10234   00CF9C  0012               	return		;funcret
 10235   00CF9E                     __end_of_i2c_driver_write_byte:
 10236                           	callstack 0
 10237                           
 10238 ;; *************** function _I2C1_MasterStop *****************
 10239 ;; Defined at:
 10240 ;;		line 160 in file "i2c_driver.c"
 10241 ;; Parameters:    Size  Location     Type
 10242 ;;		None
 10243 ;; Auto vars:     Size  Location     Type
 10244 ;;		None
 10245 ;; Return value:  Size  Location     Type
 10246 ;;                  1    wreg      void 
 10247 ;; Registers used:
 10248 ;;		cstack
 10249 ;; Tracked objects:
 10250 ;;		On entry : 0/0
 10251 ;;		On exit  : 0/0
 10252 ;;		Unchanged: 0/0
 10253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10257 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10258 ;;Total ram usage:        0 bytes
 10259 ;; Hardware stack levels used: 1
 10260 ;; Hardware stack levels required when called: 1
 10261 ;; This function calls:
 10262 ;;		_I2C1_WaitIdle
 10263 ;; This function is called by:
 10264 ;;		_i2c_driver_write_byte
 10265 ;;		_i2c_driver_read_byte
 10266 ;;		_i2c_driver_read_twobytes
 10267 ;;		_i2c_driver_write_twobytes
 10268 ;; This function uses a non-reentrant model
 10269 ;;
 10270                           
 10271                           	psect	text54
 10272   00C9DE                     __ptext54:
 10273                           	callstack 0
 10274   00C9DE                     _I2C1_MasterStop:
 10275                           	callstack 27
 10276   00C9DE                     
 10277                           ;i2c_driver.c: 162:     I2C1_WaitIdle();
 10278   00C9DE  EC71  F067         	call	_I2C1_WaitIdle	;wreg free
 10279   00C9E2                     
 10280                           ;i2c_driver.c: 163:     SSP1CON2bits.PEN = 1;
 10281   00C9E2  84C5               	bsf	197,2,c	;volatile
 10282   00C9E4  0012               	return		;funcret
 10283   00C9E6                     __end_of_I2C1_MasterStop:
 10284                           	callstack 0
 10285                           
 10286 ;; *************** function _I2C1_MasterStart *****************
 10287 ;; Defined at:
 10288 ;;		line 148 in file "i2c_driver.c"
 10289 ;; Parameters:    Size  Location     Type
 10290 ;;		None
 10291 ;; Auto vars:     Size  Location     Type
 10292 ;;		None
 10293 ;; Return value:  Size  Location     Type
 10294 ;;                  1    wreg      void 
 10295 ;; Registers used:
 10296 ;;		cstack
 10297 ;; Tracked objects:
 10298 ;;		On entry : 0/0
 10299 ;;		On exit  : 0/0
 10300 ;;		Unchanged: 0/0
 10301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10305 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10306 ;;Total ram usage:        0 bytes
 10307 ;; Hardware stack levels used: 1
 10308 ;; Hardware stack levels required when called: 1
 10309 ;; This function calls:
 10310 ;;		_I2C1_WaitIdle
 10311 ;; This function is called by:
 10312 ;;		_i2c_driver_write_byte
 10313 ;;		_i2c_driver_read_byte
 10314 ;;		_i2c_driver_read_twobytes
 10315 ;;		_i2c_driver_write_twobytes
 10316 ;; This function uses a non-reentrant model
 10317 ;;
 10318                           
 10319                           	psect	text55
 10320   00C9D6                     __ptext55:
 10321                           	callstack 0
 10322   00C9D6                     _I2C1_MasterStart:
 10323                           	callstack 27
 10324   00C9D6                     
 10325                           ;i2c_driver.c: 150:     I2C1_WaitIdle();
 10326   00C9D6  EC71  F067         	call	_I2C1_WaitIdle	;wreg free
 10327   00C9DA                     
 10328                           ;i2c_driver.c: 151:     SSP1CON2bits.SEN = 1;
 10329   00C9DA  80C5               	bsf	197,0,c	;volatile
 10330   00C9DC  0012               	return		;funcret
 10331   00C9DE                     __end_of_I2C1_MasterStart:
 10332                           	callstack 0
 10333                           
 10334 ;; *************** function _I2C1_MasterSendTxData *****************
 10335 ;; Defined at:
 10336 ;;		line 166 in file "i2c_driver.c"
 10337 ;; Parameters:    Size  Location     Type
 10338 ;;  data            1    wreg     unsigned char 
 10339 ;; Auto vars:     Size  Location     Type
 10340 ;;  data            1    0[COMRAM] unsigned char 
 10341 ;; Return value:  Size  Location     Type
 10342 ;;                  1    wreg      void 
 10343 ;; Registers used:
 10344 ;;		wreg, cstack
 10345 ;; Tracked objects:
 10346 ;;		On entry : 0/0
 10347 ;;		On exit  : 0/0
 10348 ;;		Unchanged: 0/0
 10349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10351 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10353 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10354 ;;Total ram usage:        1 bytes
 10355 ;; Hardware stack levels used: 1
 10356 ;; Hardware stack levels required when called: 1
 10357 ;; This function calls:
 10358 ;;		_I2C1_WaitIdle
 10359 ;; This function is called by:
 10360 ;;		_i2c_driver_write_byte
 10361 ;;		_i2c_driver_read_byte
 10362 ;;		_i2c_driver_read_twobytes
 10363 ;;		_i2c_driver_write_twobytes
 10364 ;; This function uses a non-reentrant model
 10365 ;;
 10366                           
 10367                           	psect	text56
 10368   00CA0C                     __ptext56:
 10369                           	callstack 0
 10370   00CA0C                     _I2C1_MasterSendTxData:
 10371                           	callstack 27
 10372                           
 10373                           ;incstack = 0
 10374                           ;I2C1_MasterSendTxData@data stored from wreg
 10375   00CA0C  6E01               	movwf	I2C1_MasterSendTxData@data^0,c
 10376   00CA0E                     
 10377                           ;i2c_driver.c: 166: static __attribute__((inline)) void I2C1_MasterSendTxData(uint8_t da
      +                          ta);i2c_driver.c: 167: {;i2c_driver.c: 168:     I2C1_WaitIdle();
 10378   00CA0E  EC71  F067         	call	_I2C1_WaitIdle	;wreg free
 10379   00CA12                     
 10380                           ;i2c_driver.c: 169:     SSP1BUF = data;
 10381   00CA12  C001  FFC9         	movff	I2C1_MasterSendTxData@data,4041	;volatile
 10382   00CA16  0012               	return		;funcret
 10383   00CA18                     __end_of_I2C1_MasterSendTxData:
 10384                           	callstack 0
 10385                           
 10386 ;; *************** function _I2C1_MasterIsNack *****************
 10387 ;; Defined at:
 10388 ;;		line 211 in file "i2c_driver.c"
 10389 ;; Parameters:    Size  Location     Type
 10390 ;;		None
 10391 ;; Auto vars:     Size  Location     Type
 10392 ;;		None
 10393 ;; Return value:  Size  Location     Type
 10394 ;;                  1    wreg      _Bool 
 10395 ;; Registers used:
 10396 ;;		wreg, cstack
 10397 ;; Tracked objects:
 10398 ;;		On entry : 0/0
 10399 ;;		On exit  : 0/0
 10400 ;;		Unchanged: 0/0
 10401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10402 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10403 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10405 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10406 ;;Total ram usage:        0 bytes
 10407 ;; Hardware stack levels used: 1
 10408 ;; Hardware stack levels required when called: 1
 10409 ;; This function calls:
 10410 ;;		_I2C1_WaitIdle
 10411 ;; This function is called by:
 10412 ;;		_i2c_driver_write_byte
 10413 ;;		_i2c_driver_read_byte
 10414 ;;		_i2c_driver_read_twobytes
 10415 ;;		_i2c_driver_write_twobytes
 10416 ;; This function uses a non-reentrant model
 10417 ;;
 10418                           
 10419                           	psect	text57
 10420   00CA92                     __ptext57:
 10421                           	callstack 0
 10422   00CA92                     _I2C1_MasterIsNack:
 10423                           	callstack 27
 10424   00CA92                     
 10425                           ;i2c_driver.c: 213:   I2C1_WaitIdle();
 10426   00CA92  EC71  F067         	call	_I2C1_WaitIdle	;wreg free
 10427   00CA96                     
 10428                           ;i2c_driver.c: 214:   return SSP1CON2bits.ACKSTAT;
 10429   00CA96  BCC5               	btfsc	197,6,c	;volatile
 10430   00CA98  EF50  F065         	goto	u4681
 10431   00CA9C  EF53  F065         	goto	u4680
 10432   00CAA0                     u4681:
 10433   00CAA0  0E01               	movlw	1
 10434   00CAA2  EF54  F065         	goto	u4686
 10435   00CAA6                     u4680:
 10436   00CAA6  0E00               	movlw	0
 10437   00CAA8                     u4686:
 10438   00CAA8  0012               	return		;funcret
 10439   00CAAA                     __end_of_I2C1_MasterIsNack:
 10440                           	callstack 0
 10441                           
 10442 ;; *************** function _I2C1_WaitIdle *****************
 10443 ;; Defined at:
 10444 ;;		line 139 in file "i2c_driver.c"
 10445 ;; Parameters:    Size  Location     Type
 10446 ;;		None
 10447 ;; Auto vars:     Size  Location     Type
 10448 ;;		None
 10449 ;; Return value:  Size  Location     Type
 10450 ;;                  1    wreg      void 
 10451 ;; Registers used:
 10452 ;;		None
 10453 ;; Tracked objects:
 10454 ;;		On entry : 0/0
 10455 ;;		On exit  : 0/0
 10456 ;;		Unchanged: 0/0
 10457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10461 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10462 ;;Total ram usage:        0 bytes
 10463 ;; Hardware stack levels used: 1
 10464 ;; This function calls:
 10465 ;;		Nothing
 10466 ;; This function is called by:
 10467 ;;		_I2C1_MasterStart
 10468 ;;		_I2C1_MasterEnableRestart
 10469 ;;		_I2C1_MasterStop
 10470 ;;		_I2C1_MasterSendTxData
 10471 ;;		_I2C1_MasterGetRxData
 10472 ;;		_I2C1_MasterIsNack
 10473 ;;		_I2C1_MasterSendNack
 10474 ;; This function uses a non-reentrant model
 10475 ;;
 10476                           
 10477                           	psect	text58
 10478   00CEE2                     __ptext58:
 10479                           	callstack 0
 10480   00CEE2                     _I2C1_WaitIdle:
 10481                           	callstack 27
 10482   00CEE2                     l311:
 10483                           
 10484                           ;i2c_driver.c: 142:   while ((SSP1STATbits.RW) || (SSP1CON2bits.SEN) ||
 10485   00CEE2  B4C7               	btfsc	199,2,c	;volatile
 10486   00CEE4  EF76  F067         	goto	u2961
 10487   00CEE8  EF78  F067         	goto	u2960
 10488   00CEEC                     u2961:
 10489   00CEEC  EF71  F067         	goto	l311
 10490   00CEF0                     u2960:
 10491   00CEF0  B0C5               	btfsc	197,0,c	;volatile
 10492   00CEF2  EF7D  F067         	goto	u2971
 10493   00CEF6  EF7F  F067         	goto	u2970
 10494   00CEFA                     u2971:
 10495   00CEFA  EF71  F067         	goto	l311
 10496   00CEFE                     u2970:
 10497   00CEFE  B2C5               	btfsc	197,1,c	;volatile
 10498   00CF00  EF84  F067         	goto	u2981
 10499   00CF04  EF86  F067         	goto	u2980
 10500   00CF08                     u2981:
 10501   00CF08  EF71  F067         	goto	l311
 10502   00CF0C                     u2980:
 10503   00CF0C  B4C5               	btfsc	197,2,c	;volatile
 10504   00CF0E  EF8B  F067         	goto	u2991
 10505   00CF12  EF8D  F067         	goto	u2990
 10506   00CF16                     u2991:
 10507   00CF16  EF71  F067         	goto	l311
 10508   00CF1A                     u2990:
 10509   00CF1A  B6C5               	btfsc	197,3,c	;volatile
 10510   00CF1C  EF92  F067         	goto	u3001
 10511   00CF20  EF94  F067         	goto	u3000
 10512   00CF24                     u3001:
 10513   00CF24  EF71  F067         	goto	l311
 10514   00CF28                     u3000:
 10515   00CF28  B8C5               	btfsc	197,4,c	;volatile
 10516   00CF2A  EF99  F067         	goto	u3011
 10517   00CF2E  EF9B  F067         	goto	u3010
 10518   00CF32                     u3011:
 10519   00CF32  EF71  F067         	goto	l311
 10520   00CF36                     u3010:
 10521   00CF36  0012               	return		;funcret
 10522   00CF38                     __end_of_I2C1_WaitIdle:
 10523                           	callstack 0
 10524                           
 10525                           	psect	rparam
 10526   000000                     
 10527                           	psect	idloc
 10528                           
 10529                           ;Config register IDLOC0 @ 0x200000
 10530                           ;	unspecified, using default values
 10531   200000                     	org	2097152
 10532   200000  FF                 	db	255
 10533                           
 10534                           ;Config register IDLOC1 @ 0x200001
 10535                           ;	unspecified, using default values
 10536   200001                     	org	2097153
 10537   200001  FF                 	db	255
 10538                           
 10539                           ;Config register IDLOC2 @ 0x200002
 10540                           ;	unspecified, using default values
 10541   200002                     	org	2097154
 10542   200002  FF                 	db	255
 10543                           
 10544                           ;Config register IDLOC3 @ 0x200003
 10545                           ;	unspecified, using default values
 10546   200003                     	org	2097155
 10547   200003  FF                 	db	255
 10548                           
 10549                           ;Config register IDLOC4 @ 0x200004
 10550                           ;	unspecified, using default values
 10551   200004                     	org	2097156
 10552   200004  FF                 	db	255
 10553                           
 10554                           ;Config register IDLOC5 @ 0x200005
 10555                           ;	unspecified, using default values
 10556   200005                     	org	2097157
 10557   200005  FF                 	db	255
 10558                           
 10559                           ;Config register IDLOC6 @ 0x200006
 10560                           ;	unspecified, using default values
 10561   200006                     	org	2097158
 10562   200006  FF                 	db	255
 10563                           
 10564                           ;Config register IDLOC7 @ 0x200007
 10565                           ;	unspecified, using default values
 10566   200007                     	org	2097159
 10567   200007  FF                 	db	255
 10568                           
 10569                           	psect	config
 10570                           
 10571                           ; Padding undefined space
 10572   300000                     	org	3145728
 10573   300000  FF                 	db	255
 10574                           
 10575                           ;Config register CONFIG1H @ 0x300001
 10576                           ;	Oscillator Selection bits
 10577                           ;	FOSC = INTIO67, Internal oscillator block
 10578                           ;	4X PLL Enable
 10579                           ;	PLLCFG = ON, Oscillator multiplied by 4
 10580                           ;	Primary clock enable bit
 10581                           ;	PRICLKEN = ON, Primary clock is always enabled
 10582                           ;	Fail-Safe Clock Monitor Enable bit
 10583                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 10584                           ;	Internal/External Oscillator Switchover bit
 10585                           ;	IESO = OFF, Oscillator Switchover mode disabled
 10586   300001                     	org	3145729
 10587   300001  38                 	db	56
 10588                           
 10589                           ;Config register CONFIG2L @ 0x300002
 10590                           ;	Power-up Timer Enable bit
 10591                           ;	PWRTEN = OFF, Power up timer disabled
 10592                           ;	Brown-out Reset Enable bits
 10593                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
 10594                           ;	Brown Out Reset Voltage bits
 10595                           ;	BORV = 190, VBOR set to 1.90 V nominal
 10596   300002                     	org	3145730
 10597   300002  1F                 	db	31
 10598                           
 10599                           ;Config register CONFIG2H @ 0x300003
 10600                           ;	Watchdog Timer Enable bits
 10601                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
 10602                           ;	Watchdog Timer Postscale Select bits
 10603                           ;	WDTPS = 32768, 1:32768
 10604   300003                     	org	3145731
 10605   300003  3C                 	db	60
 10606                           
 10607                           ; Padding undefined space
 10608   300004                     	org	3145732
 10609   300004  FF                 	db	255
 10610                           
 10611                           ;Config register CONFIG3H @ 0x300005
 10612                           ;	CCP2 MUX bit
 10613                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
 10614                           ;	PORTB A/D Enable bit
 10615                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
 10616                           ;	P3A/CCP3 Mux bit
 10617                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
 10618                           ;	HFINTOSC Fast Start-up
 10619                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
 10620                           ;	Timer3 Clock input mux bit
 10621                           ;	T3CMX = PORTC0, T3CKI is on RC0
 10622                           ;	ECCP2 B output mux bit
 10623                           ;	P2BMX = PORTD2, P2B is on RD2
 10624                           ;	MCLR Pin Enable bit
 10625                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
 10626   300005                     	org	3145733
 10627   300005  BF                 	db	191
 10628                           
 10629                           ;Config register CONFIG4L @ 0x300006
 10630                           ;	Stack Full/Underflow Reset Enable bit
 10631                           ;	STVREN = ON, Stack full/underflow will cause Reset
 10632                           ;	Single-Supply ICSP Enable bit
 10633                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
 10634                           ;	Extended Instruction Set Enable bit
 10635                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 10636                           ;	Background Debug
 10637                           ;	DEBUG = OFF, Disabled
 10638   300006                     	org	3145734
 10639   300006  85                 	db	133
 10640                           
 10641                           ; Padding undefined space
 10642   300007                     	org	3145735
 10643   300007  FF                 	db	255
 10644                           
 10645                           ;Config register CONFIG5L @ 0x300008
 10646                           ;	Code Protection Block 0
 10647                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
 10648                           ;	Code Protection Block 1
 10649                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
 10650                           ;	Code Protection Block 2
 10651                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
 10652                           ;	Code Protection Block 3
 10653                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
 10654   300008                     	org	3145736
 10655   300008  0F                 	db	15
 10656                           
 10657                           ;Config register CONFIG5H @ 0x300009
 10658                           ;	Boot Block Code Protection bit
 10659                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 10660                           ;	Data EEPROM Code Protection bit
 10661                           ;	CPD = OFF, Data EEPROM not code-protected
 10662   300009                     	org	3145737
 10663   300009  C0                 	db	192
 10664                           
 10665                           ;Config register CONFIG6L @ 0x30000A
 10666                           ;	Write Protection Block 0
 10667                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
 10668                           ;	Write Protection Block 1
 10669                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
 10670                           ;	Write Protection Block 2
 10671                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
 10672                           ;	Write Protection Block 3
 10673                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
 10674   30000A                     	org	3145738
 10675   30000A  0F                 	db	15
 10676                           
 10677                           ;Config register CONFIG6H @ 0x30000B
 10678                           ;	Configuration Register Write Protection bit
 10679                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 10680                           ;	Boot Block Write Protection bit
 10681                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 10682                           ;	Data EEPROM Write Protection bit
 10683                           ;	WRTD = OFF, Data EEPROM not write-protected
 10684   30000B                     	org	3145739
 10685   30000B  E0                 	db	224
 10686                           
 10687                           ;Config register CONFIG7L @ 0x30000C
 10688                           ;	Table Read Protection Block 0
 10689                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
 10690                           ;	Table Read Protection Block 1
 10691                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
 10692                           ;	Table Read Protection Block 2
 10693                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
 10694                           ;	Table Read Protection Block 3
 10695                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
 10696   30000C                     	org	3145740
 10697   30000C  0F                 	db	15
 10698                           
 10699                           ;Config register CONFIG7H @ 0x30000D
 10700                           ;	Boot Block Table Read Protection bit
 10701                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 10702   30000D                     	org	3145741
 10703   30000D  40                 	db	64
 10704                           tosu	equ	0xFFF
 10705                           tosh	equ	0xFFE
 10706                           tosl	equ	0xFFD
 10707                           stkptr	equ	0xFFC
 10708                           pclatu	equ	0xFFB
 10709                           pclath	equ	0xFFA
 10710                           pcl	equ	0xFF9
 10711                           tblptru	equ	0xFF8
 10712                           tblptrh	equ	0xFF7
 10713                           tblptrl	equ	0xFF6
 10714                           tablat	equ	0xFF5
 10715                           prodh	equ	0xFF4
 10716                           prodl	equ	0xFF3
 10717                           indf0	equ	0xFEF
 10718                           postinc0	equ	0xFEE
 10719                           postdec0	equ	0xFED
 10720                           preinc0	equ	0xFEC
 10721                           plusw0	equ	0xFEB
 10722                           fsr0h	equ	0xFEA
 10723                           fsr0l	equ	0xFE9
 10724                           wreg	equ	0xFE8
 10725                           indf1	equ	0xFE7
 10726                           postinc1	equ	0xFE6
 10727                           postdec1	equ	0xFE5
 10728                           preinc1	equ	0xFE4
 10729                           plusw1	equ	0xFE3
 10730                           fsr1h	equ	0xFE2
 10731                           fsr1l	equ	0xFE1
 10732                           bsr	equ	0xFE0
 10733                           indf2	equ	0xFDF
 10734                           postinc2	equ	0xFDE
 10735                           postdec2	equ	0xFDD
 10736                           preinc2	equ	0xFDC
 10737                           plusw2	equ	0xFDB
 10738                           fsr2h	equ	0xFDA
 10739                           fsr2l	equ	0xFD9
 10740                           status	equ	0xFD8

Data Sizes:
    Strings     385
    Constant    0
    Data        12
    BSS         163
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160     79     160
    BANK1           256      0     100
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_32(CODE[12]), STR_31(CODE[13]), STR_30(CODE[16]), STR_29(CODE[16]), 
		 -> STR_28(CODE[16]), STR_27(CODE[14]), STR_26(CODE[15]), STR_25(CODE[27]), 
		 -> STR_24(CODE[28]), STR_23(CODE[15]), STR_22(CODE[16]), STR_21(CODE[15]), 
		 -> STR_20(CODE[17]), STR_19(CODE[2]), STR_18(CODE[2]), STR_17(CODE[2]), 
		 -> ResultBuffer(BANK0[15]), STR_16(CODE[10]), STR_15(CODE[2]), STR_14(CODE[10]), 
		 -> SCBuffer(BANK1[20]), STR_12(CODE[2]), STR_11(CODE[15]), STR_9(CODE[21]), 
		 -> STR_8(CODE[28]), STR_7(CODE[8]), STR_6(CODE[2]), STR_5(CODE[21]), 
		 -> DigitalBuffer(BANK0[20]), STR_3(CODE[12]), STR_2(CODE[14]), STR_1(CODE[25]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_32(CODE[12]), STR_31(CODE[13]), STR_30(CODE[16]), STR_29(CODE[16]), 
		 -> STR_28(CODE[16]), STR_27(CODE[14]), STR_26(CODE[15]), STR_25(CODE[27]), 
		 -> STR_24(CODE[28]), STR_23(CODE[15]), STR_22(CODE[16]), STR_21(CODE[15]), 
		 -> STR_20(CODE[17]), STR_19(CODE[2]), STR_18(CODE[2]), STR_17(CODE[2]), 
		 -> ResultBuffer(BANK0[15]), STR_16(CODE[10]), STR_15(CODE[2]), STR_14(CODE[10]), 
		 -> SCBuffer(BANK1[20]), STR_12(CODE[2]), STR_11(CODE[15]), STR_9(CODE[21]), 
		 -> STR_8(CODE[28]), STR_7(CODE[8]), STR_6(CODE[2]), STR_5(CODE[21]), 
		 -> DigitalBuffer(BANK0[20]), STR_3(CODE[12]), STR_2(CODE[14]), STR_1(CODE[25]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_36(CODE[4]), STR_33(CODE[4]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_36(CODE[4]), STR_33(CODE[4]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_13(CODE[5]), STR_10(CODE[3]), STR_4(CODE[3]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_13(CODE[5]), STR_10(CODE[3]), STR_4(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 5
		 -> STR_13(CODE[5]), STR_10(CODE[3]), STR_4(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 5
		 -> STR_13(CODE[5]), STR_10(CODE[3]), STR_4(CODE[3]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S1488$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_13(CODE[5]), STR_10(CODE[3]), STR_4(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> SCBuffer(BANK1[20]), DigitalBuffer(BANK0[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1409$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S1409$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    i2c_driver_read_twobytes@data	PTR unsigned short  size(2) Largest target is 2
		 -> ADC_result0(BANK0[2]), 

    i2c_driver_read_byte@data	PTR unsigned char  size(2) Largest target is 1
		 -> ADC_read@busy_status(COMRAM[1]), 

    send_string@message	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_32(CODE[12]), STR_31(CODE[13]), STR_30(CODE[16]), STR_29(CODE[16]), 
		 -> STR_28(CODE[16]), STR_27(CODE[14]), STR_26(CODE[15]), STR_25(CODE[27]), 
		 -> STR_24(CODE[28]), STR_23(CODE[15]), STR_22(CODE[16]), STR_21(CODE[15]), 
		 -> STR_20(CODE[17]), STR_19(CODE[2]), STR_18(CODE[2]), STR_17(CODE[2]), 
		 -> ResultBuffer(BANK0[15]), STR_16(CODE[10]), STR_15(CODE[2]), STR_14(CODE[10]), 
		 -> SCBuffer(BANK1[20]), STR_12(CODE[2]), STR_11(CODE[15]), STR_9(CODE[21]), 
		 -> STR_8(CODE[28]), STR_7(CODE[8]), STR_6(CODE[2]), STR_5(CODE[21]), 
		 -> DigitalBuffer(BANK0[20]), STR_3(CODE[12]), STR_2(CODE[14]), STR_1(CODE[25]), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _xtoa->_pad
    _efgtoa->_floorf
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    ___fldiv->___xxtofl
    _atoi->___wmul
    ___xxtofl->___wmul
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _ADC_reset->_send_string
    _ADC_read->_i2c_driver_read_twobytes
    _i2c_driver_read_twobytes->_send_string
    _send_string->_strlen
    _i2c_driver_read_byte->_I2C1_MasterGetRxData
    _I2C1_MasterGetRxData->_I2C1_MasterSendNack
    _ADC_init->_i2c_driver_write_byte
    _i2c_driver_write_byte->_I2C1_MasterSendTxData

Critical Paths under _main in BANK0

    _main->_sprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   46117
                                             93 COMRAM     2     2      0
                           _ADC_init
                           _ADC_read
                          _ADC_reset
                  _SYSTEM_Initialize
                            ___fldiv
                             ___wmul
                           ___xxtofl
                    _i2c_driver_init
                        _send_string
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             23    15      8   27814
                                             58 BANK0     21    13      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   27153
                                             85 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           25    19      6   26789
                                             75 COMRAM    10     4      6
                                             47 BANK0     11    11      0
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                35    25     10    3200
                                             27 COMRAM    35    25     10
                                _pad
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              57    50      7   20409
                                             65 COMRAM    10     3      7
                                              0 BANK0     47    47      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               8     4      4     400
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2683
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     931
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4     682
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              11     5      6     371
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _labs                                                 8     4      4     294
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             45 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     457
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    2889
                                             25 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    2414
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    2504
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     790
                                             25 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2159
                                             20 COMRAM    25    17      8
                             ___wmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                 9     7      2    1232
                                              6 COMRAM     9     7      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              5     3      2     207
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              4     2      2     237
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     463
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _i2c_driver_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                              6 COMRAM    14    10      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     294
                 _EUSART1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     294
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _ADC_reset                                            0     0      0    3810
              _i2c_driver_write_byte
                        _send_string
 ---------------------------------------------------------------------------------
 (1) _ADC_read                                             3     3      0    7346
                                             17 COMRAM     1     1      0
               _i2c_driver_read_byte
           _i2c_driver_read_twobytes
              _i2c_driver_write_byte
                        _send_string
 ---------------------------------------------------------------------------------
 (2) _i2c_driver_read_twobytes                             7     4      3    3161
                                             10 COMRAM     7     4      3
           _I2C1_MasterEnableRestart
               _I2C1_MasterGetRxData
                  _I2C1_MasterIsNack
              _I2C1_MasterSendTxData
                   _I2C1_MasterStart
                    _I2C1_MasterStop
                        _send_string
 ---------------------------------------------------------------------------------
 (1) _send_string                                          6     4      2    2810
                                              4 COMRAM     6     4      2
                      _EUSART1_Write
                _EUSART1_is_tx_ready
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _EUSART1_is_tx_ready                                  1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Write                                        1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _i2c_driver_read_byte                                 4     1      3     329
                                              3 COMRAM     4     1      3
           _I2C1_MasterEnableRestart
               _I2C1_MasterGetRxData
                  _I2C1_MasterIsNack
              _I2C1_MasterSendTxData
                   _I2C1_MasterStart
                    _I2C1_MasterStop
 ---------------------------------------------------------------------------------
 (3) _I2C1_MasterGetRxData                                 2     2      0      67
                                              1 COMRAM     2     2      0
             _I2C1_MasterIsRxBufFull
                _I2C1_MasterSendNack
                 _I2C1_MasterStartRx
                  _I2C1_MasterStopRx
                      _I2C1_WaitIdle
 ---------------------------------------------------------------------------------
 (4) _I2C1_MasterStopRx                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C1_MasterStartRx                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C1_MasterSendNack                                  1     1      0      22
                                              0 COMRAM     1     1      0
                      _I2C1_WaitIdle
 ---------------------------------------------------------------------------------
 (4) _I2C1_MasterIsRxBufFull                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C1_MasterEnableRestart                             0     0      0       0
                      _I2C1_WaitIdle
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0    1000
              _i2c_driver_write_byte
 ---------------------------------------------------------------------------------
 (2) _i2c_driver_write_byte                                3     1      2    1000
                                              1 COMRAM     3     1      2
                  _I2C1_MasterIsNack
              _I2C1_MasterSendTxData
                   _I2C1_MasterStart
                    _I2C1_MasterStop
 ---------------------------------------------------------------------------------
 (3) _I2C1_MasterStop                                      0     0      0       0
                      _I2C1_WaitIdle
 ---------------------------------------------------------------------------------
 (3) _I2C1_MasterStart                                     0     0      0       0
                      _I2C1_WaitIdle
 ---------------------------------------------------------------------------------
 (3) _I2C1_MasterSendTxData                                1     1      0      22
                                              0 COMRAM     1     1      0
                      _I2C1_WaitIdle
 ---------------------------------------------------------------------------------
 (3) _I2C1_MasterIsNack                                    0     0      0       0
                      _I2C1_WaitIdle
 ---------------------------------------------------------------------------------
 (4) _I2C1_WaitIdle                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
     _i2c_driver_write_byte
       _I2C1_MasterIsNack
         _I2C1_WaitIdle
       _I2C1_MasterSendTxData
         _I2C1_WaitIdle
       _I2C1_MasterStart
         _I2C1_WaitIdle
       _I2C1_MasterStop
         _I2C1_WaitIdle
   _ADC_read
     _i2c_driver_read_byte
       _I2C1_MasterEnableRestart
         _I2C1_WaitIdle
       _I2C1_MasterGetRxData
         _I2C1_MasterIsRxBufFull
         _I2C1_MasterSendNack
           _I2C1_WaitIdle
         _I2C1_MasterStartRx
         _I2C1_MasterStopRx
         _I2C1_WaitIdle
       _I2C1_MasterIsNack
       _I2C1_MasterSendTxData
       _I2C1_MasterStart
       _I2C1_MasterStop
     _i2c_driver_read_twobytes
       _I2C1_MasterEnableRestart
       _I2C1_MasterGetRxData
       _I2C1_MasterIsNack
       _I2C1_MasterSendTxData
       _I2C1_MasterStart
       _I2C1_MasterStop
       _send_string
         _EUSART1_Write
         _EUSART1_is_tx_ready
         _strlen
     _i2c_driver_write_byte
     _send_string
   _ADC_reset
     _i2c_driver_write_byte
     _send_string
   _SYSTEM_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   ___fldiv
     ___wmul (ARG)
     ___xxtofl (ARG)
       ___wmul (ARG)
   ___wmul
   ___xxtofl
   _i2c_driver_init
   _send_string
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _labs
           _memcpy
           _pad
             _fputc
               _putch
             _fputs
               _fputc
           _strcpy
         _fputc
         _isdigit
         _xtoa
           _pad

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      48        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      64       7       39.1%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     4F      A0       5      100.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITBANK15           38      0       0      34        0.0%
BANK15              38      0       0      35        0.0%
BITBIGSFRllllhh     27      0       0      45        0.0%
BITBIGSFRllllhl     24      0       0      46        0.0%
BITBIGSFRhl         1D      0       0      37        0.0%
BITBIGSFRhh          D      0       0      36        0.0%
BITBIGSFRlhllh       C      0       0      41        0.0%
BITBIGSFRlhhl        C      0       0      39        0.0%
BITBIGSFRlhhh        8      0       0      38        0.0%
BITBIGSFRlhlhh       7      0       0      40        0.0%
BITBIGSFRllhh        4      0       0      43        0.0%
BITBIGSFRllhll       4      0       0      44        0.0%
BITBIGSFRlhlll       2      0       0      42        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     163      47        0.0%
DATA                 0      0     163       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Mon Apr 17 12:18:17 2023

                                  ___fldiv@aexp 002D                                    ___fldiv@bexp 002C  
                                  ___fldiv@sign 0025                                              l15 CA3E  
                                            l18 CA30                                              l57 CC0E  
                                  ___awdiv@sign 0006                             ___wmul@multiplicand 0003  
                                           l111 CB12                                             l112 CB14  
                                           l131 CA82                                             l107 CC8C  
                                           l222 CAC6                                             l134 CA90  
                                           l302 D4FC                                             l230 D210  
                                           l311 CEE2                                             l320 C9EC  
                                           l152 C9F6                                             l225 CB3C  
                                           l314 CF36                                             l146 CA00  
                                           l323 C9E4                                             l331 CB88  
                                           l163 D174                                             l155 D0FA  
                                           l332 CB98                                             l308 D5E2  
                                           l228 D1AC                                             l341 CAA8  
                                           l317 C9DC                                             l165 D176  
                                           l149 CA0A                                             l326 CA16  
                                           l350 CAEC                                             l335 C9D0  
                                           l271 CA7A                                             l280 CF9C  
                                           l344 CA66                                             l274 CF3A  
                                           l338 C9D4                                             l347 CA52  
                                           l620 D7E4                                             l293 D080  
                                           l615 D79E                                             l624 CBD0  
                                           l609 D2BA                                             l299 D0F8  
                                           l581 D42E                                             l647 D8EA  
                                           l904 F144                                             l920 CD9E  
                                           l905 F132                                             l594 D36A  
                                           l932 E52C                                             l934 E38C  
                                           l943 E3D2                                             l880 EF0E  
                                           l945 E44A                                             l937 E350  
                                           l946 E438                                             l971 EBFC  
                                           l964 EA06                                             l981 ED2C  
                                           l973 EC74                                             l974 EC62  
                                           l878 EF5A                                             l895 F074  
                                           l887 F22A                                             l879 EF48  
                                           l968 ED6A                                             _pad D004  
                                  ___awmod@sign 0006                                             wreg 000FE8  
                        ?_I2C1_MasterSendTxData 0001                                      _TXSTA1bits 000FAC  
                                  ___flmul@aexp 0012                       ?_I2C1_MasterEnableRestart 0001  
                                  ___flmul@bexp 0013                                    ___flmul@sign 000D  
                                  ___flmul@temp 0018                                    ___flmul@prod 0014  
                                    _SC_voltage 00C1                                 ??_I2C1_WaitIdle 0001  
                                  ___fltol@exp1 000A                                            l1012 DCC4  
                                          l1005 DC2C                                            l1008 DD88  
                                          l1121 FA4E                                            l1202 CE8E  
                                          l1019 DD20                                            l1212 D6E0  
                                          l1028 CEE0                                            l1301 C9CC  
                                          l1062 D026                                            l1150 DA68  
                                          l1080 F5BE                                            l1152 DA70  
                                          l1313 CDEE                                            l1066 D07C  
                                          l1082 F404                                            l1162 DBD4  
                                          l1235 DA36                                            l1307 CCCE  
                                          l1244 E192                                            l3101 EDB8  
                                          l1093 F61A                                            l1077 FE7A  
                                          l1254 CB68                                            l1262 CD58  
                                          l1238 DA3E                                            l3111 EDEA  
                                          l3103 EDBA                                            l1247 E0D6  
                                          l1272 D002                                            l3201 EFB8  
                                          l3121 EE12                                            l3113 EDEC  
                                          l3105 EDC2                                            l4001 F638  
                                          l1290 D4F8                                            l3211 EFE2  
                                          l3203 EFC4                                            l3131 EE4C  
                                          l3123 EE22                                            l3115 EDF2  
                                          l3107 EDD2                                            l4003 F64A  
                                          l4011 F69C                                            l1179 E940  
                                          l3301 CEF0                                            l3221 F054  
                                          l3205 EFC8                                            l3213 EFE8  
                                          l3141 EE78                                            l3133 EE5E  
                                          l3125 EE32                                            l3117 EE00  
                                          l3109 EDD8                                            l1269 CFF2  
                                          l4101 FB76                                            l4021 F6DA  
                                          l4013 F6A4                                            l4005 F666  
                                          l1278 CE3E                                            l3303 CEFE  
                                          l3311 CAC8                                            l3231 F0AE  
                                          l3215 F00E                                            l3223 F064  
                                          l3207 EFD6                                            l3151 EE8C  
                                          l3143 EE7C                                            l3135 EE6C  
                                          l3127 EE34                                            l3119 EE02  
                                          l4111 FB9E                                            l4103 FB7C  
                                          l4023 F6EC                                            l4031 F72C  
                                          l4015 F6B6                                            l4007 F690  
                                          l3305 CF0C                                            l3313 CAE4  
                                          l3401 E39C                                            l3321 E1AE  
                                          l3241 F0DE                                            l3233 F0B8  
                                          l3225 F08A                                            l3217 F042  
                                          l3209 EFD8                                            l3161 EEA0  
                                          l3153 EE90                                            l3145 EE80  
                                          l3137 EE70                                            l3129 EE3C  
                                          l3081 D45E                                            l4105 FB84  
                                          l4113 FBA4                                            l4121 FBD2  
                                          l4041 F814                                            l4033 F734  
                                          l4025 F6FA                                            l4017 F6C8  
                                          l4009 F698                                            l4201 DA98  
                                          l1298 CD12                                            l3307 CF1A  
                                          l3403 E3B2                                            l3411 E3E2  
                                          l3331 E1E2                                            l3323 E1B0  
                                          l3251 F106                                            l3243 F0E2  
                                          l3235 F0C6                                            l3227 F09A  
                                          l3219 F044                                            l3171 EEDA  
                                          l3163 EEA4                                            l3155 EE94  
                                          l3147 EE84                                            l3139 EE74  
                                          l3091 ED78                                            l3083 D47C  
                                          l3075 D430                                            l4131 FC88  
                                          l4123 FC2A                                            l4115 FBB6  
                                          l4107 FB94                                            l4051 F8D2  
                                          l4043 F848                                            l4035 F744  
                                          l4027 F712                                            l4019 F6D6  
                                          l4211 DAC6                                            l4203 DAA0  
                                          l3309 CF28                                            l4301 C9E6  
                                          l3413 E3F0                                            l3405 E3B8  
                                          l3341 E214                                            l3325 E1C0  
                                          l3333 E1EA                                            l3317 E194  
                                          l3501 EA66                                            l3261 F160  
                                          l3253 F114                                            l3245 F0F2  
                                          l3237 F0C8                                            l3181 EF2C  
                                          l3173 EEF6                                            l3165 EEA8  
                                          l3157 EE98                                            l3149 EE88  
                                          l3093 ED86                                            l3085 D4B2  
                                          l3077 D442                                            l4141 FCD2  
                                          l4133 FCA4                                            l4125 FC5E  
                                          l4117 FBC8                                            l4109 FB98  
                                          l4061 F96E                                            l4053 F8E8  
                                          l4037 F758                                            l4045 F84E  
                                          l4029 F724                                            l4221 DAFC  
                                          l4213 DAD6                                            l4205 DAAA  
                                          l4303 C9EA                                            l4311 CB90  
                                          l3423 E45A                                            l3431 E4A2  
                                          l3415 E3F4                                            l3407 E3C2  
                                          l3351 E248                                            l3343 E216  
                                          l3335 E1FA                                            l3327 E1D0  
                                          l3319 E1A0                                            l3511 EAB0  
                                          l3503 EA72                                            l3271 F1CA  
                                          l3263 F16E                                            l3255 F12A  
                                          l3239 F0D6                                            l3247 F0F4  
                                          l3191 EF78                                            l3183 EF3A  
                                          l3175 EF06                                            l3159 EE9C  
                                          l3167 EEAC                                            l3095 ED88  
                                          l3079 D454                                            l4151 FCFE  
                                          l4143 FCE0                                            l4135 FCAC  
                                          l4127 FC66                                            l4119 FBCC  
                                          l4063 F9C4                                            l4071 FA16  
                                          l4055 F91A                                            l4047 F86C  
                                          l4039 F7BC                                            l4231 DBB4  
                                          l4223 DB02                                            l4215 DAE2  
                                          l4207 DAB0                                            l4305 CB6C  
                                          l4241 D904                                            l3601 D398  
                                          l3441 E50C                                            l3433 E4BC  
                                          l3425 E466                                            l3417 E402  
                                          l3409 E3D0                                            l3361 E28E  
                                          l3345 E226                                            l3353 E250  
                                          l3337 E200                                            l3329 E1E0  
                                          l3521 EB02                                            l3513 EABC  
                                          l3505 EA8A                                            l3281 F204  
                                          l3273 F1EA                                            l3265 F1A8  
                                          l3249 F102                                            l3185 EF3C  
                                          l3177 EF1C                                            l3169 EEB0  
                                          l3097 ED98                                            l3089 ED6C  
                                          l4161 FD60                                            l4153 FD24  
                                          l4145 FCE4                                            l4137 FCBC  
                                          l4081 FADE                                            l4129 FC6A  
                                          l4073 FA26                                            l4065 F9CA  
                                          l4057 F92A                                            l4049 F8A0  
                                          l4217 DAE6                                            l4209 DAB6  
                                          l4225 DB60                                            l4321 E570  
                                          l4307 CB74                                            l4251 D99E  
                                          l4243 D922                                            l4235 D8EC  
                                          l3611 D3C6                                            l3603 D3A0  
                                          l3443 E51A                                            l3435 E4D2  
                                          l3427 E474                                            l3419 E430  
                                          l3371 E2B6                                            l3363 E292  
                                          l3355 E260                                            l3347 E236  
                                          l3339 E206                                            l3531 EB80  
                                          l3523 EB12                                            l3515 EACC  
                                          l3507 EA96                                            l3283 F20A  
                                          l3275 F1EE                                            l3259 F154  
                                          l3267 F1AA                                            l3195 EF8C  
                                          l3187 EF46                                            l3179 EF28  
                                          l3099 EDA8                                            l3291 CCD0  
                                          l4171 FDA4                                            l4163 FD7A  
                                          l4155 FD40                                            l4147 FCEC  
                                          l4139 FCCE                                            l4091 FB3C  
                                          l4083 FAFE                                            l4075 FA3A  
                                          l4067 F9FE                                            l4059 F93A  
                                          l4227 DB7C                                            l4219 DAF6  
                                          l4331 E5D6                                            l4323 E574  
                                          l4315 E52E                                            l4309 CB8C  
                                          l4501 D536                                            l4261 DA1A  
                                          l4245 D958                                            l4237 D900  
                                          l3621 D400                                            l3613 D3CE  
                                          l3605 D3A4                                            l3445 E520  
                                          l3437 E4EC                                            l3429 E49E  
                                          l3381 E304                                            l3357 E276  
                                          l3349 E246                                            l3701 D78C  
                                          l3541 EBFA                                            l3533 EBB6  
                                          l3525 EB2E                                            l3517 EAD8  
                                          l3509 EAA2                                            l3461 E95E  
                                          l3285 F218                                            l3277 F1FC  
                                          l3269 F1BA                                            l3197 EF9C  
                                          l3189 EF68                                            l3293 CCDC  
                                          l4173 FDB4                                            l4165 FD80  
                                          l4157 FD48                                            l4149 FCF8  
                                          l4181 FDD6                                            l4093 FB44  
                                          l4085 FB08                                            l4077 FA46  
                                          l4069 FA12                                            l4229 DB9A  
                                          l4333 E610                                            l4325 E59A  
                                          l4341 E678                                            l4317 E554  
                                          l4511 D564                                            l4503 D53C  
                                          l4271 C9EE                                            l4431 CBF4  
                                          l4423 CBD2                                            l4247 D960  
                                          l3631 D426                                            l3623 D402  
                                          l3615 D3DC                                            l3607 D3AC  
                                          l3447 E522                                            l3439 E508  
                                          l3391 E34E                                            l3383 E314  
                                          l3375 E2CA                                            l3359 E286  
                                          l3367 E2A6                                            l3703 D7DC  
                                          l3551 EC5A                                            l3543 EC0C  
                                          l3535 EBC4                                            l3527 EB3A  
                                          l3519 EAE8                                            l3471 E9A4  
                                          l3463 E96E                                            l3455 E942  
                                          l3711 CBB0                                            l3287 F21A  
                                          l3279 F202                                            l3199 EFAA  
                                          l3295 CCEE                                            l4191 FE52  
                                          l4183 FE06                                            l4175 FDBA  
                                          l4167 FD90                                            l4159 FD4E  
                                          l4095 FB54                                            l4087 FB1C  
                                          l4079 FA66                                            l4343 E688  
                                          l4335 E630                                            l4327 E5A2  
                                          l4319 E562                                            l4281 D152  
                                          l4273 D0FC                                            l4521 D5AE  
                                          l4513 D56C                                            l4441 CC6E  
                                          l4433 CC0C                                            l4425 CBEA  
                                          l4601 DC7A                                            l4257 D9D6  
                                          l4249 D968                                            l3625 D408  
                                          l3617 D3E2                                            l3609 D3BE  
                                          l3641 D2D6                                            l3393 E35A  
                                          l3385 E31C                                            l3377 E2E4  
                                          l3369 E2B6                                            l3705 D7E2  
                                          l3561 ECC8                                            l3545 EC1A  
                                          l3537 EBE2                                            l3529 EB56  
                                          l3481 E9D0                                            l3473 E9AA  
                                          l3465 E97E                                            l3457 E94E  
                                          l3713 CBC0                                            l3801 CF9E  
                                          l3297 CCF2                                            l4193 FE5A  
                                          l4185 FE14                                            l4177 FDC0  
                                          l4169 FD9C                                            l4097 FB62  
                                          l4089 FB2E                                            l4361 E78E  
                                          l4353 E734                                            l4345 E6A6  
                                          l4329 E5B0                                            l3299 CEE2  
                                          l4291 CA92                                            l4283 C9D6  
                                          l4451 CF44                                            l4275 D108  
                                          l4523 D5C6                                            l4507 D554  
                                          l4267 C9F8                                            l4443 CC7A  
                                          l4435 CA24                                            l4427 CBEC  
                                          l4611 DD02                                            l4603 DCAC  
                                          l4259 DA08                                            l3619 D3F8  
                                          l3627 D40E                                            l3651 D30A  
                                          l3643 D2DA                                            l3635 D2BC  
                                          l3395 E378                                            l3387 E32C  
                                          l3379 E2F4                                            l3571 ED30  
                                          l3555 EC84                                            l3563 ECCC  
                                          l3547 EC1E                                            l3539 EBEC  
                                          l3491 EA26                                            l3483 E9E0  
                                          l3475 E9B0                                            l3467 E98E  
                                          l3459 E95C                                            l3731 D850  
                                          l3723 D810                                            l3811 E00C  
                                          l3803 CFBC                                            l4187 FE2C  
                                          l4179 FDD0                                            l4099 FB72  
                                          l4371 E7F4                                            l4363 E796  
                                          l4347 E704                                            l4355 E762  
                                          l4339 E63E                                            l4531 CE4C  
                                          l4293 CA96                                            l4285 C9DA  
                                          l4277 D11C                                            l4525 D5D2  
                                          l4517 D584                                            l4509 D560  
                                          l4269 CA02                                            l4445 CC86  
                                          l4437 CC4E                                            l4429 CBF2  
                                          l4541 CA3A                                            l4621 DD58  
                                          l4613 DD10                                            l4605 DCAE  
                                          l3629 D41E                                            l3661 D344  
                                          l3653 D312                                            l3645 D2E8  
                                          l3637 D2C0                                            l3397 E37A  
                                          l3389 E340                                            l3581 ED5A  
                                          l3573 ED40                                            l3565 ECE6  
                                          l3557 EC90                                            l3549 EC2C  
                                          l3485 E9F0                                            l3477 E9BE  
                                          l3469 E994                                            l3709 CB9A  
                                          l3741 D880                                            l3733 D85E  
                                          l3725 D83A                                            l3717 D7E6  
                                          l3813 E01A                                            l3821 E0FA  
                                          l3805 DF82                                            l4189 FE3C  
                                          l3901 F242                                            l4197 DA40  
                                          l4381 E8A6                                            l4373 E828  
                                          l4357 E772                                            l4533 CE68  
                                          l4701 DF4A                                            ?_pad 0011  
                                          l4287 CA0E                                            l4463 CF98  
                                          l4455 CF5C                                            l4447 CF3A  
                                          l4279 D14E                                            l4527 D5D6  
                                          l4519 D590                                            l4551 CB30  
                                          l4439 CC62                                            l4623 DD68  
                                          l4615 DD2E                                            l4607 DCBA  
                                          l4543 CA68                                            l3591 D36C  
                                          l3655 D320                                            l3663 D34A  
                                          l3647 D2F0                                            l3639 D2CE  
                                          l3399 E38A                                            l3671 D212  
                                          l3575 ED4E                                            l3567 ECFA  
                                          l3559 EC9E                                            l3495 EA3A  
                                          l3487 E9F6                                            l3479 E9C0  
                                          l3751 D8AA                                            l3743 D88A  
                                          l3727 D83C                                            l3719 D7FC  
                                          l3823 E136                                            l3807 DFA2  
                                          l3911 F28A                                            l3903 F250  
                                          l4199 DA5C                                            l4359 E786  
                                          l4367 E79E                                            l4535 CE86  
                                          l4703 DF56                                            l4289 CA12  
                                          l4297 C9DE                                            l4449 CF3E  
                                          l4553 CAAA                                            l4481 D0CC  
                                          l4473 D0A2                                            l4465 D080  
                                          l4625 DD76                                            l4617 DD30  
                                          l4609 DCF6                                            l4545 CA78  
                                          l3593 D370                                            l3665 D35A  
                                          l3657 D336                                            l3649 D302  
                                          l3681 D2B2                                            l3673 D240  
                                          l3577 ED50                                            l3569 ED14  
                                          l3497 EA46                                            l3489 EA16  
                                          l3585 CD5A                                            l3753 D8BA  
                                          l3729 D84C                                            l3825 E14A  
                                          l3817 E08A                                            l3809 DFF8  
                                          l3841 CE20                                            l3833 CDF0  
                                          l3761 D004                                            l3913 F29A  
                                          l3921 F2C2                                            l3905 F254  
                                          l4377 E85C                                            l4369 E7D2  
                                          l4393 E916                                            l4529 CE40  
                                          l4561 CEB2                                            l4705 DF62  
                                          l4299 C9E2                                            l4459 CF7A  
                                          l4467 D084                                            l4491 D508  
                                          l4571 D192                                            l4547 CB16  
                                          l4539 CA32                                            l4627 DD78  
                                          l4619 DD34                                            l3851 CD18  
                                          l3595 D37E                                            l3667 D362  
                                          l3659 D33E                                            l3683 D2B8  
                                          l3675 D250                                            l3691 D720  
                                          l3579 ED56                                            l3499 EA50  
                                          l3587 CD6A                                            l3755 D8CA  
                                          l3739 D876                                            l3827 E172  
                                          l3819 E0C6                                            l3835 CE04  
                                          l3843 CE24                                            l3771 D04A  
                                          l3763 D012                                            l3931 F30C  
                                          l3923 F2E8                                            l3915 F2AA  
                                          l3907 F278                                            l4387 E8D6  
                                          l4379 E886                                            l4563 CECE  
                                          l4555 CE90                                            l4651 DDA2  
                                          l4643 DD8A                                            l4485 D0E4  
                                          l4477 D0C0                                            l4469 D08A  
                                          l3861 CAEE                                            l4493 D50C  
                                          l4581 D1F2                                            l4573 D1B8  
                                          l4549 CB22                                            l3845 CB3E  
                                          l3853 CD2C                                            l3597 D386  
                                          l3677 D27E                                            l3693 D74E  
                                          l3757 D8DA                                            l3749 D89E  
                                          l3781 D66A                                            l3829 E182  
                                          l3837 CE10                                            l3773 D068  
                                          l3765 D01E                                            l3941 F374  
                                          l3933 F324                                            l3925 F2FA  
                                          l3917 F2B6                                            l3909 F282  
                                          l4389 E904                                            l4557 CEA2  
                                          l4661 DDF4                                            l4653 DDAE  
                                          l4645 DD8E                                            l4487 D0F4  
                                          l4479 D0C4                                            l3871 CA7E  
                                          l3863 CAF2                                            l4495 D512  
                                          l4583 D204                                            l4575 D1CA  
                                          l4567 D178                                            l4591 DC3C  
                                          l3855 CD4E                                            l3599 D38A  
                                          l3679 D28E                                            l3695 D75E  
                                          l3687 D6E2                                            l3783 D676  
                                          l3775 D5E4                                            l3839 CE14  
                                          l3767 D032                                            l3943 F386  
                                          l3935 F32E                                            l3927 F2FE  
                                          l3919 F2BE                                            l4559 CEAA  
                                          l4671 DE28                                            l4663 DE00  
                                          l4655 DDC6                                            l4647 DD92  
                                          l3865 CB00                                            l3873 CDA0  
                                          l4489 D4FC                                            l4577 D1D8  
                                          l4569 D184                                            l4593 DC52  
                                          l4585 DBD8                                            l3857 CD52  
                                          l3849 CD14                                            l3697 D76C  
                                          l3689 D710                                            l3793 D6D8  
                                          l3777 D604                                            l3769 D046  
                                          l3945 F38A                                            l3929 F304  
                                          l4681 DE6A                                            l4673 DE28  
                                          l4665 DE0C                                            l4657 DDCA  
                                          l4649 DD9E                                            l3891 CA56  
                                          l3883 C9CE                                            l3867 CB0E  
                                          l3875 CDAC                                            l4499 D52A  
                                          l4579 D1E4                                            l4587 DBE8  
                                          l3699 D77E                                            l3779 D642  
                                          l3787 D682                                            l3971 F4BE  
                                          l3963 F414                                            l3947 F390  
                                          l3939 F34E                                            l4691 DF0E  
                                          l4683 DE76                                            l4675 DE34  
                                          l4667 DE18                                            l4659 DDD6  
                                          l3885 CA40                                            l3893 CA60  
                                          l3877 CDB0                                            l4597 DC66  
                                          l4589 DBF6                                            l3789 D694  
                                          l3797 CC8E                                            l3973 F4FC  
                                          l3965 F41A                                            l3949 F398  
                                          l3957 F3B4                                            l4693 DF1A  
                                          l4685 DE82                                            l4677 DE40  
                                          l4669 DE24                                            l3895 CA64  
                                          l3879 CDE2                                            l4599 DC6E  
                                          l3799 CC9E                                            l3991 F5F4  
                                          l3975 F510                                            l3983 F58C  
                                          l3967 F44E                                            l3959 F3CE  
                                          l4871 E7B4                                            l4695 DF26  
                                          l4687 DEDC                                            l4679 DE5E  
                                          l3889 C9D2                                            l3993 F60E  
                                          l3985 F5C6                                            l3977 F544  
                                          l3969 F48C                                            l3897 F22C  
                                          l4873 E870                                            l4697 DF32  
                                          l4689 DF02                                            l3987 F5DA  
                                          l3995 F626                                            l3979 F54C  
                                          l3899 F232                                            l4875 E8F6  
                                          l4699 DF3E                                            l4877 D988  
                                          l3989 F5EC                                            l4869 E754  
                                          STR_1 FED0                                            STR_2 FF9F  
                                          STR_3 FFC6                                            STR_4 FFFB  
                                          STR_5 FEFE                                            STR_6 FFAB  
                                          STR_7 FFE6                                            STR_8 FE99  
                                          STR_9 FEE9                                            u3000 CF28  
                                          u3001 CF24                                            u3010 CF36  
                                          u3011 CF32                                            u3100 E32C  
                                          u3020 E1AE                                            u3101 E328  
                                          u3021 E1AA                                            _LATA 000F89  
                                          u3110 E34E                                            u3030 E1C0  
                                          _LATB 000F8A                                            u3111 E34A  
                                          u3031 E1BC                                            _LATC 000F8B  
                                          u4000 CA90                                            u3200 E45A  
                                          u3120 E378                                            u3040 E1D0  
                                          _LATD 000F8C                                            u4001 CA8C  
                                          u3201 E456                                            u3121 E374  
                                          u3041 E1CC                                            _LATE 000F8D  
                                          u4010 CDD2                                            u3210 E474  
                                          u3130 E39C                                            u3050 E214  
                                          u3211 E470                                            u3131 E398  
                                          u3051 E210                                            u4020 CDE2  
                                          u3220 E4BC                                            u3140 E3B2  
                                          u3060 E226                                            u3300 E9E0  
                                          u4100 F374                                            u4021 CDDE  
                                          u3221 E4B8                                            u3141 E3AE  
                                          u3061 E222                                            u3301 E9DC  
                                          u4101 F370                                            u4030 CA50  
                                          u3230 E4EC                                            u3150 E3D0  
                                          u3070 E236                                            u3310 EA16  
                                          u4110 F386                                            u4031 CA4A  
                                          u3231 E4E8                                            u3151 E3CC  
                                          u3071 E232                                            u3311 EA12  
                                          u4111 F382                                            u3240 E51A  
                                          u3160 E3F0                                            u3080 E276  
                                          u3400 EC9E                                            u3320 EA26  
                                          u2600 EE00                                            u2520 D442  
                                          u4200 F60E                                            u4120 F400  
                                          u4017 CDC8                                            u3241 E516  
                                          u3161 E3EC                                            u3081 E272  
                                          u3401 EC9A                                            u3321 EA22  
                                          u2601 EDFC                                            u2521 D43E  
                                          u4201 F60A                                            u4121 F3FC  
                                          u3170 E402                                            u3090 E2B6  
                                          u3410 ECE6                                            u3330 EBA0  
                                          u3250 E95C                                            u2610 EE12  
                                          u2530 D454                                            u4210 F634  
                                          u4130 F48C                                            u4050 F250  
                                          u3171 E3FE                                            u3091 E2B2  
                                          u3411 ECE2                                            u3251 E958  
                                          u2611 EE0E                                            u2531 D450  
                                          u4211 F630                                            u4131 F488  
                                          u4051 F24C                                            u4036 CA52  
                                          u3500 D2CE                                            u3180 E430  
                                          u3420 ED14                                            u3340 EBFA  
                                          u3260 E96E                                            u2700 EF5A  
                                          u2620 EE22                                            u2540 D47C  
                                          u4300 F724                                            u4220 F64A  
                                          u4140 F4BE                                            u4060 F29A  
                                          u4045 CA5E                                            u3501 D2CA  
                                          u3181 E42C                                            u3421 ED10  
                                          u3341 EBF6                                            u3261 E96A  
                                          u2701 EF56                                            u2621 EE1E  
                                          u2541 D478                                            u4301 F720  
                                          u4221 F646                                            u4141 F4BA  
                                          u4061 F296                                            u4046 CA60  
                                          u3510 D2E8                                            u3190 E446  
                                          u3430 ED4E                                            u3350 EC1A  
                                          u3270 E97E                                            u2710 EF68  
                                          u2630 EE5E                                            u2550 D4B2  
                                          u4310 F86C                                            u4230 F666  
                                          u4150 F4FC                                            u4070 F2AA  
                                          u3511 D2E4                                            u3191 E442  
                                          u3431 ED4A                                            u3351 EC16  
                                          u3335 EB96                                            u3271 E97A  
                                          u2711 EF64                                            u2631 EE5A  
                                          u2551 D4AE                                            u4311 F868  
                                          u4231 F662                                            u4151 F4F8  
                                          u4071 F2A6                                            u3440 D37E  
                                          u3520 D302                                            u3600 D74E  
                                          u3360 EC2C                                            u3280 E9BE  
                                          u2800 F0C6                                            u2720 EF78  
                                          u2640 EE6C                                            u2560 ED86  
                                          u4400 FB2E                                            u4320 F8D2  
                                          u4240 F690                                            u4160 F588  
                                          u4080 F2E8                                            u3441 D37A  
                                          u3521 D2FE                                            u3601 D74A  
                                          u3361 EC28                                            u3281 E9BA  
                                          u2801 F0C2                                            u2721 EF74  
                                          u2641 EE68                                            u2561 ED82  
                                          u4401 FB2A                                            u4321 F8CE  
                                          u4241 F68C                                            u4161 F584  
                                          u4081 F2E4                                            u3450 D398  
                                          u3530 D320                                            u3610 D76C  
                                          u3370 EC5A                                            u3290 E9D0  
                                          u2810 F0D6                                            u2730 EFAA  
                                          u2650 EEDA                                            u2570 ED98  
                                          u4410 FB3C                                            u4330 F91A  
                                          u4250 F6B6                                            u4170 F5BE  
                                          u4090 F2FA                                            u3451 D394  
                                          u3531 D31C                                            u3611 D768  
                                          u3371 EC56                                            u3291 E9CC  
                                          u2811 F0D2                                            u2731 EFA6  
                                          u2651 EED6                                            u2571 ED94  
                                          u4411 FB38                                            u4331 F916  
                                          u4251 F6B2                                            u4171 F5BA  
                                          u4091 F2F6                                            u3460 D3BE  
                                          u3540 D336                                            u3620 D78C  
                                          u3380 EC70                                            u2900 F1BA  
                                          u2820 F0F2                                            u2740 EFB8  
                                          u2660 EEF2                                            u2580 EDA8  
                                          u3700 D8BA                                            u4500 FD7A  
                                          u4420 FB54                                            u4340 F92A  
                                          u4260 F6C8                                            u4180 F5DA  
                                          u3461 D3BA                                            u3541 D332  
                                          u3621 D788                                            u3381 EC6C  
                                          u2901 F1B6                                            u2821 F0EE  
                                          u2741 EFB4                                            u2661 EEEC  
                                          u2581 EDA4                                            u3701 D8B6  
                                          u4501 FD76                                            u4421 FB50  
                                          u4341 F926                                            u4261 F6C4  
                                          u4181 F5D6                                            u5037 DDB8  
                                          u3470 D3DC                                            u3550 D35A  
                                          u3630 D7DC                                            u3390 EC84  
                                          u2910 F1CA                                            u2830 F102  
                                          u2750 EFD6                                            u2670 EEF4  
                                          u2590 EDEA                                            u3710 D8CA  
                                          u4510 FD90                                            u4430 FB62  
                                          u4350 F9C4                                            u4270 F6D6  
                                          u4190 F5EC                                            u3471 D3D8  
                                          u3551 D356                                            u3631 D7D8  
                                          u3391 EC80                                            u2911 F1C6  
                                          u2831 F0FE                                            u2751 EFD2  
                                          u2591 EDE6                                            u3711 D8C6  
                                          u4511 FD8C                                            u4431 FB5E  
                                          u4351 F9C0                                            u4271 F6D2  
                                          u4191 F5E8                                            u5047 DF6C  
                                          u3480 D3F8                                            u3560 D240  
                                          u3640 CBB0                                            u2920 F1EA  
                                          u2840 F114                                            u2760 F00E  
                                          u2680 EF1C                                            u3800 D6D0  
                                          u3720 D012                                            u4520 FE26  
                                          u4440 FBB6                                            u4360 FA12  
                                          u4280 F6EC                                            u4600 DBB4  
                                          u3481 D3F4                                            u3561 D23C  
                                          u3641 CBAC                                            u2921 F1E6  
                                          u2841 F110                                            u2761 F00A  
                                          u2681 EF18                                            u3721 D00E  
                                          u4521 FE20                                            u4441 FBB2  
                                          u4361 FA0E                                            u4281 F6E8  
                                          u4601 DBB0                                            u4610 D922  
                                          u3490 D41E                                            u3570 D27E  
                                          u2930 F1FC                                            u2850 F12A  
                                          u2770 F054                                            u2690 EF3A  
                                          u3650 D7FC                                            u3730 D068  
                                          u3810 CCCE                                            u4530 FE28  
                                          u4450 FC88                                            u4370 FA3A  
                                          u4290 F6FA                                            u4611 D91E  
                                          u3491 D41A                                            u3571 D27A  
                                          u2931 F1F8                                            u2851 F126  
                                          u2771 F050                                            u2691 EF36  
                                          u3651 D7F8                                            u3731 D064  
                                          u3811 CCCA                                            u4451 FC84  
                                          u4371 FA36                                            u4291 F6F6  
                                          u4620 D954                                            u3580 D2B2  
                                          u2940 F218                                            u2860 F140  
                                          u2780 F08A                                            u3660 D830  
                                          u3740 D624                                            u3900 E11A  
                                          u3820 CFBC                                            u4540 FE3C  
                                          u4460 FCA4                                            u4380 FADE  
                                          u4700 E554                                            u4621 D950  
                                          u3581 D2AE                                            u2941 F214  
                                          u2861 F13C                                            u2781 F086  
                                          u3821 CFB8                                            u4541 FE38  
                                          u4461 FCA0                                            u4381 FADA  
                                          u4701 E550                                            u4630 DA08  
                                          u3590 D710                                            u2870 F154  
                                          u2790 F09A                                            u3670 D85E  
                                          u3750 D642                                            u3910 E136  
                                          u3830 DFCA                                            u2950 CD12  
                                          u4470 FCCE                                            u4390 FB1C  
                                          u4550 DA5C                                            u4710 E59A  
                                          u4631 DA04                                            u3591 D70C  
                                          u2871 F150                                            u2791 F096  
                                          u3671 D85A                                            u3751 D63E  
                                          u3911 E132                                            u2951 CD0E  
                                          u4471 FCCA                                            u4391 FB18  
                                          u4551 DA58                                            u4711 E596  
                                          u2960 CEF0                                            u4800 D0BC  
                                          u4640 DA1A                                            u2880 F16E  
                                          u3680 D872                                            u3760 D66A  
                                          u3920 E172                                            u3840 DFF8  
                                          u4480 FCE0                                            u4560 DAC6  
                                          u4720 E5D6                                            u2961 CEEC  
                                          u4801 D0B8                                            u4641 DA16  
                                          u2881 F16A                                            u3681 D86E  
                                          u3665 D826                                            u3761 D666  
                                          u3745 D61A                                            u3921 E16E  
                                          u3905 E110                                            u3841 DFF4  
                                          u4481 FCDC                                            u4561 DAC2  
                                          u4721 E5D2                                            u2970 CEFE  
                                          u4810 D0E0                                            u4650 D11C  
                                          u2890 F1A8                                            u3690 D89A  
                                          u3770 D694                                            u3850 E01A  
                                          u3930 CE3E                                            u4490 FD60  
                                          u4570 DB3A                                            u4730 E678  
                                          u2971 CEFA                                            u4811 D0DC  
                                          u4651 D118                                            u2891 F1A4  
                                          u3691 D896                                            u3771 D690  
                                          u3851 E016                                            u3835 DFC0  
                                          u3931 CE3A                                            u4491 FD5C  
                                          u4731 E674                                            u2980 CF0C  
                                          u4660 D14A                                            u4820 D526  
                                          u4900 DCA8                                            u3940 CB62  
                                          u4580 DB7C                                            u4740 E6A6  
                                          u2981 CF08                                            u4821 D522  
                                          u4901 DCA4                                            u3941 CB5C  
                                          u4581 DB78                                            u4741 E6A2  
                                          u2990 CF1A                                            u4670 D174  
                                          u4830 D550                                            u4910 DCF2  
                                          u3950 CB64                                            u3790 D6CE  
                                          u3870 E086                                            u4590 DB9A  
                                          u4750 E7F0                                            u2991 CF16  
                                          u4671 D170                                            u4831 D54C  
                                          u4911 DCEE                                            u3791 D6C8  
                                          u3871 E082                                            u4591 DB96  
                                          u4575 DB28                                            u4751 E7EC  
                                          u4680 CAA6                                            u4760 CF58  
                                          u4840 D580                                            u4920 DD10  
                                          u3960 CD2C                                            u3880 E0AA  
                                          u4681 CAA0                                            u4761 CF54  
                                          u4841 D57C                                            u4921 DD0C  
                                          u3961 CD28                                            u3785 D6A6  
                                          u3865 E02E                                            u4770 CF76  
                                          u4690 CB88                                            u4930 DD20  
                                          u3970 CD4E                                            u3890 E0C6  
                                          u3866 E038                                            u4850 CE86  
                                          u4771 CF72                                            u4691 CB84  
                                          u4667 D140                                            u4931 DD1C  
                                          u3971 CD4A                                            u3891 E0C2  
                                          u3867 E048                                            u4851 CE82  
                                          u4780 CF94                                            u3980 CB00  
                                          u4860 D1D8                                            u4940 DD2E  
                                          u4781 CF90                                            u3981 CAFC  
                                          u4861 D1D4                                            u4941 DD2A  
                                          u3885 E0A0                                            u4686 CAA8  
                                          u4790 D09E                                            u3990 CB0E  
                                          u4950 DD68                                            u4870 DBE8  
                                          u4791 D09A                                            u3991 CB0A  
                                          u4951 DD64                                            u4871 DBE4  
                                          u4960 DD76                                            u4880 DBF6  
                                          u4961 DD72                                            u4881 DBF2  
                                          u4890 DC52                                            u4891 DC4E  
                                          _WPUB 000F61                                   _EUSART1_Write CA7C  
                            send_string@message 0005                                            _dbuf 0100  
                                          _labs CF9E                                            _atoi D8EC  
                                          _main DD8A                                            _prec 00C7  
                                          pad@i 0018                                            pad@p 0015  
                                          fsr1h 000FE2                                            fsr2h 000FDA  
                                          indf1 000FE7                                            indf2 000FDF  
                                          fsr1l 000FE1                                            pad@w 001A  
                                          fsr2l 000FD9                                            _xtoa DA40  
                                 ___fpclassifyf D5E4                                            prodh 000FF4  
                                          prodl 000FF3                                            start 0000  
                              __end_of_ADC_init CAC8                                __end_of_ADC_read D212  
                               ___fldiv@new_exp 0026                                    ___param_bank 000000  
                     ?_i2c_driver_read_twobytes 000B                        i2c_driver_write_byte@reg 0002  
                                         ??_pad 0017                   __end_of_OSCILLATOR_Initialize CA32  
                                 ___fltol@sign1 0009                                           ?_labs 0001  
                                         ?_atoi 0007                                 __end_of___fladd F22C  
                                         ?_main 0001                                 __end_of___fldiv E52E  
                               __end_of___awdiv D430                                 __end_of___flneg CBD2  
                                         STR_10 FFFB                                           STR_11 FF04  
                                         STR_12 FFAB                                           STR_20 FF13  
                                         STR_13 FFEE                                           STR_21 FF64  
                                         STR_14 FFD2                                           STR_22 FF54  
                                         STR_30 FF44                                           STR_15 FFAB  
                                         STR_31 FFAD                                           STR_23 FF82  
                                         STR_16 FFDC                                           STR_32 FFBA  
                                         STR_24 FE7D                                           STR_17 FFAB  
                                         STR_33 FFF3                                           STR_25 FEB5  
                                         STR_18 FFAB                                           STR_26 FF73  
                                         STR_19 FFAB                                           STR_27 FF91  
                                         STR_36 FFF7                                           STR_28 FF24  
                               __end_of___awmod D36C                                           STR_29 FF34  
                               __end_of___flmul ED6C                                 __end_of___flsub CDA0  
                               __end_of___fltol D8EC                                 ___awdiv@divisor 0003  
                                         ?_xtoa 001C                                 ___awdiv@counter 0005  
                                  vfpfcnvrt@fmt 004E                   __end_of_i2c_driver_write_byte CF9E  
                                         _TRISA 000F92                                           _TRISB 000F93  
                                         _TRISC 000F94                                           _TRISD 000F95  
                                         _TRISE 000F96                          ??_I2C1_MasterGetRxData 0002  
                             ??_I2C1_MasterStop 0001                                           _flags 00C9  
                                         _fputc D430                                           _fputs CCD0  
                               __end_of_isdigit CB6A                                           labs@a 0001  
                                         atoi@n 000E                                           pad@fp 0011  
                                         atoi@s 0007                                           _width 00C5  
                                         _putch C9CC                                 __end_of_isspace CD5A  
                                ?_EUSART1_Write 0001                                           tablat 000FF5  
                                         status 000FD8                                 __end_of_sprintf CEE2  
                                ?___fpclassifyf 0001                                           xtoa@c 003E  
                                         xtoa@d 001E                                           xtoa@i 003C  
                                         xtoa@n 0034                                           xtoa@p 0032  
                                         xtoa@w 002E                                  _channel_config 00F4  
                             __end_of_ADC_reset CB3E              _EUSART1_DefaultFramingErrorHandler 000000  
                               __initialization CC10                                    __end_of_labs D004  
                                  __end_of_atoi DA40                      __end_of_EUSART1_Initialize CC8E  
                                  __end_of_main DF82                                    __end_of_xtoa DBD6  
                          _i2c_driver_read_byte D07E                                          ??_labs 0005  
                                        ??_atoi 0009                                          ??_main 005E  
                                        ??_xtoa 0026                                   __activetblptr 000003  
                               _i2c_driver_init CA68                                          ?_fputc 0001  
                                        ?_fputs 000A                                ___awdiv@dividend 0001  
                                        _ANSELA 000F38                                          ?_putch 0001  
                                        _ANSELB 000F39                                          _ANSELC 000F3A  
                                        _ANSELD 000F3B                                          _ANSELE 000F3C  
                                  ?_send_string 0005                                          _RCREG1 000FAE  
                                        _RCSTA1 000FAB                                          _OSCCON 000FD3  
                                        _SPBRG1 000FAF                                          _TXREG1 000FAD  
                              __end_of___xxtofl DD8A                                          _TXSTA1 000FAC  
                             ?_I2C1_MasterStart 0001                              ??_I2C1_MasterStart 0001  
                                  vfprintf@cfmt 005C                                          ___flge D6E2  
                                        ___fleq D212                                       ??___fladd 0009  
                                        ___wmul CAC8                                       ??___fldiv 001D  
                                     ??___awdiv 0005                                       ??___flneg 0005  
                                     ??___awmod 0005                                       ??___flmul 0009  
                                     ??___flsub 0022                                       ??___fltol 0005  
                                        _efgtoa F22C                        ?_EUSART1_SetErrorHandler 0001  
                                        _floorf DF82                                          _memcpy CDF0  
                                        clear_0 CC36                                          clear_1 CC42  
                              ___awdiv@quotient 0007                           ?_i2c_driver_read_byte 0004  
                               ___awmod@divisor 0003                                          isa$std 000001  
                               ___awmod@counter 0005                                          pad@buf 0013  
              ??_EUSART1_SetOverrunErrorHandler 0003                 ?_EUSART1_SetOverrunErrorHandler 0001  
                                        _strcpy CC8E                                          _strlen CDA0  
                                        fputc@c 0001                                          fputs@c 000E  
                                        fputs@i 000F                                          fputs@s 000A  
                                     ??_isdigit 0003                                 ___fpclassifyf@e 0009  
                               ___fpclassifyf@u 000B                                 ___fpclassifyf@x 0001  
                                  __mediumconst FE7C                                       ??_isspace 0003  
                                        tblptrh 000FF7                                          tblptrl 000FF6  
                                        tblptru 000FF8                                       ?_ADC_init 0001  
                                     ?_ADC_read 0001                                          putch@c 0001  
                              __end_of_vfprintf CE90                                 ??_EUSART1_Write 0001  
                                     ??_sprintf 005E                                          xtoa@fp 001C  
                                    ___flge@ff1 001A                                      ___flge@ff2 001E  
                               ??___fpclassifyf 0005                                    ___xxtofl@arg 0011  
                                  ___xxtofl@exp 0010                               _SYSTEM_Initialize CA32  
                                  ___xxtofl@val 0007                                      ___fleq@ff1 0001  
                                    ___fleq@ff2 0005                                      __accesstop 0060  
                       __end_of__initialization CC48                                      ___flneg@f1 0001  
                            ?_SYSTEM_Initialize 0001                                   ___rparam_used 000001  
                                    ___fltol@f1 0001                                  __pcstackCOMRAM 0001  
                                  __pidataBANK0 CA18                             ??_SYSTEM_Initialize 0003  
              __end_of_I2C1_MasterEnableRestart C9EE                                   __end_of_fputc D4FA  
                                 __end_of_fputs CD14                         __end_of_i2c_driver_init CA7C  
                                 __end_of_putch C9CE                         ??_I2C1_MasterSendTxData 0001  
                  i2c_driver_read_twobytes@data 000C                                      ??_ADC_init 0005  
                                    ??_ADC_read 0012                                         ??_fputc 0005  
                     __end_of_SYSTEM_Initialize CA40                                         ??_fputs 000E  
                                       ??_putch 0001                                      __pbssBANK0 00AF  
                                    __pbssBANK1 0100                __end_of_i2c_driver_read_twobytes D5E4  
                            _trigger_conversion 00EE                 __end_of_EUSART1_SetErrorHandler C9F8  
                                       ?___flge 001A                                         ?___fleq 0001  
                                       ?___wmul 0001                                         ?_efgtoa 0042  
                        ??_i2c_driver_read_byte 0007                                 _I2C1_MasterStop C9DE  
                                       ?_floorf 002E                                         ?_memcpy 0001  
                   i2c_driver_read_twobytes@reg 000B                                         ?_strcpy 0001  
                                       ?_strlen 0001          __end_of_EUSART1_SetFramingErrorHandler CA02  
                _EUSART1_SetFramingErrorHandler C9F8                                       ?___xxtofl 0007  
                             _I2C1_MasterIsNack CA92                                         _OSCCON2 000FD2  
                                       _OSCTUNE 000F9B                                         _SPBRGH1 000FB0  
                                       _SSP1ADD 000FC8                                         _SSP1BUF 000FC9  
                            ?_I2C1_MasterIsNack 0001                               _I2C1_MasterStopRx C9D2  
                         __end_of_I2C1_WaitIdle CF38                              ?_I2C1_MasterStopRx 0001  
                           ??_I2C1_MasterIsNack 0001                                         __Hparam 0000  
                           ??_I2C1_MasterStopRx 0001                                         __Lparam 0000  
                                     _ADC_reset CB16                                         ___fladd ED6C  
                                       ___fldiv E194                                         ___awdiv D36C  
                                       ___flneg CB9A                                         ___awmod D2BC  
                                       ___flmul E942                                         ___flsub CD5A  
                                       ___fltol D7E6                                       ?_vfprintf 0056  
                              ?_i2c_driver_init 0001                                         __pcinit CC10  
                                       __ramtop 1000                             _EUSART1_is_tx_ready CAEE  
                                       __ptext0 DD8A                                         __ptext1 CE90  
                                       __ptext2 CE40                                         __ptext3 E52E  
                                       __ptext4 DA40                                         __ptext5 F22C  
                                       __ptext6 CC8E                                         __ptext7 D004  
                                       __ptext8 CCD0                                         __ptext9 D430  
                      _I2C1_MasterEnableRestart C9E6                       __end_of_I2C1_MasterIsNack CAAA  
                         _OSCILLATOR_Initialize CA24                                         _isdigit CB3E  
                                    ??___xxtofl 000B                                ___awmod@dividend 0001  
                      ??_I2C1_MasterIsRxBufFull 0001                              _EUSART1_Initialize CC4E  
                      ??_PIN_MANAGER_Initialize 0001                                         _isspace CD14  
                     __end_of_I2C1_MasterStopRx C9D6                                         efgtoa@c 0048  
                                       efgtoa@d 006C                                         efgtoa@e 0083  
                                       efgtoa@f 0044                                         efgtoa@g 0087  
                                       efgtoa@h 0078                                         efgtoa@i 0081  
                                       efgtoa@l 007C                                         efgtoa@m 006A  
                                       efgtoa@n 0085                                         efgtoa@p 006E  
                                       efgtoa@t 0064                                         efgtoa@u 008B  
                                       efgtoa@w 0070                           _i2c_driver_write_byte CF38  
                                       atoi@neg 000C                                         _sprintf CE90  
                                       _voltage 00BD                            end_of_initialization CC48  
                                       floorf@e 003C                                         floorf@m 0038  
                                       floorf@u 003E                                         floorf@x 002E  
                           ?_EUSART1_Initialize 0001                            ?_EUSART1_is_tx_ready 0001  
                                       memcpy@d 0007                                         memcpy@n 0005  
                                       memcpy@s 0009                                         fputc@fp 0003  
                    __end_of_I2C1_MasterStartRx C9D2                     _EUSART1_OverrunErrorHandler 00FC  
                                       fputs@fp 000C                         __end_of_I2C1_MasterStop C9E6  
                      _i2c_driver_read_twobytes D4FA                               __end_of_vfpfcnvrt E942  
                                    efgtoa@mode 0073                                      ?_ADC_reset 0001  
                                    efgtoa@sign 0080                                         postdec1 000FE5  
                                       postdec2 000FDD                                         postinc0 000FEE  
                                       postinc1 000FE6                                         postinc2 000FDE  
                              vfpfcnvrt@convarg 008F                             _I2C1_MasterSendNack CA54  
                                    ??_vfprintf 005C                            ??_EUSART1_Initialize 0003  
                                       strcpy@d 0007                                         strlen@a 0003  
                                       strcpy@s 0005                                         strlen@s 0001  
                                   ___fladd@grs 0010                                   ___xxtofl@sign 000F  
                                   ___fldiv@grs 0028                                     ___fldiv@rem 0021  
                          ?_I2C1_MasterSendNack 0001                             EUSART1_Write@txData 0001  
                         ??_EUSART1_is_tx_ready 0001                                     ___flmul@grs 000E  
                                __end_of___flge D7E6                                  __end_of___fleq D2BC  
                                   vfpfcnvrt@ap 0050                                     vfpfcnvrt@cp 0098  
                                   vfpfcnvrt@fp 004C                                  __end_of___wmul CAEE  
                                __end_of_efgtoa FE7C                                  __end_of_floorf E194  
                                __end_of_memcpy CE40                          ?_OSCILLATOR_Initialize 0001  
                                    floorf@F526 00B5                                   _DigitalBuffer 00CB  
                 __end_of_I2C1_MasterSendTxData CA18                                  __end_of_strcpy CCD0  
                                __end_of_strlen CDF0                          ?_i2c_driver_write_byte 0002  
                           start_initialization CC10                                     __end_of_pad D07E  
                         ??_I2C1_MasterSendNack 0001                           __end_of_EUSART1_Write CA92  
                         __end_of___fpclassifyf D6E2                                ?_I2C1_MasterStop 0001  
                                   vfprintf@fmt 0058                                     ??_ADC_reset 000B  
                                      ??___flge 0022                                        ??___fleq 0009  
                                      ??___wmul 0005                                        ??_efgtoa 0049  
                                   _ADC_result0 00F8                                     __pdataBANK0 00EE  
                                      ??_floorf 0032                                        ??_memcpy 0007  
                                      ??_strcpy 0005                                        ??_strlen 0003  
                                     ___fladd@a 0005                                       ___fladd@b 0001  
                                     ___fldiv@a 0019                                       ___fldiv@b 0015  
                                     ___flmul@a 0005                                       ___flmul@b 0001  
                                     ___flsub@a 001E                                       ___flsub@b 001A  
                                 __pcstackBANK0 0060                ??_EUSART1_SetFramingErrorHandler 0003  
               ?_EUSART1_SetFramingErrorHandler 0001                                       __pnvBANK0 00FA  
                                   _efgtoa$1553 0062                                     _efgtoa$1547 0060  
                        _I2C1_MasterIsRxBufFull CA40                          _PIN_MANAGER_Initialize CBD2  
                       _EUSART1_is_tx_ready$414 0001                      ??_I2C1_MasterEnableRestart 0001  
                          _continous_conversion 00F0                                   __pmediumconst FE7C  
                                      ?___fladd 0001                                        ?___fldiv 0015  
                                      ?___awdiv 0001                                        ?___flneg 0001  
                                      ?___awmod 0001                                        ?___flmul 0001  
                                      ?___flsub 001A                                        ?___fltol 0001  
                              _I2C1_MasterStart C9D6                    i2c_driver_write_byte@devaddr 0004  
                                      _BAUDCON1 000FB8              _EUSART1_DefaultOverrunErrorHandler 000000  
                                      ?_isdigit 0001                            _EUSART1_ErrorHandler 00FA  
                                      ?_isspace 0001                     i2c_driver_read_byte@devaddr 0007  
                                      _ADC_init CAAA                                        _ADC_read D178  
                       _EUSART1_SetErrorHandler C9EE                                        ?_sprintf 009A  
                    ??_i2c_driver_read_twobytes 000E                       I2C1_MasterSendTxData@data 0001  
                                 ??_send_string 0007                                  ___wmul@product 0005  
       EUSART1_SetErrorHandler@interruptHandler 0001                                        _LATEbits 000F8D  
                  __end_of_I2C1_MasterGetRxData CB9A                                        _PIR1bits 000F9E  
                     i2c_driver_write_byte@data 0003                                        _SSP1CON1 000FC6  
                                      _SSP1CON2 000FC5                                        _SCBuffer 0150  
                                      _SSP1STAT 000FC7                              _I2C1_MasterStartRx C9CE  
                                     _vfpfcnvrt E52E                           I2C1_MasterGetRxData@b 0003  
                                     _xtoa$1562 0030                               ___wmul@multiplier 0001  
                           ?_I2C1_MasterStartRx 0001                              _lock_adc_registers 00F2  
                                  _isspace$1636 0005                                      vfpfcnvrt@c 0097  
                                   _INTCON2bits 000FF1                                       copy_data0 CC24  
                          ??_I2C1_MasterStartRx 0001                                        __Hrparam 0000  
                                  send_string@i 0009                             __end_of_send_string D178  
                                     memcpy@tmp 000B                                      vfprintf@ap 005A  
                                      __Lrparam 0000                                      vfprintf@fp 0056  
                                    _ADC_result 00AF                         ??_OSCILLATOR_Initialize 0001  
                                    ?_vfpfcnvrt 004C                         ??_i2c_driver_write_byte 0004  
                            ___fpclassifyf@F465 00B9                       ??_EUSART1_SetErrorHandler 0003  
                   _EUSART1_DefaultErrorHandler 000000                                      sprintf@fmt 009C  
                                      ___xxtofl DBD6                                    _ResultBuffer 00DF  
                   __end_of_EUSART1_is_tx_ready CB16                                        __ptext10 C9CC  
                                      __ptext11 CDF0                                        __ptext20 D6E2  
                                      __ptext12 CF9E                                        __ptext21 D212  
                                      __ptext13 DF82                                        __ptext30 DBD6  
                                      __ptext22 E194                                        __ptext14 D5E4  
                                      __ptext31 CA32                                        __ptext23 D2BC  
                                      __ptext15 D7E6                                        __ptext40 D4FA  
                                      __ptext32 CBD2                                        __ptext24 D36C  
                                      __ptext16 CD5A                                        __ptext41 D0FA  
                                      __ptext33 CA24                                        __ptext25 D8EC  
                                      __ptext17 ED6C                                        __ptext50 CA40  
                                      __ptext42 CDA0                                        __ptext34 CC4E  
                                      __ptext26 CD14                                        __ptext18 CB9A  
                                      __ptext51 C9E6                                        __ptext43 CAEE  
                                      __ptext35 CA02                                        __ptext27 CB3E  
                                      __ptext19 E942                                        __ptext52 CAAA  
                                      __ptext44 CA7C                                        __ptext36 C9F8  
                                      __ptext28 CAC8                                        __ptext53 CF38  
                                      __ptext45 D07E                                        __ptext37 C9EE  
                                      __ptext29 CA68                                        __ptext54 C9DE  
                                      __ptext46 CB6A                                        __ptext38 CB16  
                                      __ptext55 C9D6                                        __ptext47 C9D2  
                                      __ptext39 D178                                        __ptext56 CA0C  
                                      __ptext48 C9CE                                        __ptext57 CA92  
                                      __ptext49 CA54                                        __ptext58 CEE2  
                                  _SSP1CON1bits 000FC6                                    _SSP1CON2bits 000FC5  
                                    strcpy@dest 0001                                   _I2C1_WaitIdle CEE2  
                        I2C1_MasterSendNack@ack 0001                                        efgtoa@fp 0042  
                                      efgtoa@ne 0068                                        efgtoa@pp 0066  
                                      efgtoa@ou 0074  EUSART1_SetOverrunErrorHandler@interruptHandler 0001  
                                      isa$xinst 000000                                        _vfprintf CE40  
                                  _SSP1STATbits 000FC7                     _EUSART1_FramingErrorHandler 00FE  
                   __end_of_I2C1_MasterSendNack CA68                                      _INTCONbits 000FF2  
                                      memcpy@d1 0001                                        memcpy@s1 0003  
                          _I2C1_MasterGetRxData CB6A                           _I2C1_MasterSendTxData CA0C  
                                      isdigit@c 0001                             ADC_read@busy_status 0012  
                                ?_I2C1_WaitIdle 0001                                       sprintf@ap 00A2  
                                   _send_string D0FA                               ??_i2c_driver_init 0001  
                       ?_I2C1_MasterIsRxBufFull 0001                                        isspace@c 0001  
                       ?_PIN_MANAGER_Initialize 0001                        __end_of_I2C1_MasterStart C9DE  
        __end_of_EUSART1_SetOverrunErrorHandler CA0C                  _EUSART1_SetOverrunErrorHandler CA02  
                                     strcpy@src 0003                              _adc_software_reset 00F6  
                                    _RCSTA1bits 000FAB                                     efgtoa@esign 0067  
                                   efgtoa@nmode 0072  EUSART1_SetFramingErrorHandler@interruptHandler 0001  
                                   ??_vfpfcnvrt 0052                 i2c_driver_read_twobytes@devaddr 0011  
                            _eusart1RxLastError 00CA                                        sprintf@f 00A4  
                                      sprintf@s 009A                           ?_I2C1_MasterGetRxData 0001  
                      i2c_driver_read_byte@data 0005                                   ___fladd@signs 000D  
                __end_of_I2C1_MasterIsRxBufFull CA54                  __end_of_PIN_MANAGER_Initialize CC10  
                  __end_of_i2c_driver_read_byte D0FA                         i2c_driver_read_byte@reg 0004  
                                  ___fladd@aexp 000E                                    ___fladd@bexp 000F  
                       I2C1_MasterGetRxData@ack 0002  
